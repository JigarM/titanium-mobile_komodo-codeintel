<?xml version="1.0" encoding="UTF-8"?>
<codeintel description="Titanium Mobile API 1.5.1" name="Titanium_Mobile" version="2.0">
    <file lang="JavaScript" path="">
        <scope ilk="blob" lang="JavaScript" name="titanium">
            <!-- JSON module -->
            <scope ilk="class" name="JSON" doc="Built in Titanium namespace for dealing with JSON. Platforms = [android, iphone, ipad]">
                <scope doc="Will safely evaluate a string encoded as Javascript into a Javascript object." ilk="function" name="parse" returns="Object" signature="parse(jsonString) -&gt; titanium" />
                <scope doc="Will encode a Javascript object into a string." ilk="function" name="stringify" returns="String" signature="stringify(object) -&gt; titanium" />
            </scope>
            <!-- Base Titanium module -->
            <scope ilk="class" name="Titanium" doc="The top level Titanium module. platforms = [android, iphone, ipad]">
                <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                <scope doc="One or more filenames to include as if the Javascript code was written in place.  This is similar to a C #include function." ilk="function" name="include" returns="void" signature="include(name) -&gt; titanium" />
                <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                <variable citdl="String" name="userAgent" />
                <variable citdl="String" name="version" />
                <!-- Titanium.API module -->
                <scope ilk="class" name="API" doc="The top level API module.  The API module is mainly used for logging. Platforms = [android, iphone, ipad]" returns="Object">
                    <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                    <scope doc="Function for logging debug messages." ilk="function" name="debug" returns="void" signature="debug(message) -&gt; titanium" />
                    <scope doc="Function for logging error messages." ilk="function" name="error" returns="void" signature="error(message) -&gt; titanium" />
                    <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                    <scope doc="Function for logging informational messages." ilk="function" name="info" returns="void" signature="info(message) -&gt; titanium" />
                    <scope doc="Function for logging custom severity messages." ilk="function" name="log" returns="void" signature="log(level, message) -&gt; titanium" />
                    <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                    <scope doc="Function for logging warning messages." ilk="function" name="warn" returns="void" signature="warn(message) -&gt; titanium" />
                </scope>
                <!-- Titanium.Accelerometer module -->
                <scope ilk="class" name="Accelerometer" doc="The top level Accelerometer module.  The Accelerometer modules contains methods and properties for using the device accelerometer. Platforms = [android, iphone, ipad]" returns="Object">
                    <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                    <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                    <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                </scope>
                <!-- Titanium.Analytics module -->
                <scope ilk="class" name="Analytics" doc="The top level Analytics module.  The Analytics module is used for transmitting developer-defined Analytics event for your application to the Appcelerator Analytics product. It can be used to augment additional context or application-specific information which can then be accessed during analysis using Analytics. Platforms = [android, iphone, ipad]" returns="Object">
                    <scope doc="Send a generic event for the application session." ilk="function" name="addEvent" returns="void" signature="addEvent(type, name, data) -&gt; titanium" />
                    <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                    <scope doc="Send an analytics feature event for the application session." ilk="function" name="featureEvent" returns="void" signature="featureEvent(name, data) -&gt; titanium" />
                    <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                    <scope doc="Send an analytics nav event for the application session." ilk="function" name="navEvent" returns="void" signature="navEvent(from, to, name, data) -&gt; titanium" />
                    <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                    <scope doc="Send a analytics settings event for the application session." ilk="function" name="settingsEvent" returns="void" signature="settingsEvent(name, data) -&gt; titanium" />
                    <scope doc="Send an analytics timed event for the application session." ilk="function" name="timedEvent" returns="void" signature="timedEvent(name, stop, start, duration, data) -&gt; titanium" />
                    <scope doc="Send an analytics user event for the application session." ilk="function" name="userEvent" returns="void" signature="userEvent(name, data) -&gt; titanium" />
                </scope>
                <!-- Titanium.Android module -->
                <scope ilk="class" name="Android" doc="The top level Android module. Ti.Android.currentActivity provides each context an Activity. This object cannot be created directly. Platforms = [android]" returns="Object">
                    <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                    <scope doc="Create a Titanium.Android.Intent. Used to start other Activities and for marshaling data." ilk="function" name="createIntent" returns="Titanium.Android.Intent" signature="createIntent() -&gt; titanium" />
                    <scope doc="Display chooser interface to allow selection of desired target." ilk="function" name="createIntentChooser" returns="Titanium.Android.Intent" signature="createIntentChooser() -&gt; titanium" />
                    <scope doc="Create a Titanium.Android.Service so you can start/stop it and listen for events from it." ilk="function" name="createService" returns="Titanium.Android.Service" signature="createService(intent) -&gt; titanium" />
                    <scope doc="Create an Intent to be used to start a Service." ilk="function" name="createServiceIntent" returns="Titanium.Android.Intent" signature="createServiceIntent(options) -&gt; titanium" />
                    <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                    <scope doc="Check on state of Service." ilk="function" name="isServiceRunning" returns="Boolean" signature="isServiceRunning(intent) -&gt; titanium" />
                    <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                    <scope doc="Start a simple service." ilk="function" name="startService" returns="void" signature="startService(intent) -&gt; titanium" />
                    <scope doc="Stop a simple service that was started with startService." ilk="function" name="stopService" returns="void" signature="stopService(intent) -&gt; titanium" />
                    <variable citdl="String" name="ACTION_AIRPLANE_MODE_CHANGED" />
                    <variable citdl="String" name="ACTION_ALL_APPS" />
                    <variable citdl="String" name="ACTION_ANSWER" />
                    <variable citdl="String" name="ACTION_ATTACH_DATA" />
                    <variable citdl="String" name="ACTION_BATTERY_CHANGED" />
                    <variable citdl="String" name="ACTION_BATTERY_LOW" />
                    <variable citdl="String" name="ACTION_BATTERY_OKAY" />
                    <variable citdl="String" name="ACTION_BOOT_COMPLETED" />
                    <variable citdl="String" name="ACTION_BUG_REPORT" />
                    <variable citdl="String" name="ACTION_CALL" />
                    <variable citdl="String" name="ACTION_CALL_BUTTON" />
                    <variable citdl="String" name="ACTION_CAMERA_BUTTON" />
                    <variable citdl="String" name="ACTION_CHOOSER" />
                    <variable citdl="String" name="ACTION_CLOSE_SYSTEM_DIALOGS" />
                    <variable citdl="String" name="ACTION_CONFIGURATION_CHANGED" />
                    <variable citdl="String" name="ACTION_CREATE_SHORTCUT" />
                    <variable citdl="String" name="ACTION_DATE_CHANGED" />
                    <variable citdl="String" name="ACTION_DEFAULT" />
                    <variable citdl="String" name="ACTION_DELETE" />
                    <variable citdl="String" name="ACTION_DEVICE_STORAGE_LOW" />
                    <variable citdl="String" name="ACTION_DIAL" />
                    <variable citdl="String" name="ACTION_EDIT" />
                    <variable citdl="String" name="ACTION_GET_CONTENT" />
                    <variable citdl="String" name="ACTION_GTALK_SERVICE_CONNECTED" />
                    <variable citdl="String" name="ACTION_GTALK_SERVICE_DISCONNECTED" />
                    <variable citdl="String" name="ACTION_HEADSET_PLUG" />
                    <variable citdl="String" name="ACTION_INPUT_METHOD_CHANGED" />
                    <variable citdl="String" name="ACTION_INSERT_OR_EDIT" />
                    <variable citdl="String" name="ACTION_MAIN" />
                    <variable citdl="String" name="ACTION_MANAGE_PACKAGE_STORAGE" />
                    <variable citdl="String" name="ACTION_MEDIA_BAD_REMOVAL" />
                    <variable citdl="String" name="ACTION_MEDIA_BUTTON" />
                    <variable citdl="String" name="ACTION_MEDIA_CHECKING" />
                    <variable citdl="String" name="ACTION_MEDIA_EJECT" />
                    <variable citdl="String" name="ACTION_MEDIA_MOUNTED" />
                    <variable citdl="String" name="ACTION_MEDIA_NOFS" />
                    <variable citdl="String" name="ACTION_MEDIA_REMOVED" />
                    <variable citdl="String" name="ACTION_MEDIA_SCANNER_FINISHED" />
                    <variable citdl="String" name="ACTION_MEDIA_SCANNER_SCAN_FILE" />
                    <variable citdl="String" name="ACTION_MEDIA_SCANNER_STARTED" />
                    <variable citdl="String" name="ACTION_MEDIA_SHARED" />
                    <variable citdl="String" name="ACTION_MEDIA_UNMOUNTABLE" />
                    <variable citdl="String" name="ACTION_MEDIA_UNMOUNTED" />
                    <variable citdl="String" name="ACTION_NEW_OUTGOING_CALL" />
                    <variable citdl="String" name="ACTION_PACKAGE_ADDED" />
                    <variable citdl="String" name="ACTION_PACKAGE_CHANGED" />
                    <variable citdl="String" name="ACTION_PACKAGE_DATA_CLEARED" />
                    <variable citdl="String" name="ACTION_PACKAGE_INSTALL" />
                    <variable citdl="String" name="ACTION_PACKAGE_REMOVED" />
                    <variable citdl="String" name="ACTION_PACKAGE_REPLACED" />
                    <variable citdl="String" name="ACTION_PACKAGE_RESTARTED" />
                    <variable citdl="String" name="ACTION_PICK" />
                    <variable citdl="String" name="ACTION_PICK_ACTIVITY" />
                    <variable citdl="String" name="ACTION_POWER_CONNECTED" />
                    <variable citdl="String" name="ACTION_POWER_DISCONNECTED" />
                    <variable citdl="String" name="ACTION_POWER_USAGE_SUMMARY" />
                    <variable citdl="String" name="ACTION_PROVIDER_CHANGED" />
                    <variable citdl="String" name="ACTION_REBOOT" />
                    <variable citdl="String" name="ACTION_RUN" />
                    <variable citdl="String" name="ACTION_SCREEN_OFF" />
                    <variable citdl="String" name="ACTION_SCREEN_ON" />
                    <variable citdl="String" name="ACTION_SEARCH" />
                    <variable citdl="String" name="ACTION_SEARCH_LONG_PRESS" />
                    <variable citdl="String" name="ACTION_SEND" />
                    <variable citdl="String" name="ACTION_SENDTO" />
                    <variable citdl="String" name="ACTION_SEND_MULTIPLE" />
                    <variable citdl="String" name="ACTION_SET_WALLPAPER" />
                    <variable citdl="String" name="ACTION_SHUTDOWN" />
                    <variable citdl="String" name="ACTION_SYNC" />
                    <variable citdl="String" name="ACTION_SYSTEM_TUTORIAL" />
                    <variable citdl="String" name="ACTION_TIME_CHANGED" />
                    <variable citdl="String" name="ACTION_TIME_TICK" />
                    <variable citdl="String" name="ACTION_UID_REMOVED" />
                    <variable citdl="String" name="ACTION_UMS_CONNECTED" />
                    <variable citdl="String" name="ACTION_UMS_DISCONNECTED" />
                    <variable citdl="String" name="ACTION_USER_PRESENT" />
                    <variable citdl="String" name="ACTION_VIEW" />
                    <variable citdl="String" name="ACTION_VOICE_COMMAND" />
                    <variable citdl="String" name="ACTION_WALLPAPER_CHANGED" />
                    <variable citdl="String" name="ACTION_WEB_SEARCH" />
                    <variable citdl="String" name="CATEGORY_ALTERNATIVE" />
                    <variable citdl="String" name="CATEGORY_BROWSABLE" />
                    <variable citdl="String" name="CATEGORY_DEFAULT" />
                    <variable citdl="String" name="CATEGORY_DEVELOPMENT_PREFERENCE" />
                    <variable citdl="String" name="CATEGORY_EMBED" />
                    <variable citdl="String" name="CATEGORY_FRAMEWORK_INSTRUMENTATION_TEST" />
                    <variable citdl="String" name="CATEGORY_HOME" />
                    <variable citdl="String" name="CATEGORY_INFO" />
                    <variable citdl="String" name="CATEGORY_LAUNCHER" />
                    <variable citdl="String" name="CATEGORY_MONKEY" />
                    <variable citdl="String" name="CATEGORY_OPENABLE" />
                    <variable citdl="String" name="CATEGORY_PREFERENCE" />
                    <variable citdl="String" name="CATEGORY_SAMPLE_CODE" />
                    <variable citdl="String" name="CATEGORY_SELECTED_ALTERNATIVE" />
                    <variable citdl="String" name="CATEGORY_TAB" />
                    <variable citdl="String" name="CATEGORY_TEST" />
                    <variable citdl="String" name="CATEGORY_UNIT_TEST" />
                    <variable citdl="String" name="EXTRA_ALARM_COUNT" />
                    <variable citdl="String" name="EXTRA_BCC" />
                    <variable citdl="String" name="EXTRA_CC" />
                    <variable citdl="String" name="EXTRA_DATA_REMOVED" />
                    <variable citdl="String" name="EXTRA_DONT_KILL_APP" />
                    <variable citdl="String" name="EXTRA_EMAIL" />
                    <variable citdl="String" name="EXTRA_INTENT" />
                    <variable citdl="String" name="EXTRA_KEY_EVENT" />
                    <variable citdl="String" name="EXTRA_PHONE_NUMBER" />
                    <variable citdl="String" name="EXTRA_REPLACING" />
                    <variable citdl="String" name="EXTRA_SHORTCUT_ICON" />
                    <variable citdl="String" name="EXTRA_SHORTCUT_ICON_RESOURCE" />
                    <variable citdl="String" name="EXTRA_SHORTCUT_INTENT" />
                    <variable citdl="String" name="EXTRA_SHORTCUT_NAME" />
                    <variable citdl="String" name="EXTRA_STREAM" />
                    <variable citdl="String" name="EXTRA_SUBJECT" />
                    <variable citdl="String" name="EXTRA_TEMPLATE" />
                    <variable citdl="String" name="EXTRA_TEXT" />
                    <variable citdl="String" name="EXTRA_TITLE" />
                    <variable citdl="String" name="EXTRA_UID" />
                    <variable citdl="Number" name="FILL_IN_ACTION" />
                    <variable citdl="Number" name="FILL_IN_CATEGORIES" />
                    <variable citdl="Number" name="FILL_IN_COMPONENT" />
                    <variable citdl="Number" name="FILL_IN_DATA" />
                    <variable citdl="Number" name="FILL_IN_PACKAGE" />
                    <variable citdl="Number" name="FLAG_ACTIVITY_BROUGHT_TO_FRONT" />
                    <variable citdl="Number" name="FLAG_ACTIVITY_CLEAR_TOP" />
                    <variable citdl="Number" name="FLAG_ACTIVITY_CLEAR_WHEN_TASK_RESET" />
                    <variable citdl="Number" name="FLAG_ACTIVITY_EXCLUDE_FROM_RECENTS" />
                    <variable citdl="Number" name="FLAG_ACTIVITY_FORWARD_RESULT" />
                    <variable citdl="Number" name="FLAG_ACTIVITY_LAUNCHED_FROM_HISTORY" />
                    <variable citdl="Number" name="FLAG_ACTIVITY_MULTIPLE_TASK" />
                    <variable citdl="Number" name="FLAG_ACTIVITY_NEW_TASK" />
                    <variable citdl="Number" name="FLAG_ACTIVITY_NO_HISTORY" />
                    <variable citdl="Number" name="FLAG_ACTIVITY_NO_USER_ACTION" />
                    <variable citdl="Number" name="FLAG_ACTIVITY_PREVIOUS_IS_TOP" />
                    <variable citdl="Number" name="FLAG_ACTIVITY_REORDER_TO_FRONT" />
                    <variable citdl="Number" name="FLAG_ACTIVITY_RESET_TASK_IF_NEEDED" />
                    <variable citdl="Number" name="FLAG_ACTIVITY_SINGLE_TOP" />
                    <variable citdl="Number" name="FLAG_DEBUG_LOG_RESOLUTION" />
                    <variable citdl="Number" name="FLAG_FROM_BACKGROUND" />
                    <variable citdl="Number" name="FLAG_GRANT_READ_URI_PERMISSION" />
                    <variable citdl="Number" name="FLAG_GRANT_WRITE_URI_PERMISSION" />
                    <variable citdl="Number" name="FLAG_RECEIVER_REGISTERED_ONLY" />
                    <variable citdl="Number" name="PENDING_INTENT_FOR_ACTIVITY" />
                    <variable citdl="Number" name="PENDING_INTENT_FOR_BROADCAST" />
                    <variable citdl="Number" name="PENDING_INTENT_FOR_SERVICE" />
                    <variable citdl="Number" name="PENDING_INTENT_MAX_VALUE" />
                    <variable citdl="Object" name="R" />
                    <variable citdl="Number" name="RESULT_CANCELED" />
                    <variable citdl="Number" name="RESULT_FIRST_USER" />
                    <variable citdl="Number" name="RESULT_OK" />
                    <variable citdl="Number" name="SCREEN_ORIENTATION_BEHIND" />
                    <variable citdl="Number" name="SCREEN_ORIENTATION_LANDSCAPE" />
                    <variable citdl="Number" name="SCREEN_ORIENTATION_NOSENSOR" />
                    <variable citdl="Number" name="SCREEN_ORIENTATION_PORTRAIT" />
                    <variable citdl="Number" name="SCREEN_ORIENTATION_SENSOR" />
                    <variable citdl="Number" name="SCREEN_ORIENTATION_UNSPECIFIED" />
                    <variable citdl="Number" name="SCREEN_ORIENTATION_USER" />
                    <variable citdl="Number" name="URI_INTENT_SCHEME" />
                    <!-- Titanium.Android.Activity module -->
                    <scope ilk="class" name="Activity" doc="The Titanium binding of an Android Activity.">
                        <scope doc="Returns the Titanium.Android.Intent that was used to start this Activity." ilk="function" name="getIntent" returns="Titanium.Android.Intent" signature="getIntent() -&gt; titanium" />
                        <scope doc="Get an Android or Application string using the passed-in Resource ID and optional format arguments. Also see Android's documentation for getString and String Resources." ilk="function" name="getString" returns="String" signature="getString(resourceId, format) -&gt; titanium" />
                        <scope doc="Set the requested Activity orientation. Also see Android's documentation for setRequestedOrientation." ilk="function" name="setRequestedOrientation" returns="void" signature="setRequestedOrientation(orientation) -&gt; titanium" />
                        <scope doc="Sets the result of this Activity using an Intent. This should be used in the case when the Activity responds to startActivityForResult. Also see Android's documentation for setResult." ilk="function" name="setResult" returns="void" signature="setResult(resultCode, intent) -&gt; titanium" />
                        <scope doc="Starts a new Activity, using the passed in Intent as the description. Also see Android's documentation for startActivity." ilk="function" name="startActivity" returns="void" signature="startActivity(intent) -&gt; titanium" />
                        <scope doc="The same as startActivity, but also accepts a callback function for handling the result of the started Activity. Also see Android's documentation for startActivityForResult." ilk="function" name="startActivityForResult" returns="void" signature="startActivityForResult(intent, callback) -&gt; titanium" />
                        <variable citdl="Titanium.Android.Intent" name="intent" />
                        <variable citdl="Function" name="onCreateOptionsMenu" />
                        <variable citdl="Function" name="onPrepareOptionsMenu" />
                        <variable citdl="Number" name="requestedOrientation" />
                    </scope>
                    <!-- Titanium.Android.Calendar module -->
                    <scope ilk="class" name="Calendar" doc="The Android.Calendar module provides proxies and methods for accessing the native Android calendar functionality. Platforms = [android]" returns="Object">
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Create and return an instance of Titanium.Android.Calendar.Alert." ilk="function" name="createAlert" returns="Titanium.Android.Calendar.Alert" signature="createAlert(parameters) -&gt; titanium" />
                        <scope doc="Create and return an instance of Titanium.Android.Calendar.Calendar." ilk="function" name="createCalendar" returns="Titanium.Android.Calendar.Calendar" signature="createCalendar(parameters) -&gt; titanium" />
                        <scope doc="Create and return an instance of Titanium.Android.Calendar.Event." ilk="function" name="createEvent" returns="Titanium.Android.Calendar.Event" signature="createEvent(parameters) -&gt; titanium" />
                        <scope doc="Create and return an instance of Titanium.Android.Calendar.Reminder." ilk="function" name="createReminder" returns="Titanium.Android.Calendar.Reminder" signature="createReminder(parameters) -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Returns the Titanium.Android.Calendar.Calendar object specified by the given integer id." ilk="function" name="getCalendarById" returns="Titanium.Android.Calendar.Calendar" signature="getCalendarById(id) -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <variable citdl="Number" name="METHOD_ALERT" />
                        <variable citdl="Number" name="METHOD_DEFAULT" />
                        <variable citdl="Number" name="METHOD_EMAIL" />
                        <variable citdl="Number" name="METHOD_SMS" />
                        <variable citdl="Number" name="STATE_DISMISSED" />
                        <variable citdl="Number" name="STATE_FIRED" />
                        <variable citdl="Number" name="STATE_SCHEDULED" />
                        <variable citdl="Number" name="STATUS_CANCELED" />
                        <variable citdl="Number" name="STATUS_CONFIRMED" />
                        <variable citdl="Number" name="STATUS_TENTATIVE" />
                        <variable citdl="Number" name="VISIBILITY_CONFIDENTIAL" />
                        <variable citdl="Number" name="VISIBILITY_DEFAULT" />
                        <variable citdl="Number" name="VISIBILITY_PRIVATE" />
                        <variable citdl="Number" name="VISIBILITY_PUBLIC" />
                        <variable citdl="Array" name="allAlerts" />
                        <variable citdl="Array" name="allCalendars" />
                        <variable citdl="Array" name="selectableCalendars" />
                        <!-- Titanium.Android.Calendar.Alert object-->
                        <scope ilk="class" name="Alert" doc="An object which represents a single alert for an event in an Android calendar.">
                            <variable citdl="Date" name="alarmTime" />
                            <variable citdl="Date" name="begin" />
                            <variable citdl="Date" name="end" />
                            <variable citdl="Number" name="eventId" />
                            <variable citdl="String" name="id" />
                            <variable citdl="Number" name="minutes" />
                            <variable citdl="Number" name="state" />
                        </scope>
                        <!-- Titanium.Android.Calendar.Calendar object -->
                        <scope ilk="class" name="Calendar" doc="An object which represents a single calendar in Android.">
                            <scope doc="Add an event to the calendar. Returns the created Titanium.Android.Calendar.Event." ilk="function" name="createEvent" returns="Titanium.Android.Calendar.Event" signature="createEvent(properties) -&gt; titanium" />
                            <scope doc="Returns the Titanium.Android.Calendar.Event object for the event with the given integer id." ilk="function" name="getEventById" returns="Titanium.Android.Calendar.Event" signature="getEventById(id) -&gt; titanium" />
                            <scope doc="Returns an array of Titanium.Android.Calendar.Event objects with all events in the given date range." ilk="function" name="getEventsBetweenDates" returns="Array" signature="getEventsBetweenDates(date1, date2) -&gt; titanium" />
                            <scope doc="Returns an array of Titanium.Android.Calendar.Event objects with all events on the given date" ilk="function" name="getEventsInDate" returns="Array" signature="getEventsInDate(year, month, day) -&gt; titanium" />
                            <scope doc="Returns an array of Titanium.Android.Calendar.Event objects with all events in the given month." ilk="function" name="getEventsInMonth" returns="Array" signature="getEventsInMonth(year, month) -&gt; titanium" />
                            <scope doc="Returns an array of Titanium.Android.Calendar.Event objects with all events in the given year." ilk="function" name="getEventsInYear" returns="" signature="getEventsInYear(year) -&gt; titanium" />
                            <variable citdl="Boolean" name="hidden" />
                            <variable citdl="String" name="id" />
                            <variable citdl="String" name="name" />
                            <variable citdl="Boolean" name="selected" />
                        </scope>
                        <!-- Titanium.Android.Calendar.Event object -->
                        <scope ilk="class" name="Event" doc="An object which represents a single event in an Android calendar.">
                            <scope doc="Create an alert for this event.  Pass a dictionary object containing attributes corresponding to properties of Titanium.Android.Calendar.Alert.  Returns the created alert." ilk="function" name="createAlert" returns="Titanium.Android.Calendar.Alert" signature="createAlert(data) -&gt; titanium" />
                            <scope doc="Create a reminder for this event.  Pass a dictionary object containing attributes corresponding to properties of Titanium.Android.Calendar.Reminder.  Returns the created Reminder." ilk="function" name="createReminder" returns="Titanium.Android.Calendar.Reminder" signature="createReminder(data) -&gt; titanium" />
                            <scope doc="Returns the value of the given extended property key string." ilk="function" name="getExtendedProperty" returns="String" signature="getExtendedProperty(name) -&gt; titanium" />
                            <scope doc="Set the value of the named extended property." ilk="function" name="setExtendedProperty" returns="void" signature="setExtendedProperty(name, value) -&gt; titanium" />
                            <variable citdl="Array" name="alerts" />
                            <variable citdl="Boolean" name="allDay" />
                            <variable citdl="Date" name="begin" />
                            <variable citdl="String" name="description" />
                            <variable citdl="Date" name="end" />
                            <variable citdl="Object" name="extendedProperties" />
                            <variable citdl="Boolean" name="hasAlarm" />
                            <variable citdl="Boolean" name="hasExtendedProperties" />
                            <variable citdl="String" name="id" />
                            <variable citdl="String" name="location" />
                            <variable citdl="Array" name="reminders" />
                            <variable citdl="Number" name="status" />
                            <variable citdl="String" name="title" />
                            <variable citdl="Number" name="visibility" />
                        </scope>
                        <!-- Titanium.Android.Calendar.Reminder object -->
                        <scope ilk="class" name="Reminder" doc="An object which represents a single reminder for an event in an Android calendar.  Reminders should not be created directly, but rather by using the createReminder method of Titanium.Android.Calendar.Event.">
                            <variable citdl="String" name="id" />
                            <variable citdl="Number" name="method" />
                            <variable citdl="Number" name="minutes" />
                        </scope>
                    </scope>
                    <!-- Titanium.Android.Intent module -->
                    <scope ilk="class" name="Intent" doc="The Titanium binding of an Android Intent.">-->
                        <scope doc="Add a category to this Intent. See the category constants in Titanium.Android." ilk="function" name="addCategory" returns="void" signature="addCategory(name) -&gt; titanium" />
                        <scope doc="Get a boolean property from this Intent." ilk="function" name="getBooleanExtra" returns="Boolean" signature="getBooleanExtra(name) -&gt; titanium" />
                        <scope doc="Get the Data URI from this Intent." ilk="function" name="getData" returns="void" signature="getData() -&gt; titanium" />
                        <scope doc="Get a double property from this Intent." ilk="function" name="getDoubleExtra" returns="Number" signature="getDoubleExtra(name) -&gt; titanium" />
                        <scope doc="Get an int property from this Intent." ilk="function" name="getIntExtra" returns="Number" signature="getIntExtra(name) -&gt; titanium" />
                        <scope doc="Get a long property from this Intent." ilk="function" name="getLongExtra" returns="Number" signature="getLongExtra(name) -&gt; titanium" />
                        <scope doc="Get a string property from this Intent." ilk="function" name="getStringExtra" returns="String" signature="getStringExtra(name) -&gt; titanium" />
                        <scope doc="Returns whether or not this Intent has a property." ilk="function" name="hasExtra" returns="Boolean" signature="hasExtra(name) -&gt; titanium" />
                        <scope doc="Put an extra property on this Intent." ilk="function" name="putExtra" returns="void" signature="putExtra(name, value) -&gt; titanium" />
                        <variable citdl="String" name="action" />
                        <variable citdl="String" name="className" />
                        <variable citdl="String" name="data" />
                        <variable citdl="String" name="packageName" />
                        <variable citdl="String" name="type" />
                        <variable citdl="String" name="url" />
                    </scope>
                    <!-- Titanium.Android.Menu module -->
                    <scope ilk="class" name="Menu" doc="The Titanium binding of an Android Menu.">
                        <scope doc="Creates a Titanium.Android.MenuItem from the passed creation options." ilk="function" name="add" returns="Titanium.Android.MenuItem" signature="add(options) -&gt; titanium" />
                        <scope doc="Clear all items from the menu. You should release all references you have retained to Titanium.Android.MenuItem previously created." ilk="function" name="clear" returns="void" signature="clear() -&gt; titanium" />
                        <scope doc="Close the menu if visible." ilk="function" name="close" returns="void" signature="close() -&gt; titanium" />
                        <scope doc="Locate a Titanium.Android.MenuItem." ilk="function" name="findItem" returns="Titanium.Android.MenuItem" signature="findItem(item) -&gt; titanium" />
                        <scope doc="Return the Titanium.Android.MenuItem at a specific index." ilk="function" name="getItem" returns="Titanium.Android.MenuItem" signature="getItem(index) -&gt; titanium" />
                        <scope doc="Query for any visible menu items." ilk="function" name="hasVisibleItems" returns="Boolean" signature="hasVisibleItems() -&gt; titanium" />
                        <scope doc="Remove all Titanium.Android.MenuItem with the specified groupId." ilk="function" name="removeGroup" returns="void" signature="removeGroup(groupId) -&gt; titanium" />
                        <scope doc="Remove a specific Titanium.Android.MenuItem by the specified itemId." ilk="function" name="removeItem" returns="void" signature="removeItem(itemId) -&gt; titanium" />
                        <scope doc="Enable or disable a group of Titanium.Android.MenuItem by groupId." ilk="function" name="setGroupEnabled" returns="void" signature="setGroupEnabled(groupId, enabled) -&gt; titanium" />
                        <scope doc="Show or hide a group of Titanium.Android.MenuItem by groupId." ilk="function" name="setGroupVisible" returns="void" signature="setGroupVisible(groupId, visible) -&gt; titanium" />
                        <scope doc="Number of Titanium.Android.MenuItem in this menu." ilk="function" name="size" returns="Number" signature="size() -&gt; titanium" />
                        <variable citdl="Array" name="items" />
                    </scope>
                    <!-- Titanium.Android.MenuItem module -->
                    <scope ilk="class" name="MenuItem" doc="The Titanium binding of an Android MenuItem">
                        <scope doc="Retrieve the condensed title of the item." ilk="function" name="getCondensedTitle" returns="String" signature="getCondensedTitle() -&gt; titanium" />
                        <scope doc="Retrieve the groupId for this item." ilk="function" name="getGroupId" returns="Number" signature="getGroupId() -&gt; titanium" />
                        <scope doc="Retrieve the itemId for this item." ilk="function" name="getItemId" returns="Number" signature="getItemId() -&gt; titanium" />
                        <scope doc="Retrieve the sort order." ilk="function" name="getOrder" returns="Number" signature="getOrder() -&gt; titanium" />
                        <scope doc="Retrieve the title of the item." ilk="function" name="getTitle" returns="String" signature="getTitle() -&gt; titanium" />
                        <scope doc="Retrieve the enabled state of the menu." ilk="function" name="isEnabled" returns="Boolean" signature="isEnabled() -&gt; titanium" />
                        <scope doc="Retrieve the visible state of the menu." ilk="function" name="isVisible" returns="Boolean" signature="isVisible() -&gt; titanium" />
                        <scope doc="Set the condensed title for the item." ilk="function" name="setCondensedTitle" returns="void" signature="setCondensedTitle(condensedTitle) -&gt; titanium" />
                        <scope doc="Set the enabled state of the item." ilk="function" name="setEnabled" returns="void" signature="setEnabled(enabled) -&gt; titanium" />
                        <scope doc="Set the icon for the item." ilk="function" name="setIcon" returns="void" signature="setIcon(icon) -&gt; titanium" />
                        <scope doc="Set the title for the item." ilk="function" name="setTitle" returns="void" signature="setTitle(title) -&gt; titanium" />
                        <scope doc="Set the visible state of the item." ilk="function" name="setVisible" returns="void" signature="setVisible(visible) -&gt; titanium" />
                        <variable citdl="Boolean" name="enabled" />
                        <variable citdl="Number" name="groupId" />
                        <variable citdl="Number" name="itemId" />
                        <variable citdl="Number" name="order" />
                        <variable citdl="String" name="title" />
                        <variable citdl="String" name="titleCondensed" />
                        <variable citdl="Boolean" name="visible" />
                    </scope>
                    <!-- Titanium.Android.PendingIntent module -->
                    <scope ilk="class" name="PendingIntent" doc="The Titanium binding of an Android Pending Intent.">
                        <variable citdl="Titanium.Android.Activity" name="activity" />
                        <variable citdl="Number" name="flags" />
                        <variable citdl="Titanium.Android.Intent" name="intent" />
                        <variable citdl="Number" name="type" />
                    </scope>
                    <!-- Titanium.Android.R module -->
                    <scope ilk="class" name="R" doc="The Titanium binding of android.R.">
                        <variable citdl="Object" name="anim" />
                        <variable citdl="Object" name="array" />
                        <variable citdl="Object" name="attr" />
                        <variable citdl="Object" name="color" />
                        <variable citdl="Object" name="dimen" />
                        <variable citdl="Object" name="drawable" />
                        <variable citdl="Object" name="id" />
                        <variable citdl="Object" name="integer" />
                        <variable citdl="Object" name="layout" />
                        <variable citdl="Object" name="string" />
                        <variable citdl="Object" name="style" />
                        <variable citdl="Object" name="styleable" />
                    </scope>
                    <!-- Titanium.Android.Service module -->
                    <scope ilk="class" name="Service" doc="The Titanium binding of an Android Service.  Can be used to start/stop the service directly and listen for service-specific events.  In the Javascript-based services you write, this can be referenced with Titanium.Android.currentService.  You can create an instance of the service with Titanium.Android.createService.">
                        <scope doc="Start the Service.  Effective only if this instance of Titanium.Android.Service was created with Titanium.Android.createService." ilk="function" name="start" returns="void" signature="start() -&gt; titanium" />
                        <scope doc="Stop this running instance of the Service." ilk="function" name="stop" returns="void" signature="stop() -&gt; titanium" />
                        <variable citdl="Titanium.Android.Intent" name="intent" />
                        <variable citdl="Number" name="serviceInstanceId" />
                    </scope>
                </scope>
                <!-- Titanium.App module -->
                <scope ilk="class" name="App" doc="The top level App module.  The App module is mainly used for accessing information about the application at runtime. Platforms = [android, iphone, ipad]" returns="Object">
                    <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                    <scope doc="Fire a cross-context application event.  listeners in any Javascript context can receive these events if they have added themselves as a listener with the event name.  NOTE: you can only pass JSON serializable data in the data payload of the event object since the data must be transportable between contexts." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event, data) -&gt; titanium" />
                    <scope doc="Return the arguments passed to the application on startup as a dictionary." ilk="function" name="getArguments" returns="Object" signature="getArguments() -&gt; titanium" />
                    <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                    <variable citdl="String" name="copyright" />
                    <variable citdl="String" name="description" />
                    <variable citdl="String" name="guid" />
                    <variable citdl="String" name="id" />
                    <variable citdl="Boolean" name="idleTimerDisabled" />
                    <variable citdl="String" name="name" />
                    <variable citdl="Boolean" name="proximityDetection" />
                    <variable citdl="Number" name="proximityState" />
                    <variable citdl="String" name="publisher" />
                    <variable citdl="String" name="url" />
                    <variable citdl="String" name="version" />
                    <!-- Titanium.App.Android module -->
                    <scope ilk="class" name="Android" doc="A module used to access the Android's Application Resources. Platforms = [android]" returns="Object">
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <variable citdl="Titanium.App.Android.R" name="R" />
                        <!-- Titanium.App.Android.R module -->
                        <scope ilk="class" name="R" doc="The Titanium binding of Application Resources" returns="Object" />
                    </scope>
                    <!-- Titanium.App.Properties module -->
                    <scope ilk="class" name="Properties" doc="The App Properties module is used for storing application related property/value pairs which persist beyond application sessions. Platforms = [android, iphone, ipad]">
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Return a boolean value." ilk="function" name="getBool" returns="Boolean" signature="getBool(property, default) -&gt; titanium" />
                        <scope doc="Return a double value." ilk="function" name="getDouble" returns="Number" signature="getDouble(property, default) -&gt; titanium" />
                        <scope doc="Return an integer value." ilk="function" name="getInt" returns="Number" signature="getInt(property, default) -&gt; titanium" />
                        <scope doc="Return a value as an array." ilk="function" name="getList" returns="Array" signature="getList(property, default) -&gt; titanium" />
                        <scope doc="Return a string value." ilk="function" name="getString" returns="String" signature="getString(property, default) -&gt; titanium" />
                        <scope doc="Returns true if the property exists." ilk="function" name="hasProperty" returns="Boolean" signature="hasProperty(property, default) -&gt; titanium" />
                        <scope doc="Return an array of property properties." ilk="function" name="listProperties" returns="Array" signature="listProperties() -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Remove an existing property." ilk="function" name="removeProperty" returns="void" signature="removeProperty(property) -&gt; titanium" />
                        <scope doc="Set a property as a boolean value." ilk="function" name="setBool" returns="" signature="setBool(property, value) -&gt; titanium" />
                        <scope doc="Set a property as a double value." ilk="function" name="setDouble" returns="void" signature="setDouble(property, value) -&gt; titanium" />
                        <scope doc="Set a property as an integer value." ilk="function" name="setInt" returns="void" signature="setInt(property, value) -&gt; titanium" />
                        <scope doc="Set a property as an array value." ilk="function" name="setList" returns="void" signature="setList(property, value) -&gt; titanium" />
                        <scope doc="Set a property as a string value." ilk="function" name="setString" returns="void" signature="setString(property, value) -&gt; titanium" />
                    </scope>
                    <!-- Titanium.App.iOS module -->
                    <scope ilk="class" name="iOS" doc="The top level App iOS module.  The App iOS module is only available on iOS based devices. Platforms = [iphone, ipad]" returns="Object">
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Cancel all scheduled local notifications." ilk="function" name="cancelAllLocalNotifications" returns="void" signature="cancelAllLocalNotifications() -&gt; titanium" />
                        <scope doc="Cancel a specific local notification." ilk="function" name="cancelLocalNotification" returns="void" signature="cancelLocalNotification() -&gt; titanium" />
                        <scope doc="Create and return an instance of Titanium.App.iOS.BackgroundService." ilk="function" name="createBackgroundService" returns="Titanium.App.iOS.BackgroundService" signature="createBackgroundService(parameters) -&gt; titanium" />
                        <scope doc="Create and return an instance of Titanium.App.iOS.LocalNotification." ilk="function" name="createLocalNotification" returns="Titanium.App.iOS.LocalNotification" signature="createLocalNotification(parameters) -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Register a background service to run when the app is backgrounded." ilk="function" name="registerBackgroundService" returns="Titanium.App.iOS.BackgroundService" signature="registerBackgroundService(params) -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Schedule a local notification." ilk="function" name="scheduleLocalNotification" returns="Titanium.App.iOS.LocalNotification" signature="scheduleLocalNotification(params) -&gt; titanium" />
                        <!-- Titanium.App.iOS.BackgroundService object -->
                        <scope ilk="class" name="BackgroundService" doc="The BackgroundService is created by Titanium.App.iOS.registerBackgroundService. Platforms = [iphone, ipad]" returns="Object">
                            <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                            <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                            <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                            <scope doc="Stop the service from the current background session to conserve resources." ilk="function" name="stop" returns="void" signature="stop() -&gt; titanium" />
                            <scope doc="Unregister the background service." ilk="function" name="unregister" returns="void" signature="unregister() -&gt; titanium" />
                        </scope>
                        <!-- Titanium.App.iOS.LocalNotification object -->
                        <scope ilk="class" name="LocalNotification" doc="The LocalNotification is created by Titanium.App.iOS.scheduleLocalNotification. Platforms = [iphone, ipad]" returns="Object">
                            <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                            <scope doc="Cancel the pending notification." ilk="function" name="cancel" returns="void" signature="cancel() -&gt; titanium" />
                            <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                            <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        </scope>
                    </scope>
                </scope>
                <!-- Titanium.Contacts module -->
                <scope ilk="class" name="Contacts" doc="The top level Contacts module.  The Contacts module is used accessing the device Address Book. Platforms = [android, iphone, ipad]" returns="Object">
                    <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.Contacts.Group." ilk="function" name="createGroup" returns="Titanium.Contacts.Group" signature="createGroup(parameters) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.Contacts.Person." ilk="function" name="createPerson" returns="Titanium.Contacts.Person" signature="createPerson(parameters) -&gt; titanium" />
                    <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                    <scope doc="Returns an of all Titanium.Contacts.Group objects in the contacts database." ilk="function" name="getAllGroups" returns="Array" signature="getAllGroups() -&gt; titanium" />
                    <scope doc="Returns an array of all Titanium.Contacts.Person objects in the contacts database." ilk="function" name="getAllPeople" returns="Array" signature="getAllPeople() -&gt; titanium" />
                    <scope doc="Returns a Titanium.Contacts.Group object with the given ID." ilk="function" name="getGroupByID" returns="Titanium.Contacts.Group" signature="getGroupByID(id) -&gt; titanium" />
                    <scope doc="Returns an array of Titanium.Contacts.Person objects who have a name (first, last, middle, composite) which matches the given name." ilk="function" name="getPeopleWithName" returns="Array" signature="getPeopleWithName(name) -&gt; titanium" />
                    <scope doc="Returns a Titanium.Contacts.Person object with the given ID." ilk="function" name="getPersonByID" returns="Titanium.Contacts.Person" signature="getPersonByID(id) -&gt; titanium" />
                    <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                    <scope doc="Removes a group from the contacts database (NOTE: not supported on Android.)." ilk="function" name="removeGroup" returns="void" signature="removeGroup(group) -&gt; titanium" />
                    <scope doc="Removes a person from the contacts database. (NOTE: not supported on Android.)." ilk="function" name="removePerson" returns="void" signature="removePerson(person) -&gt; titanium" />
                    <scope doc="Reverts all changes made to the previous save of the database (NOTE: not supported on Android.)." ilk="function" name="revert" returns="void" signature="revert() -&gt; titanium" />
                    <scope doc="Saves all changes to contacts to the database (NOTE: not supported on Android.)." ilk="function" name="save" returns="void" signature="save() -&gt; titanium" />
                    <scope doc="Displays the contact picker." ilk="function" name="showContacts" returns="void" signature="showContacts(cancel, selectedPerson, selectedProperty, animated, fields) -&gt; titanium" />
                    <variable citdl="Number" name="CONTACTS_KIND_ORGANIZATION" />
                    <variable citdl="Number" name="CONTACTS_KIND_PERSON" />
                    <variable citdl="Number" name="CONTACTS_SORT_FIRST_NAME" />
                    <variable citdl="Number" name="CONTACTS_SORT_LAST_NAME" />
                    <!-- Titanium.Contacts.Group object -->
                    <scope ilk="class" name="Group" doc="An object which represents a group in the contacts database. Platforms = [iphone, ipad]">
                        <scope doc="Adds a person to the group." ilk="function" name="add" returns="void" signature="add(person) -&gt; titanium" />
                        <scope doc="The complete list of members of the group." ilk="function" name="members" returns="Array" signature="members() -&gt; titanium" />
                        <scope doc="Removes a person from the group." ilk="function" name="remove" returns="void" signature="remove(person) -&gt; titanium" />
                        <scope doc="A list of sorted members." ilk="function" name="sortedMembers" returns="Array" signature="sortedMembers(sortBy) -&gt; titanium" />
                        <variable citdl="String" name="name" />
                    </scope>
                    <!-- Titanium.Contacts.Person object -->
                    <scope ilk="class" name="Person" doc="An object which represents a person in the contacts database. Platforms = [iphone, ipad]">
                        <variable citdl="Object" name="URL" />
                        <variable citdl="Object" name="address" />
                        <variable citdl="String" name="birthday" />
                        <variable citdl="String" name="created" />
                        <variable citdl="Object" name="date" />
                        <variable citdl="String" name="department" />
                        <variable citdl="Object" name="email" />
                        <variable citdl="String" name="firstName" />
                        <variable citdl="String" name="firstPhonetic" />
                        <variable citdl="String" name="fullName" />
                        <variable citdl="Object" name="image" />
                        <variable citdl="Object" name="instantMessage" />
                        <variable citdl="String" name="jobTitle" />
                        <variable citdl="Number" name="kind" />
                        <variable citdl="String" name="lastName" />
                        <variable citdl="String" name="lastPhonetic" />
                        <variable citdl="String" name="middleName" />
                        <variable citdl="String" name="middlePhonetic" />
                        <variable citdl="String" name="modified" />
                        <variable citdl="String" name="nickname" />
                        <variable citdl="String" name="note" />
                        <variable citdl="String" name="organization" />
                        <variable citdl="Object" name="phone" />
                        <variable citdl="String" name="prefix" />
                        <variable citdl="Object" name="relatedNames" />
                        <variable citdl="String" name="suffix" />
                    </scope>
                </scope>
                <!-- Titanium.Database module -->
                <scope ilk="class" name="Database" doc="The top level Database module.  The Database module is used for creating and accessing the in-application Database. Platforms = [android, iphone, ipad]" returns="Object">
                    <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                    <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                    <scope doc="Install a database from the application Resources folder (at build time) and return a reference to the opened database. it is safe to call this method multiple times since this method will only install once if it doesn't already exist on the device." ilk="function" name="install" returns="Titanium.Database.DB" signature="install(path, name) -&gt; titanium" />
                    <scope doc="Open a database. if it doesn't yet exist, create it." ilk="function" name="open" returns="Titanium.Database.DB" signature="open(name) -&gt; titanium" />
                    <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                    <!-- Titanium.Database.DB object -->
                    <scope ilk="class" name="DB" doc="The Database instance returned by Titanium.Database.open or Titanium.Database.install. Platforms = [android, iphone, ipad]">
                        <scope doc="Close the database and release resources from memory. once closed, this instance is no longer valid and must no longer be used." ilk="function" name="close" returns="void" signature="close() -&gt; titanium" />
                        <scope doc="Execute a SQL statement against the database and returns a ResultSet." ilk="function" name="execute" returns="Titanium Database.ResultSet" signature="execute(sql, vararg) -&gt; titanium" />
                        <scope doc="Remove the database files for this instance from disk. WARNING: this is a destructive operation and cannot be reversed. All data in the database will be lost upon calling this function. Use with caution.." ilk="function" name="remove" returns="void" signature="remove() -&gt; titanium" />
                        <variable citdl="Number" name="lastInsertRowId" />
                        <variable citdl="String" name="name" />
                        <variable citdl="Number" name="rowsAffected" />
                    </scope>
                    <!-- Titanium Database.ResultSet object -->
                    <scope ilk="class" name="ResultSet" doc="The ResultSet instance returned by invoking a database SQL execute. Platforms = [android, iphone, ipad]">
                        <scope doc="Close the result set and release resources. once closed, this result set must no longer be used." ilk="function" name="close" returns="void" signature="close() -&gt; titanium" />
                        <scope doc="Retrieve a row value by field index." ilk="function" name="field" returns="Object" signature="field(index) -&gt; titanium" />
                        <scope doc="Retrieve a row value by field name." ilk="function" name="fieldByName" returns="Object" signature="fieldByName(name) -&gt; titanium" />
                        <scope doc="Return the number of columns in the result set." ilk="function" name="fieldCount" returns="Number" signature="fieldCount() -&gt; titanium" />
                        <scope doc="Return the field name for field index." ilk="function" name="fieldName" returns="String" signature="fieldName(index) -&gt; titanium" />
                        <scope doc="Return true if the row is a valid row." ilk="function" name="isValidRow" returns="Boolean" signature="isValidRow() -&gt; titanium" />
                        <variable citdl="Number" name="rowCount" />
                        <variable citdl="Boolean" name="validRow" />
                    </scope>
                </scope>
                <!-- Titanium.Facebook module -->
                <scope ilk="class" name="Facebook" doc="The top level Facebook module.  The Facebook module is used for connecting your application with Facebook through Facebook Connect. Platforms = [android, iphone, ipad]">
                    <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.Facebook.LoginButton." ilk="function" name="createLoginButton" returns="Titanium.Facebook.LoginButton" signature="createLoginButton(params, properties) -&gt; titanium" />
                    <scope doc="Execute a FB API execute request." ilk="function" name="execute" returns="" signature="execute(method, params, callback, data) -&gt; titanium" />
                    <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                    <scope doc="Checks the existing permission and returns true if the user has granted the requested permission." ilk="function" name="hasPermission" returns="Boolean" signature="hasPermission(permission) -&gt; titanium" />
                    <scope doc="Return true if the user has logged in." ilk="function" name="isLoggedIn" returns="Boolean" signature="isLoggedIn() -&gt; titanium" />
                    <scope doc="Execute a stream request to FB." ilk="function" name="publishStream" returns="void" signature="publishStream(title, data, target, callback) -&gt; titanium" />
                    <scope doc="Execute a FQL query against the FB API." ilk="function" name="query" returns="void" signature="query(fql, callback) -&gt; titanium" />
                    <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                    <scope doc="Request a special permission from the user." ilk="function" name="requestPermission" returns="void" signature="requestPermission(permission, callback) -&gt; titanium" />
                    <variable citdl="Boolean" name="loggedIn" />
                    <variable citdl="Object" name="permissions" />
                    <variable citdl="Object" name="session" />
                    <variable citdl="Number" name="userId" />
                    <!-- Titanium.Facebook.LoginButton object -->
                    <scope ilk="class" name="LoginButton" doc="The Login Button created by Titanium.Facebook.createLoginButton. Platforms = [android, iphone, ipad]" returns="Object">
                        <scope doc="Add a child to the view hierarchy." ilk="function" name="add" returns="void" signature="add(view) -&gt; titanium" />
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Animate the view." ilk="function" name="animate" returns="void" signature="animate(properties, callback) -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Hide the view." ilk="function" name="hide" returns="void" signature="hide() -&gt; titanium" />
                        <scope doc="Remove a previously add view from the view hierarchy." ilk="function" name="remove" returns="" signature="remove(view) -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Make the view visible." ilk="function" name="show" returns="void" signature="show() -&gt; titanium" />
                        <scope doc="Return a Blob image of the rendered view." ilk="function" name="toImage" returns="Object" signature="toImage(callback) -&gt; titanium" />
                        <variable citdl="Object" name="anchorPoint" />
                        <variable citdl="Object" name="animatedCenterPoint" />
                        <variable citdl="String" name="backgroundColor" />
                        <variable citdl="String" name="backgroundDisabledColor" />
                        <variable citdl="String" name="backgroundDisabledImage" />
                        <variable citdl="String" name="backgroundFocusedColor" />
                        <variable citdl="String" name="backgroundFocusedImage" />
                        <variable citdl="Object" name="backgroundGradient" />
                        <variable citdl="String" name="backgroundImage" />
                        <variable citdl="Number" name="backgroundLeftCap" />
                        <variable citdl="String" name="backgroundSelectedColor" />
                        <variable citdl="String" name="backgroundSelectedImage" />
                        <variable citdl="Number" name="backgroundTopCap" />
                        <variable citdl="String" name="borderColor" />
                        <variable citdl="Number" name="borderRadius" />
                        <variable citdl="Number" name="borderWidth" />
                        <variable citdl="Number or String" name="bottom" />
                        <variable citdl="Object" name="center" />
                        <variable citdl="Boolean" name="focusable" />
                        <variable citdl="String" name="font-family" />
                        <variable citdl="String" name="font-size" />
                        <variable citdl="String" name="font-style" />
                        <variable citdl="String" name="font-weight" />
                        <variable citdl="Number or String" name="height" />
                        <variable citdl="Number or String" name="left" />
                        <variable citdl="Number" name="opacity" />
                        <variable citdl="Number or String" name="right" />
                        <variable citdl="Object" name="size" />
                        <variable citdl="Number" name="softKeyboardOnFocus" />
                        <variable citdl="Number or String" name="top" />
                        <variable citdl="Boolean" name="touchEnabled" />
                        <variable citdl="Object" name="transform" />
                        <variable citdl="Boolean" name="visible" />
                        <variable citdl="Number or String" name="width" />
                        <variable citdl="Number" name="zIndex" />
                    </scope>
                </scope>
                <!-- Titanium.Filesystem module -->
                <scope ilk="class" name="Filesystem" doc="The top level Filesystem module.  The Filesystem module is used for reading and saving files and directories on the device. Platforms = [android, iphone, ipad]" returns="Object">
                    <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.Filesystem.File." ilk="function" name="createFile" returns="Titanium.Filesystem.File" signature="createFile(parameters) -&gt; titanium" />
                    <scope doc="Create temp file and return a Titanium.Filesystem.File." ilk="function" name="createTempDirectory" returns="Titanium.Filesystem.File" signature="createTempDirectory() -&gt; titanium" />
                    <scope doc="Create a temp file and return a Titanium.Filesystem.File." ilk="function" name="createTempFile" returns="Titanium.Filesystem.File" signature="createTempFile() -&gt; titanium" />
                    <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                    <scope doc="Return a fully formed file path as a Titanium.Filesystem.File object." ilk="function" name="getFile" returns="Titanium.Filesystem.File" signature="getFile(path) -&gt; titanium" />
                    <scope doc="Returns true if the device supports external storage such as an SD card." ilk="function" name="isExteralStoragePresent" returns="Boolean" signature="isExteralStoragePresent() -&gt; titanium" />
                    <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                    <variable citdl="Number" name="MODE_APPEND" />
                    <variable citdl="Number" name="MODE_READ" />
                    <variable citdl="Number" name="MODE_WRITE" />
                    <variable citdl="String" name="applicationDataDirectory" />
                    <variable citdl="String" name="applicationDirectory" />
                    <variable citdl="String" name="lineEnding" />
                    <variable citdl="String" name="resourcesDirectory" />
                    <variable citdl="String" name="separator" />
                    <variable citdl="String" name="tempDirectory" />
                    <!-- Titanium.Filesystem.File object -->
                    <scope ilk="class" name="File" doc="The File object which support various filesystem based operations. Platforms = [android, iphone, ipad]" returns="Object">
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Create a directory at the path for the file object." ilk="function" name="createDirectory" returns="Boolean" signature="createDirectory() -&gt; titanium" />
                        <scope doc="Create a file at the path for the file object." ilk="function" name="createFile" returns="Boolean" signature="createFile() -&gt; titanium" />
                        <scope doc="Return the created timestamp for the file." ilk="function" name="createTimestamp" returns="Number" signature="createTimestamp() -&gt; titanium" />
                        <scope doc="Delete the file directory path." ilk="function" name="deleteDirectory" returns="Boolean" signature="deleteDirectory(recursive) -&gt; titanium" />
                        <scope doc="Delete the file." ilk="function" name="deleteFile" returns="Boolean" signature="deleteFile() -&gt; titanium" />
                        <scope doc="Returns true if the file is executable." ilk="function" name="executable" returns="Boolean" signature="executable() -&gt; titanium" />
                        <scope doc="Returns true if the file or directory exists on the device." ilk="function" name="exists" returns="Boolean" signature="exists() -&gt; titanium" />
                        <scope doc="Return the file extension." ilk="function" name="extension" returns="String" signature="extension() -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Return an array of paths in the directory of the file object." ilk="function" name="getDirectoryListing" returns="Array" signature="getDirectoryListing() -&gt; titanium" />
                        <scope doc="Return the file parent." ilk="function" name="getParent" returns="Titanium.Filesystem.File" signature="getParent() -&gt; titanium" />
                        <scope doc="Returns true if the file is hidden." ilk="function" name="hidden" returns="Boolean" signature="hidden() -&gt; titanium" />
                        <scope doc="Return the last modification timestamp for the file." ilk="function" name="modificationTimestamp" returns="Number" signature="modificationTimestamp() -&gt; titanium" />
                        <scope doc="Move the file to another path." ilk="function" name="move" returns="Boolean" signature="move(newpath) -&gt; titanium" />
                        <scope doc="The name of the file." ilk="function" name="name" returns="String" signature="name() -&gt; titanium" />
                        <scope doc="Returns the fully resolved native path." ilk="function" name="nativePath" returns="String" signature="nativePath() -&gt; titanium" />
                        <scope doc="Return the contents of file as blob." ilk="function" name="read" returns="Object" signature="read() -&gt; titanium" />
                        <scope doc="Returns true if the file is readonly." ilk="function" name="readonly" returns="Boolean" signature="readonly() -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Rename the file." ilk="function" name="rename" returns="Boolean" signature="rename(newname) -&gt; titanium" />
                        <scope doc="Make the file executable." ilk="function" name="setExecutable" returns="void" signature="setExecutable() -&gt; titanium" />
                        <scope doc="Make the file hidden." ilk="function" name="setHidden" returns="void" signature="setHidden() -&gt; titanium" />
                        <scope doc="Make the file readonly." ilk="function" name="setReadonly" returns="void" signature="setReadonly() -&gt; titanium" />
                        <scope doc="Return boolean to indicate if the path has space available for storage." ilk="function" name="spaceAvailable" returns="Boolean" signature="spaceAvailable() -&gt; titanium" />
                        <scope doc="Returns true if the file points to a symbolic link." ilk="function" name="symbolicLink" returns="Boolean" signature="symbolicLink() -&gt; titanium" />
                        <scope doc="Write the contents to file." ilk="function" name="write" returns="Boolean" signature="write(contents) -&gt; titanium" />
                        <scope doc="Returns true if the file is writeable." ilk="function" name="writeable" returns="Boolean" signature="writeable() -&gt; titanium" />
                    </scope>
                </scope>
                <!-- Titanium.Geolocation module -->
                <scope ilk="class" name="Geolocation" doc="The top level Geolocation module.  The Geolocation module is used for accessing device location based information. Platforms = [android, iphone, ipad]" returns="Object">
                    <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                    <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                    <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                    <scope doc="Configure the calibration UI. set to false to disable the calibration display." ilk="function" name="setShowCalibration" returns="void" signature="setShowCalibration(show) -&gt; titanium" />
                    <variable citdl="Number" name="ACCURACY_BEST" />
                    <variable citdl="Number" name="ACCURACY_HUNDRED_METERS" />
                    <variable citdl="Number" name="ACCURACY_KILOMETER" />
                    <variable citdl="Number" name="ACCURACY_NEAREST_TEN_METERS" />
                    <variable citdl="Number" name="ACCURACY_THREE_KILOMETERS" />
                    <variable citdl="Number" name="AUTHORIZATION_AUTHORIZED" />
                    <variable citdl="Number" name="AUTHORIZATION_DENIED" />
                    <variable citdl="Number" name="AUTHORIZATION_RESTRICTED" />
                    <variable citdl="Number" name="AUTHORIZATION_UNKNOWN" />
                    <variable citdl="String" name="PROVIDER_GPS" />
                    <variable citdl="String" name="PROVIDER_NETWORK" />
                    <variable citdl="Number" name="locationServicesAuthorization" />
                    <variable citdl="Boolean" name="locationServicesEnabled" />
                    <variable citdl="String" name="preferredProvider" />
                    <variable citdl="String" name="purpose" />
                    <variable citdl="Boolean" name="showCalibration" />
                </scope>
                <!-- Titanium.Gesture module -->
                <scope ilk="class" name="Gesture" doc="The top level Gestures module.  The Gesture module is responsible for high level device gestures that are device-wide. Platforms = [android, iphone, ipad]" returns="Object">
                    <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                    <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                    <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                </scope>
                <!-- Titanium.Locale module -->
                <scope ilk="class" name="Locale" doc="The top level Locale module.  The Locale module works with localization files to which are generated during compilation into the operating system specific localization formats. The Locale module provides locale-specific strings which can be referenced at runtime.  Additionally, the module contains a few methods and properties for querying device locale information. Platforms = [android, iphone, ipad]" returns="Object">
                    <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                    <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                    <scope doc="Format a telephone number according to the current locale." ilk="function" name="formatTelephoneNumber" returns="String" signature="formatTelephoneNumber(number) -&gt; titanium" />
                    <scope doc="Return a currency code for a given locale. (Android only)." ilk="function" name="getCurrencyCode" returns="String" signature="getCurrencyCode(locale) -&gt; titanium" />
                    <scope doc="Return a currency symbol for the given currency code. (Android only)." ilk="function" name="getCurrencySymbol" returns="String" signature="getCurrencySymbol(currencyCode) -&gt; titanium" />
                    <scope doc="Return a currency symbol for the given locale. (Android only)." ilk="function" name="getLocaleCurrencySymbol" returns="String" signature="getLocaleCurrencySymbol(locale) -&gt; titanium" />
                    <scope doc="Return a localization string." ilk="function" name="getString" returns="String" signature="getString(key, hint) -&gt; titanium" />
                    <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                    <variable citdl="String" name="currentCountry" />
                    <variable citdl="String" name="currentLanguage" />
                    <variable citdl="String" name="currentLocale" />
                </scope>
                <!-- Titanium.Map module -->
                <scope ilk="class" name="Map" doc="The top level Map module.  The Map module is used for creating in-application native maps. Platforms = [android, iphone, ipad]" returns="Object">
                    <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.Map.Annotation." ilk="function" name="createAnnotation" returns="Titanium.Map.Annotation" signature="createAnnotation(parameters) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.Map.MapView." ilk="function" name="createMapView" returns="Titanium.Map.MapView" signature="createMapView(parameters) -&gt; titanium" />
                    <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                    <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                    <variable citdl="Number" name="HYBRID_TYPE" />
                    <variable citdl="Number" name="SATELLITE_TYPE" />
                    <variable citdl="Number" name="STANDARD_TYPE" />
                    <!-- Titanium.Map.Annotation object -->
                    <scope ilk="class" name="Annotation" doc="An Annotation object that is created by the method Titanium.Map.createAnnotation. This object gives you low level control over annotations that can be added to a Map View. Platforms = [android, iphone, ipad]" returns="Object">
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <variable citdl="Boolean" name="animate" />
                        <variable citdl="String" name="image" />
                        <variable citdl="Number or String" name="leftButton" />
                        <variable citdl="Titanium.UI.View" name="leftView" />
                        <variable citdl="Number" name="pincolor" />
                        <variable citdl="Number or String" name="rightButton" />
                        <variable citdl="Titanium.UI.View" name="rightView" />
                        <variable citdl="String" name="subtitle" />
                        <variable citdl="String" name="subtitleid" />
                        <variable citdl="String" name="title" />
                        <variable citdl="String" name="titleid" />
                    </scope>
                    <!-- Titanium.Map.MapView object -->
                    <scope ilk="class" name="MapView" doc="The MapView is an object created by Titanium.Map.createView and is used for embedding native mapping capabilities as a view in your application.  With native maps, you can control the mapping location, the type of map, the zoom level and you can add custom annotations directly to the map. Platforms = [android, iphone, ipad]" returns="Object">
                        <scope doc="Add a child to the view hierarchy." ilk="function" name="add" returns="void" signature="add(view) -&gt; titanium" />
                        <scope doc="Add a new annotation to the map." ilk="function" name="addAnnotation" returns="void" signature="addAnnotation(annotation) -&gt; titanium" />
                        <scope doc="Add one or more new annotation to the map." ilk="function" name="addAnnotations" returns="void" signature="addAnnotations(annotations) -&gt; titanium" />
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Add a route. currently only supported on iphone." ilk="function" name="addRoute" returns="void" signature="addRoute(route) -&gt; titanium" />
                        <scope doc="Animate the view." ilk="function" name="animate" returns="void" signature="animate(properties, callback) -&gt; titanium" />
                        <scope doc="Cause the annotation to be deselected (hidden)." ilk="function" name="deselectAnnotation" returns="void" signature="deselectAnnotation(annotation) -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Hide the view." ilk="function" name="hide" returns="void" signature="hide() -&gt; titanium" />
                        <scope doc="Remove a previously added view from the view hierarchy." ilk="function" name="remove" returns="void" signature="remove(view) -&gt; titanium" />
                        <scope doc="Removes all annotations added to the map." ilk="function" name="removeAllAnnotations" returns="void" signature="removeAllAnnotations() -&gt; titanium" />
                        <scope doc="Remove an existing annotation from the map." ilk="function" name="removeAnnotation" returns="void" signature="removeAnnotation(annotation) -&gt; titanium" />
                        <scope doc="Remove one or more existing annotations from the map." ilk="function" name="removeAnnotations" returns="void" signature="removeAnnotations(annotations) -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Remove a previously added route. currently only supported on iphone." ilk="function" name="removeRoute" returns="" signature="removeRoute(route) -&gt; titanium" />
                        <scope doc="Cause the annotation to be selected (shown)." ilk="function" name="selectAnnotation" returns="void" signature="selectAnnotation(annotation) -&gt; titanium" />
                        <scope doc="Set and center the map location." ilk="function" name="setLocation" returns="void" signature="setLocation(location) -&gt; titanium" />
                        <scope doc="Set the type of map (satellite, hybrid, standard)." ilk="function" name="setMapType" returns="void" signature="setMapType(mapType) -&gt; titanium" />
                        <scope doc="Make the view visible." ilk="function" name="show" returns="void" signature="show() -&gt; titanium" />
                        <scope doc="Return a Blob image of the rendered view." ilk="function" name="toImage" returns="Object" signature="toImage(callback) -&gt; titanium" />
                        <scope doc="Zoom in or out of the map." ilk="function" name="zoom" returns="void" signature="zoom(level) -&gt; titanium" />
                        <variable citdl="Object" name="anchorPoint" />
                        <variable citdl="Boolean" name="animate" />
                        <variable citdl="Object" name="animatedCenterPoint" />
                        <variable citdl="Array" name="annotations" />
                        <variable citdl="String" name="backgroundColor" />
                        <variable citdl="String" name="backgroundDisabledColor" />
                        <variable citdl="String" name="backgroundDisabledImage" />
                        <variable citdl="String" name="backgroundFocusedColor" />
                        <variable citdl="String" name="backgroundFocusedImage" />
                        <variable citdl="Object" name="backgroundGradient" />
                        <variable citdl="String" name="backgroundImage" />
                        <variable citdl="Number" name="backgroundLeftCap" />
                        <variable citdl="String" name="backgroundSelectedColor" />
                        <variable citdl="String" name="backgroundSelectedImage" />
                        <variable citdl="Number" name="backgroundTopCap" />
                        <variable citdl="String" name="borderColor" />
                        <variable citdl="Number" name="borderRadius" />
                        <variable citdl="Number" name="borderWidth" />
                        <variable citdl="Number or String" name="bottom" />
                        <variable citdl="Object" name="center" />
                        <variable citdl="Boolean" name="focusable" />
                        <variable citdl="String" name="font-family" />
                        <variable citdl="String" name="font-size" />
                        <variable citdl="String" name="font-style" />
                        <variable citdl="String" name="font-weight" />
                        <variable citdl="Number or String" name="height" />
                        <variable citdl="Number or String" name="left" />
                        <variable citdl="Object" name="location" />
                        <variable citdl="Number" name="mapType" />
                        <variable citdl="Number" name="opacity" />
                        <variable citdl="Object" name="region" />
                        <variable citdl="Boolean" name="regionFit" />
                        <variable citdl="Number or String" name="right" />
                        <variable citdl="Object" name="size" />
                        <variable citdl="Number" name="softKeyboardOnFocus" />
                        <variable citdl="Number or String" name="top" />
                        <variable citdl="Boolean" name="touchEnabled" />
                        <variable citdl="Object" name="transform" />
                        <variable citdl="Boolean" name="userLocation" />
                        <variable citdl="Boolean" name="visible" />
                        <variable citdl="Number or String" name="width" />
                        <variable citdl="Number" name="zIndex" />
                    </scope>
                </scope>
                <!-- Titanium.Media module -->
                <scope ilk="class" name="Media" doc="The top level Media module.  The Media module is used accessing the device's media related functionality such as playing audio or recording video. Platforms = [android, iphone, ipad]" returns="Object">
                    <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                    <scope doc="Play a device beep notification." ilk="function" name="beep" returns="void" signature="beep() -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.Media.AudioPlayer." ilk="function" name="createAudioPlayer" returns="Titanium.Media.AudioPlayer" signature="createAudioPlayer(parameters) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.Media.AudioRecorder." ilk="function" name="createAudioRecorder" returns="Titanium.Media.AudioRecorder" signature="createAudioRecorder(parameters) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.Media.Item." ilk="function" name="createItem" returns="Titanium.Media.Item" signature="createItem(parameters) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.Media.MusicPlayer." ilk="function" name="createMusicPlayer" returns="Titanium.Media.MusicPlayer" signature="createMusicPlayer(parameters) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.Media.Sound." ilk="function" name="createSound" returns="Titanium.Media.Sound" signature="createSound(parameters) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.Media.VideoPlayer." ilk="function" name="createVideoPlayer" returns="Titanium.Media.VideoPlayer" signature="createVideoPlayer(parameters) -&gt; titanium" />
                    <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                    <scope doc="Hide the device camera UI. this must be called after calling showCamera and only when autohide is set to false. this method will cause the media capture device be hidden." ilk="function" name="hideCamera" returns="void" signature="hideCamera() -&gt; titanium" />
                    <scope doc="Hide the music library.  This must be called after calling showMusicLibrary and only when autohide is set to false.  iPhone and iPad only." ilk="function" name="hideMusicLibrary" returns="void" signature="hideMusicLibrary() -&gt; titanium" />
                    <scope doc="Return boolean to indicate if the media type is supported." ilk="function" name="isMediaTypeSupported" returns="Boolean" signature="isMediaTypeSupported(media, type) -&gt; titanium" />
                    <scope doc="Open the photo gallery picker." ilk="function" name="openPhotoGallery" returns="void" signature="openPhotoGallery() -&gt; titanium" />
                    <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                    <scope doc="Save media to photo gallery / camera roll." ilk="function" name="saveToPhotoGallery" returns="void" signature="saveToPhotoGallery(media) -&gt; titanium" />
                    <scope doc="Show the camera." ilk="function" name="showCamera" returns="void" signature="showCamera(options) -&gt; titanium" />
                    <scope doc="Show the music library.  iPhone and iPad only." ilk="function" name="showMusicLibrary" returns="void" signature="showMusicLibrary(options) -&gt; titanium" />
                    <scope doc="Start the monitoring of microphone sound level." ilk="function" name="startMicrophoneMonitor" returns="void" signature="startMicrophoneMonitor() -&gt; titanium" />
                    <scope doc="Stop the monitoring of microphone sound level." ilk="function" name="stopMicrophoneMonitor" returns="void" signature="stopMicrophoneMonitor() -&gt; titanium" />
                    <scope doc="Use the device camera to capture a photo. this must be called after calling showCamera and only when autohide is set to false. this method will cause the media capture device to capture a photo and call the success callback." ilk="function" name="takePicture" returns="void" signature="takePicture() -&gt; titanium" />
                    <scope doc="Take a screen shot of the visible UI on the device." ilk="function" name="takeScreenshot" returns="void" signature="takeScreenshot(callback) -&gt; titanium" />
                    <scope doc="Play a device vibration." ilk="function" name="vibrate" returns="void" signature="vibrate() -&gt; titanium" />
                    <variable citdl="Number" name="AUDIO_FILEFORMAT_3GP2" />
                    <variable citdl="Number" name="AUDIO_FILEFORMAT_3GPP" />
                    <variable citdl="Number" name="AUDIO_FILEFORMAT_AIFF" />
                    <variable citdl="Number" name="AUDIO_FILEFORMAT_AMR" />
                    <variable citdl="Number" name="AUDIO_FILEFORMAT_CAF" />
                    <variable citdl="Number" name="AUDIO_FILEFORMAT_MP3" />
                    <variable citdl="Number" name="AUDIO_FILEFORMAT_MP4" />
                    <variable citdl="Number" name="AUDIO_FILEFORMAT_MP4A" />
                    <variable citdl="Number" name="AUDIO_FILEFORMAT_WAVE" />
                    <variable citdl="Number" name="AUDIO_FORMAT_AAC" />
                    <variable citdl="Number" name="AUDIO_FORMAT_ALAW" />
                    <variable citdl="Number" name="AUDIO_FORMAT_APPLE_LOSSLESS" />
                    <variable citdl="Number" name="AUDIO_FORMAT_ILBC" />
                    <variable citdl="Number" name="AUDIO_FORMAT_IMA4" />
                    <variable citdl="Number" name="AUDIO_FORMAT_LINEAR_PCM" />
                    <variable citdl="Number" name="AUDIO_FORMAT_ULAW" />
                    <variable citdl="Number" name="AUDIO_HEADPHONES" />
                    <variable citdl="Number" name="AUDIO_HEADPHONES_AND_MIC" />
                    <variable citdl="Number" name="AUDIO_HEADSET_INOUT" />
                    <variable citdl="Number" name="AUDIO_LINEOUT" />
                    <variable citdl="Number" name="AUDIO_MICROPHONE" />
                    <variable citdl="Number" name="AUDIO_MUTED" />
                    <variable citdl="Number" name="AUDIO_RECEIVER_AND_MIC" />
                    <variable citdl="Number" name="AUDIO_SESSION_MODE_AMBIENT" />
                    <variable citdl="Number" name="AUDIO_SESSION_MODE_PLAYBACK" />
                    <variable citdl="Number" name="AUDIO_SESSION_MODE_PLAY_AND_RECORD" />
                    <variable citdl="Number" name="AUDIO_SESSION_MODE_RECORD" />
                    <variable citdl="Number" name="AUDIO_SESSION_MODE_SOLO_AMBIENT" />
                    <variable citdl="Number" name="AUDIO_SPEAKER" />
                    <variable citdl="Number" name="AUDIO_UNAVAILABLE" />
                    <variable citdl="Number" name="AUDIO_UNKNOWN" />
                    <variable citdl="Number" name="DEVICE_BUSY" />
                    <variable citdl="Number" name="MEDIA_TYPE_PHOTO" />
                    <variable citdl="Number" name="MEDIA_TYPE_VIDEO" />
                    <variable citdl="Number" name="MUSIC_MEDIA_TYPE_ALL" />
                    <variable citdl="Number" name="MUSIC_MEDIA_TYPE_ANY_AUDIO" />
                    <variable citdl="Number" name="MUSIC_MEDIA_TYPE_AUDIOBOOK" />
                    <variable citdl="Number" name="MUSIC_MEDIA_TYPE_MUSIC" />
                    <variable citdl="Number" name="MUSIC_MEDIA_TYPE_PODCAST" />
                    <variable citdl="Number" name="MUSIC_PLAYER_REPEAT_ALL" />
                    <variable citdl="Number" name="MUSIC_PLAYER_REPEAT_DEFAULT" />
                    <variable citdl="Number" name="MUSIC_PLAYER_REPEAT_NONE" />
                    <variable citdl="Number" name="MUSIC_PLAYER_REPEAT_ONE" />
                    <variable citdl="Number" name="MUSIC_PLAYER_SHUFFLE_ALBUMS" />
                    <variable citdl="Number" name="MUSIC_PLAYER_SHUFFLE_DEFAULT" />
                    <variable citdl="Number" name="MUSIC_PLAYER_SHUFFLE_NONE" />
                    <variable citdl="Number" name="MUSIC_PLAYER_SHUFFLE_SONGS" />
                    <variable citdl="Number" name="MUSIC_PLAYER_STATE_INTERRUPTED" />
                    <variable citdl="Number" name="MUSIC_PLAYER_STATE_PAUSED" />
                    <variable citdl="Number" name="MUSIC_PLAYER_STATE_PLAYING" />
                    <variable citdl="Number" name="MUSIC_PLAYER_STATE_SEEK_BACKWARD" />
                    <variable citdl="Number" name="MUSIC_PLAYER_STATE_SKEEK_FORWARD" />
                    <variable citdl="Number" name="MUSIC_PLAYER_STATE_STOPPED" />
                    <variable citdl="Number" name="NO_CAMERA" />
                    <variable citdl="Number" name="NO_VIDEO" />
                    <variable citdl="Number" name="QUALITY_HIGH" />
                    <variable citdl="Number" name="QUALITY_LOW" />
                    <variable citdl="Number" name="QUALITY_MEDIUM" />
                    <variable citdl="Number" name="UNKNOWN_ERROR" />
                    <variable citdl="Number" name="VIDEO_CONTROL_DEFAULT" />
                    <variable citdl="Number" name="VIDEO_CONTROL_EMBEDDED" />
                    <variable citdl="Number" name="VIDEO_CONTROL_FULLSCREEN" />
                    <variable citdl="Number" name="VIDEO_CONTROL_HIDDEN" />
                    <variable citdl="Number" name="VIDEO_CONTROL_NONE" />
                    <variable citdl="Number" name="VIDEO_CONTROL_VOLUME_ONLY" />
                    <variable citdl="Number" name="VIDEO_FINISH_REASON_PLAYBACK_ENDED" />
                    <variable citdl="Number" name="VIDEO_FINISH_REASON_PLAYBACK_ERROR" />
                    <variable citdl="Number" name="VIDEO_FINISH_REASON_USER_EXITED" />
                    <variable citdl="Number" name="VIDEO_LOAD_STATE_PLAYABLE" />
                    <variable citdl="Number" name="VIDEO_LOAD_STATE_PLAYTHROUGH_OK" />
                    <variable citdl="Number" name="VIDEO_LOAD_STATE_STALLED" />
                    <variable citdl="Number" name="VIDEO_LOAD_STATE_UNKNOWN" />
                    <variable citdl="Number" name="VIDEO_MEDIA_TYPE_AUDIO" />
                    <variable citdl="Number" name="VIDEO_MEDIA_TYPE_NONE" />
                    <variable citdl="Number" name="VIDEO_MEDIA_TYPE_VIDEO" />
                    <variable citdl="Number" name="VIDEO_PLAYBACK_STATE_INTERRUPTED" />
                    <variable citdl="Number" name="VIDEO_PLAYBACK_STATE_PAUSED" />
                    <variable citdl="Number" name="VIDEO_PLAYBACK_STATE_PLAYING" />
                    <variable citdl="Number" name="VIDEO_PLAYBACK_STATE_SEEKING_BACKWARD" />
                    <variable citdl="Number" name="VIDEO_PLAYBACK_STATE_SEEKING_FORWARD" />
                    <variable citdl="Number" name="VIDEO_PLAYBACK_STATE_STOPPED" />
                    <variable citdl="Number" name="VIDEO_REPEAT_MODE_NONE" />
                    <variable citdl="Number" name="VIDEO_REPEAT_MODE_ONE" />
                    <variable citdl="Number" name="VIDEO_SCALING_ASPECT_FILL" />
                    <variable citdl="Number" name="VIDEO_SCALING_ASPECT_FIT" />
                    <variable citdl="Number" name="VIDEO_SCALING_MODE_FILL" />
                    <variable citdl="Number" name="VIDEO_SCALING_NONE" />
                    <variable citdl="Number" name="VIDEO_SOURCE_TYPE_FILE" />
                    <variable citdl="Number" name="VIDEO_SOURCE_TYPE_STREAMING" />
                    <variable citdl="Number" name="VIDEO_SOURCE_TYPE_UNKNOWN" />
                    <variable citdl="Number" name="VIDEO_TIME_OPTION_EXACT" />
                    <variable citdl="Number" name="VIDEO_TIME_OPTION_NEAREST_KEYFRAME" />
                    <variable citdl="Titanium.Media.MusicPlayer" name="appMusicPlayer" />
                    <variable citdl="Number" name="audioLineType" />
                    <variable citdl="Boolean" name="audioPlaying" />
                    <variable citdl="Number" name="audioSessionMode" />
                    <variable citdl="Array" name="availableCameraMediaTypes" />
                    <variable citdl="Array" name="availablePhotoGalleryMediaTypes" />
                    <variable citdl="Array" name="availablePhotoMediaTypes" />
                    <variable citdl="Number" name="averageMicrophonePower" />
                    <variable citdl="Boolean" name="canRecord" />
                    <variable citdl="Boolean" name="isCameraSupported" />
                    <variable citdl="Number" name="peakMicrophonePower" />
                    <variable citdl="Titanium.Media.MusicPlayer" name="systemMusicPlayer" />
                    <variable citdl="Number" name="volume" />
                    <!-- Titanium.Media.AudioPlayer object -->
                    <scope ilk="class" name="AudioPlayer" doc="The AudioPlayer object is returned by Titanium.Media.createAudioPlayer and is used for streaming audio to the device and low-level control of the audio playback. Platforms = [android, iphone, ipad]" returns="Object">
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Pause playback." ilk="function" name="pause" returns="void" signature="pause() -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Control the playback of the audio." ilk="function" name="setPaused" returns="void" signature="setPaused(paused) -&gt; titanium" />
                        <scope doc="Change the url of the audio playback." ilk="function" name="setUrl" returns="void" signature="setUrl(url) -&gt; titanium" />
                        <scope doc="Start playback." ilk="function" name="start" returns="void" signature="start() -&gt; titanium" />
                        <scope doc="Convert a state into a textual description suitable for display." ilk="function" name="stateDescription" returns="String" signature="stateDescription() -&gt; titanium" />
                        <scope doc="Stop playback." ilk="function" name="stop" returns="void" signature="stop() -&gt; titanium" />
                        <variable citdl="Number" name="STATE_BUFFERING" />
                        <variable citdl="Number" name="STATE_INITIALIZED" />
                        <variable citdl="Number" name="STATE_PAUSED" />
                        <variable citdl="Number" name="STATE_PLAYING" />
                        <variable citdl="Number" name="STATE_STARTING" />
                        <variable citdl="Number" name="STATE_STOPPED" />
                        <variable citdl="Number" name="STATE_STOPPING" />
                        <variable citdl="Number" name="STATE_WAITING_FOR_DATA" />
                        <variable citdl="Number" name="STATE_WAITING_FOR_QUEUE" />
                        <variable citdl="Boolean" name="allowBackground" />
                        <variable citdl="Number" name="bitRate" />
                        <variable citdl="Boolean" name="idle" />
                        <variable citdl="Boolean" name="paused" />
                        <variable citdl="Boolean" name="playing" />
                        <variable citdl="Number" name="progress" />
                        <variable citdl="Number" name="state" />
                        <variable citdl="String" name="url" />
                        <variable citdl="Boolean" name="waiting" />
                    </scope>
                    <!-- Titanium.Media.AudioRecorder object -->
                    <scope ilk="class" name="AudioRecorder" doc="The AudioRecorder object is returned by Titanium.Media.createAudioRecorder and is used for recording audio from the device microphone. Platforms = [iphone, ipad]" returns="Object">
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Called to temporarily pause recording." ilk="function" name="pause" returns="void" signature="pause() -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Called to resume audio recording." ilk="function" name="resume" returns="void" signature="resume() -&gt; titanium" />
                        <scope doc="Called to start recording audio." ilk="function" name="start" returns="void" signature="start() -&gt; titanium" />
                        <scope doc="Called to stop recording audio." ilk="function" name="stop" returns="void" signature="stop() -&gt; titanium" />
                        <variable citdl="Number" name="compression" />
                        <variable citdl="Number" name="format" />
                        <variable citdl="Boolean" name="paused" />
                        <variable citdl="Boolean" name="recording" />
                        <variable citdl="Boolean" name="stopped" />
                    </scope>
                    <!-- Titanium.Media.Item object -->
                    <scope ilk="class" name="Item" doc="A representation of a media item returned by the music picker as part of the items array in the dictionary passed to its success function.. Platforms = [iphone, ipad]">]
                        <variable citdl="String" name="albumArtist" />
                        <variable citdl="String" name="albumTitle" />
                        <variable citdl="Number" name="albumTrackCount" />
                        <variable citdl="Number" name="albumTrackNumber" />
                        <variable citdl="String" name="artist" />
                        <variable citdl="Object" name="artwork" />
                        <variable citdl="String" name="composer" />
                        <variable citdl="Number" name="discCount" />
                        <variable citdl="Number" name="discNumber" />
                        <variable citdl="String" name="genre" />
                        <variable citdl="Boolean" name="isCompilation" />
                        <variable citdl="String" name="lyrics" />
                        <variable citdl="Number" name="mediaType" />
                        <variable citdl="Number" name="playCount" />
                        <variable citdl="Number" name="playbackDuration" />
                        <variable citdl="String" name="podcastTitle" />
                        <variable citdl="Number" name="rating" />
                        <variable citdl="Number" name="skipCount" />
                        <variable citdl="String" name="title" />
                    </scope>
                    <!-- Titanium.Media.MusicPlayer object -->
                    <scope ilk="class" name="MusicPlayer" doc="The MusicPlayer instance returned from Titanium.Media.createMusicPlayer.  This object represents a music controller. Platforms = [iphone, ipad]">
                        <scope doc="Pause playback." ilk="function" name="pause" returns="void" signature="pause() -&gt; titanium" />
                        <scope doc="Begin playback." ilk="function" name="play" returns="void" signature="play() -&gt; titanium" />
                        <scope doc="Seek backward in the currently playing media." ilk="function" name="seekBackward" returns="void" signature="seekBackward() -&gt; titanium" />
                        <scope doc="Seek forward in the currently playing media." ilk="function" name="seekForward" returns="void" signature="seekForward() -&gt; titanium" />
                        <scope doc="Set the media queue." ilk="function" name="setQueue" returns="void" signature="setQueue(queue) -&gt; titanium" />
                        <scope doc="Skip to the beginning of the currently playing media." ilk="function" name="skipToBeginning" returns="void" signature="skipToBeginning() -&gt; titanium" />
                        <scope doc="Skip to the next media in the queue." ilk="function" name="skipToNext" returns="void" signature="skipToNext() -&gt; titanium" />
                        <scope doc="Skip to the previous media in the queue." ilk="function" name="skipToPrevious" returns="void" signature="skipToPrevious() -&gt; titanium" />
                        <scope doc="Stop playback." ilk="function" name="stop" returns="void" signature="stop() -&gt; titanium" />
                        <scope doc="End a seek operation." ilk="function" name="stopSeeking" returns="void" signature="stopSeeking() -&gt; titanium" />
                        <variable citdl="Number" name="currentPlaybackTime" />
                        <variable citdl="Titanium.Media.Item" name="nowPlaying" />
                        <variable citdl="Number" name="playbackState" />
                        <variable citdl="Number" name="repeatMode" />
                        <variable citdl="Number" name="shuffleMode" />
                        <variable citdl="Number" name="volume" />
                    </scope>
                    <!-- Titanium.Media.Sound object -->
                    <scope ilk="class" name="Sound" doc="The Sound object is returned by Titanium.Media.createSound and is useful for playing basic sounds. The Sound object loads the entire media resource in memory before playing.  If you need to support streaming, use the Titanium.Media.createAudioPlayer API. Platforms = [android, iphone, ipad]" returns="Object">
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Return the current time position of the audio." ilk="function" name="getTime" returns="Number" signature="getTime() -&gt; titanium" />
                        <scope doc="Return the value of the audio." ilk="function" name="getVolume" returns="Number" signature="getVolume() -&gt; titanium" />
                        <scope doc="Returns true if the audio will loop." ilk="function" name="isLooping" returns="Boolean" signature="isLooping() -&gt; titanium" />
                        <scope doc="Returns true if the audio is paused." ilk="function" name="isPaused" returns="Boolean" signature="isPaused() -&gt; titanium" />
                        <scope doc="Returns true if the audio is playing." ilk="function" name="isPlaying" returns="Boolean" signature="isPlaying() -&gt; titanium" />
                        <scope doc="Temporarily pause the audio. to resume, invoke play." ilk="function" name="pause" returns="void" signature="pause() -&gt; titanium" />
                        <scope doc="Start playing the source. if paused, will resume." ilk="function" name="play" returns="void" signature="play() -&gt; titanium" />
                        <scope doc="Release all internal resources. this is typically unnecessary but can be useful if you load a large audio file in app.js and play it only once and you would like to release all releases after your final play to reduce memory." ilk="function" name="release" returns="void" signature="release() -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Reset the audio to the beginning." ilk="function" name="reset" returns="void" signature="reset() -&gt; titanium" />
                        <scope doc="Control whether the audio should loop." ilk="function" name="setLooping" returns="void" signature="setLooping() -&gt; titanium" />
                        <scope doc="Control whether the audio is paused." ilk="function" name="setPaused" returns="void" signature="setPaused() -&gt; titanium" />
                        <scope doc="Set the time position of the audio." ilk="function" name="setTime" returns="void" signature="setTime() -&gt; titanium" />
                        <scope doc="Set the volume of the audio." ilk="function" name="setVolume" returns="void" signature="setVolume() -&gt; titanium" />
                        <scope doc="Stop playing the audio and reset it to the beginning." ilk="function" name="stop" returns="void" signature="stop() -&gt; titanium" />
                        <variable citdl="Boolean" name="allowBackground" />
                        <variable citdl="Number" name="duration" />
                        <variable citdl="Boolean" name="looping" />
                        <variable citdl="Boolean" name="paused" />
                        <variable citdl="Boolean" name="playing" />
                        <variable citdl="Number" name="time" />
                        <variable citdl="String" name="url" />
                        <variable citdl="Number" name="volume" />
                    </scope>
                    <!-- Titanium.Media.VideoPlayer object -->
                    <scope ilk="class" name="VideoPlayer" doc="The VideoPlayer object is returned by Titanium.Media.createVideoPlayer and is useful for playing videos. Platforms = [android, iphone, ipad]" returns="Object">
                        <scope doc="Add a child to the view hierarchy." ilk="function" name="add" returns="void" signature="add(view) -&gt; titanium" />
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Animate the view." ilk="function" name="animate" returns="void" signature="animate(properties, callback) -&gt; titanium" />
                        <scope doc="Cancels all pending asynchronous thumbnail requests." ilk="function" name="cancelAllThumbnailImageRequests" returns="void" signature="cancelAllThumbnailImageRequests() -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Hide the view." ilk="function" name="hide" returns="void" signature="hide() -&gt; titanium" />
                        <scope doc="Pause playing the video. On iOS only available under 3.2 and later." ilk="function" name="pause" returns="void" signature="pause() -&gt; titanium" />
                        <scope doc="Start playing the video." ilk="function" name="play" returns="void" signature="play() -&gt; titanium" />
                        <scope doc="Release the internal video resources immediately.  this is not usually necessary but can help if you no longer need to use the player after it is used to help converse memory." ilk="function" name="release" returns="void" signature="release() -&gt; titanium" />
                        <scope doc="Remove a previously add view from the view hierarchy." ilk="function" name="remove" returns="" signature="remove(view) -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Asynchronously request thumbnails for one or more times, provided as an array of numbers (double). Fires a thumbnail event on completion. Optionally invokes the callback function passed in the method." ilk="function" name="requestThumbnailImagesAtTimes" returns="" signature="requestThumbnailImagesAtTimes(times, option) -&gt; titanium" />
                        <scope doc="A view for customization which is always displayed behind movie content." ilk="function" name="setBackgroundView" returns="void" signature="setBackgroundView(view) -&gt; titanium" />
                        <scope doc="A non-url based media to play, either a File or Blob." ilk="function" name="setMedia" returns="void" signature="setMedia(media) -&gt; titanium" />
                        <scope doc="The url to play." ilk="function" name="setUrl" returns="void" signature="setUrl(url) -&gt; titanium" />
                        <scope doc="Make the view visible." ilk="function" name="show" returns="void" signature="show() -&gt; titanium" />
                        <scope doc="Stop playing the video." ilk="function" name="stop" returns="void" signature="stop() -&gt; titanium" />
                        <scope doc="Returns a thumbnail at the given time as a blob." ilk="function" name="thumbnailImageAtTime" returns="Object" signature="thumbnailImageAtTime(time, option) -&gt; titanium" />
                        <scope doc="Return a Blob image of the rendered view." ilk="function" name="toImage" returns="Object" signature="toImage(callback) -&gt; titanium" />
                        <variable citdl="Object" name="anchorPoint" />
                        <variable citdl="Object" name="animatedCenterPoint" />
                        <variable citdl="Boolean" name="autoplay" />
                        <variable citdl="String" name="backgroundColor" />
                        <variable citdl="String" name="backgroundDisabledColor" />
                        <variable citdl="String" name="backgroundDisabledImage" />
                        <variable citdl="String" name="backgroundFocusedColor" />
                        <variable citdl="String" name="backgroundFocusedImage" />
                        <variable citdl="Object" name="backgroundGradient" />
                        <variable citdl="String" name="backgroundImage" />
                        <variable citdl="Number" name="backgroundLeftCap" />
                        <variable citdl="String" name="backgroundSelectedColor" />
                        <variable citdl="String" name="backgroundSelectedImage" />
                        <variable citdl="Number" name="backgroundTopCap" />
                        <variable citdl="String" name="borderColor" />
                        <variable citdl="Number" name="borderRadius" />
                        <variable citdl="Number" name="borderWidth" />
                        <variable citdl="Number or String" name="bottom" />
                        <variable citdl="Object" name="center" />
                        <variable citdl="String" name="contentURL" />
                        <variable citdl="Number" name="duration" />
                        <variable citdl="Number" name="endPlaybackTime" />
                        <variable citdl="Boolean" name="focusable" />
                        <variable citdl="String" name="font-family" />
                        <variable citdl="String" name="font-size" />
                        <variable citdl="String" name="font-style" />
                        <variable citdl="String" name="font-weight" />
                        <variable citdl="Boolean" name="fullscreen" />
                        <variable citdl="Number or String" name="height" />
                        <variable citdl="Number" name="initialPlaybackTime" />
                        <variable citdl="Number or String" name="left" />
                        <variable citdl="Number" name="loadState" />
                        <variable citdl="Object" name="media" />
                        <variable citdl="Number" name="mediaControlStyle" />
                        <variable citdl="Number" name="mediaTypes" />
                        <variable citdl="Number" name="movieControlMode" />
                        <variable citdl="Object" name="naturalSize" />
                        <variable citdl="Number" name="opacity" />
                        <variable citdl="Number" name="playableDuration" />
                        <variable citdl="Number" name="playbackState" />
                        <variable citdl="Boolean" name="playing" />
                        <variable citdl="Number" name="repeatMode" />
                        <variable citdl="Number or String" name="right" />
                        <variable citdl="Number" name="scalingMode" />
                        <variable citdl="Object" name="size" />
                        <variable citdl="Number" name="softKeyboardOnFocus" />
                        <variable citdl="Number" name="sourceType" />
                        <variable citdl="Number or String" name="top" />
                        <variable citdl="Boolean" name="touchEnabled" />
                        <variable citdl="Object" name="transform" />
                        <variable citdl="String" name="url" />
                        <variable citdl="Boolean" name="useApplicationAudioSession" />
                        <variable citdl="Boolean" name="visible" />
                        <variable citdl="Number or String" name="width" />
                        <variable citdl="Number" name="zIndex" />
                    </scope>
                </scope>
                <!-- Titanium.Network module -->
                <scope ilk="class" name="Network" doc="The top level Network module.  The Network module is used accessing Networking related functionality. Platforms = [android, iphone, ipad]" returns="Object">
                    <scope doc="Adds a connectivity listener to listen for network changes. This method has been deprecated in favor of listening for a change event." ilk="function" name="addConnectivityListener" returns="void" signature="addConnectivityListener(callback) -&gt; titanium" />
                    <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.Network.BonjourBrowser." ilk="function" name="createBonjourBrowser" returns="Titanium.Network.BonjourBrowser" signature="createBonjourBrowser(serviceType, domain, parameters) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.Network.BonjourService." ilk="function" name="createBonjourService" returns="Titanium.Network.BonjourService" signature="createBonjourService(name, type, domain, parameters) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.Network.HTTPClient." ilk="function" name="createHTTPClient" returns="Titanium.Network.HTTPClient" signature="createHTTPClient(parameters) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.Network.TCPSocket." ilk="function" name="createTCPSocket" returns="Titanium.Network.TCPSocket" signature="createTCPSocket(hostName, port, mode, parameters) -&gt; titanium" />
                    <scope doc="Decode a URI component part using URI encoding." ilk="function" name="decodeURIComponent" returns="String" signature="decodeURIComponent(value) -&gt; titanium" />
                    <scope doc="Encode a URI component part using URI encoding." ilk="function" name="encodeURIComponent" returns="String" signature="encodeURIComponent(value) -&gt; titanium" />
                    <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                    <scope doc="Register for push notifications with the Apple Push Notification Service. Only available on iPhone." ilk="function" name="registerForPushNotifications" returns="void" signature="registerForPushNotifications(config) -&gt; titanium" />
                    <scope doc="Removes a connectivity listener. This method has been deprecated in favor of listening for a change event." ilk="function" name="removeConnectivityListener" returns="void" signature="removeConnectivityListener(callback) -&gt; titanium" />
                    <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                    <variable citdl="String" name="INADDR_ANY" />
                    <variable citdl="Number" name="NETWORK_LAN" />
                    <variable citdl="Number" name="NETWORK_MOBILE" />
                    <variable citdl="Number" name="NETWORK_NONE" />
                    <variable citdl="Number" name="NETWORK_UNKNOWN" />
                    <variable citdl="Number" name="NETWORK_WIFI" />
                    <variable citdl="Number" name="NOTIFICATION_TYPE_ALERT" />
                    <variable citdl="Number" name="NOTIFICATION_TYPE_BADGE" />
                    <variable citdl="Number" name="NOTIFICATION_TYPE_SOUND" />
                    <variable citdl="Number" name="READ_MODE" />
                    <variable citdl="Number" name="READ_WRITE_MODE" />
                    <variable citdl="Number" name="WRITE_MODE" />
                    <variable citdl="Number" name="networkType" />
                    <variable citdl="String" name="networkTypeName" />
                    <variable citdl="Boolean" name="online" />
                    <variable citdl="String" name="remoteDeviceUUID" />
                    <variable citdl="Array" name="remoteNotificationTypes" />
                    <variable citdl="Boolean" name="remoteNotificationsEnabled" />
                    <!-- Titanium.Network.BonjourBrowser object -->
                    <scope ilk="class" name="BonjourBrowser" doc="The BonjourBrowser instance returned from Titanium.Network.createBonjourBrowser.  This object is a browser for the discovery and retrieval of Bonjour services available on the network. Platforms = [iphone, ipad]">
                        <scope doc="Conduct a search for Bonjour services matching the type and domain specified during creation." ilk="function" name="search" returns="void" signature="search() -&gt; titanium" />
                        <scope doc="Halt an ongoing search." ilk="function" name="stopSearch" returns="void" signature="stopSearch() -&gt; titanium" />
                        <variable citdl="String" name="domain" />
                        <variable citdl="Boolean" name="isSearching" />
                        <variable citdl="String" name="serviceType" />
                    </scope>
                    <!-- Titanium.Network.BonjourService object -->
                    <scope ilk="class" name="BonjourService" doc="The BonjourService instance returned either from Titanium.Network.createBonjourService or via the service list from a BonjourBrowser updatedServices event.  This object describes a service on the network which is published by Bonjour. Platforms = [iphone, ipad]">
                        <scope doc="Publish a Bonjour service to the network.  Only works if isLocal is TRUE." ilk="function" name="publish" returns="void" signature="publish(socket) -&gt; titanium" />
                        <scope doc="Resolve a Bonjour service from the network.  Must be done before attempting to access the service's socket information, if a remote service.  You cannot resolve a locally published service." ilk="function" name="resolve" returns="void" signature="resolve(timeout) -&gt; titanium" />
                        <scope doc="Halts publication of a service." ilk="function" name="stop" returns="void" signature="stop() -&gt; titanium" />
                        <variable citdl="String" name="domain" />
                        <variable citdl="Boolean" name="isLocal" />
                        <variable citdl="String" name="name" />
                        <variable citdl="Titanium.Network.TCPSocket" name="socket" />
                        <variable citdl="String" name="type" />
                    </scope>
                    <!-- Titanium.Network.HTTPClient object-->
                    <scope ilk="class" name="HTTPClient" doc="The HttpClient instance returned from Titanium.Network.createHTTPClient. This object (mostly) implements the XMLHttpRequest specification. Platforms = [android, iphone, ipad]">
                        <scope doc="Abort a pending request." ilk="function" name="abort" returns="void" signature="abort() -&gt; titanium" />
                        <scope doc="Return the response header." ilk="function" name="getResponseHeader" returns="String" signature="getResponseHeader(name) -&gt; titanium" />
                        <scope doc="Open the request and ready the connection." ilk="function" name="open" returns="void" signature="open(method, url, async) -&gt; titanium" />
                        <scope doc="Send the request." ilk="function" name="send" returns="void" signature="send(data) -&gt; titanium" />
                        <scope doc="Set the request header. Must be called after open but before send." ilk="function" name="setRequestHeader" returns="void" signature="setRequestHeader(name, value) -&gt; titanium" />
                        <scope doc="Set the request timeout." ilk="function" name="setTimeout" returns="void" signature="setTimeout(timeout) -&gt; titanium" />
                        <variable citdl="Number" name="DONE" />
                        <variable citdl="Number" name="HEADERS_RECEIVED" />
                        <variable citdl="Number" name="LOADING" />
                        <variable citdl="Number" name="OPENED" />
                        <variable citdl="Number" name="UNSENT" />
                        <variable citdl="Boolean" name="connected" />
                        <variable citdl="String" name="connectionType" />
                        <variable citdl="String" name="file" />
                        <variable citdl="String" name="location" />
                        <variable citdl="Function" name="ondatastream" />
                        <variable citdl="Function" name="onerror" />
                        <variable citdl="Function" name="onload" />
                        <variable citdl="Function" name="onreadystatechange" />
                        <variable citdl="Function" name="onsendstream" />
                        <variable citdl="Number" name="readyState" />
                        <variable citdl="Object" name="responseData" />
                        <variable citdl="String" name="responseText" />
                        <variable citdl="Object" name="responseXML" />
                        <variable citdl="Number" name="status" />
                        <variable citdl="Number" name="timeout" />
                        <variable citdl="Boolean" name="validatesSecureCertificate" />
                    </scope>
                    <!-- Titanium.Network.TCPSocket object -->
                    <scope ilk="class" name="TCPSocket" doc="The TCPSocket instance returned from Titanium.Network.createTCPSocket.  This object represents a socket which either listens locally on the device for connections, or connects to a remote machine. Platforms = [iphone, ipad]" returns="Object">
                        <scope doc="Close the socket." ilk="function" name="close" returns="void" signature="close() -&gt; titanium" />
                        <scope doc="Connect the socket to a TCP server." ilk="function" name="connect" returns="void" signature="connect() -&gt; titanium" />
                        <scope doc="Set up the socket to receive connections." ilk="function" name="listen" returns="void" signature="listen() -&gt; titanium" />
                        <scope doc="Write data to the socket, if the mode is WRITE_MODE or READ_WRITE_MODE." ilk="function" name="write" returns="void" signature="write(data, sendTo) -&gt; titanium" />
                        <variable citdl="String" name="hostName" />
                        <variable citdl="Boolean" name="isValid" />
                        <variable citdl="Number" name="mode" />
                        <variable citdl="Number" name="port" />
                        <variable citdl="Boolean" name="stripTerminator" />
                    </scope>
                </scope>
                <!-- Titanium.Platform module -->
                <scope ilk="class" name="Platform" doc="The top level Platform module.  The Platform module is used accessing the device's platform related functionality. Platforms = [android, iphone, ipad]" returns="Object">
                    <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                    <scope doc="Returns whether or not a system URL can be opened. iOS only." ilk="function" name="canOpenURL" returns="Boolean" signature="canOpenURL(url) -&gt; titanium" />
                    <scope doc="Create a globally unique identifier." ilk="function" name="createUUID" returns="String" signature="createUUID() -&gt; titanium" />
                    <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                    <scope doc="Open a URL in the system default manner." ilk="function" name="openURL" returns="void" signature="openURL(url) -&gt; titanium" />
                    <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                    <variable citdl="Number" name="BATTERY_STATE_CHARGING" />
                    <variable citdl="Number" name="BATTERY_STATE_FULL" />
                    <variable citdl="Number" name="BATTERY_STATE_UNKNOWN" />
                    <variable citdl="Number" name="BATTERY_STATE_UNPLUGGED" />
                    <variable citdl="String" name="address" />
                    <variable citdl="String" name="architecture" />
                    <variable citdl="Number" name="availableMemory" />
                    <variable citdl="Number" name="batteryLevel" />
                    <variable citdl="Boolean" name="batteryMonitoring" />
                    <variable citdl="Number" name="batteryState" />
                    <variable citdl="Titanium.Platform.DisplayCaps" name="displayCaps" />
                    <variable citdl="String" name="id" />
                    <variable citdl="String" name="locale" />
                    <variable citdl="String" name="macaddress" />
                    <variable citdl="String" name="model" />
                    <variable citdl="String" name="name" />
                    <variable citdl="String" name="netmask" />
                    <variable citdl="String" name="osname" />
                    <variable citdl="String" name="ostype" />
                    <variable citdl="Number" name="processorCount" />
                    <variable citdl="String" name="username" />
                    <variable citdl="String" name="version" />
                    <!-- Titanium.Platform.DisplayCaps object -->
                    <scope ilk="class" name="DisplayCaps" doc="The Display Caps object returned by the Titanium.Platform.displayCaps property. Platforms = [android, iphone, ipad]">
                        <variable citdl="String" name="density" />
                        <variable citdl="Number" name="dpi" />
                        <variable citdl="Number" name="platformHeight" />
                        <variable citdl="Number" name="platformWidth" />
                    </scope>
                </scope>
                <!-- Titanium.UI module -->
                <scope ilk="class" name="UI" doc="The main Titanium.UI module.  The UI module is responsible for native user-interface components and interaction inside Titanium.  The goal of the UI module is to provide a native experience along with native performance by compiling Javascript code into their native counterparts as part of the build process. Platforms = [android, iphone, ipad]" returns="Object">
                    <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.UI.2DMatrix." ilk="function" name="create2DMatrix" returns="Titanium.UI.2DMatrix" signature="create2DMatrix(parameters) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.UI.3DMatrix." ilk="function" name="create3DMatrix" returns="Titanium.UI.3DMatrix" signature="create3DMatrix(parameters) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.UI.ActivityIndicator." ilk="function" name="createActivityIndicator" returns="Titanium.UI.ActivityIndicator" signature="createActivityIndicator(parameters) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.UI.AlertDialog." ilk="function" name="createAlertDialog" returns="Titanium.UI.AlertDialog" signature="createAlertDialog(parameters) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.UI.Animation." ilk="function" name="createAnimation" returns="Titanium.UI.Animation" signature="createAnimation(parameters) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.UI.Button." ilk="function" name="createButton" returns="Titanium.UI.Button" signature="createButton(parameters) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.UI.ButtonBar." ilk="function" name="createButtonBar" returns="Titanium.UI.ButtonBar" signature="createButtonBar(parameters) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.UI.CoverFlowView." ilk="function" name="createCoverFlowView" returns="Titanium.UI.CoverFlowView" signature="createCoverFlowView(parameters) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.UI.DashboardItem." ilk="function" name="createDashboardItem" returns="Titanium.UI.DashboardItem" signature="createDashboardItem(parameters) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.UI.DashboardView." ilk="function" name="createDashboardView" returns="Titanium.UI.DashboardView" signature="createDashboardView(parameters) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.UI.EmailDialog." ilk="function" name="createEmailDialog" returns="Titanium.UI.EmailDialog" signature="createEmailDialog(parameters) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.UI.ImageView." ilk="function" name="createImageView" returns="Titanium.UI.ImageView" signature="createImageView(parameters) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.UI.Label." ilk="function" name="createLabel" returns="Titanium.UI.Label" signature="createLabel(parameters) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.UI.OptionDialog." ilk="function" name="createOptionDialog" returns="Titanium.UI.OptionDialog" signature="createOptionDialog(parameters) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.UI.Picker." ilk="function" name="createPicker" returns="Titanium.UI.Picker" signature="createPicker(parameters) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.UI.PickerColumn." ilk="function" name="createPickerColumn" returns="Titanium.UI.PickerColumn" signature="createPickerColumn(parameters) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.UI.PickerRow." ilk="function" name="createPickerRow" returns="Titanium.UI.PickerRow" signature="createPickerRow(parameters) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.UI.ProgressBar." ilk="function" name="createProgressBar" returns="Titanium.UI.ProgressBar" signature="createProgressBar(parameters) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.UI.ScrollView." ilk="function" name="createScrollView" returns="Titanium.UI.ScrollView" signature="createScrollView(paramters) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.UI.ScrollableView." ilk="function" name="createScrollableView" returns="Titanium.UI.ScrollableView" signature="createScrollableView(parameters) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.UI.SearchBar." ilk="function" name="createSearchBar" returns="Titanium.UI.SearchBar" signature="createSearchBar(parameters) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.UI.Slider." ilk="function" name="createSlider" returns="Titanium.UI.Slider" signature="createSlider(parameters) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.UI.Switch." ilk="function" name="createSwitch" returns="Titanium.UI.Switch" signature="createSwitch(parameters) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.UI.Tab." ilk="function" name="createTab" returns="Titanium.UI.Tab" signature="createTab(parameters) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.UI.TabGroup." ilk="function" name="createTabGroup" returns="Titanium.UI.TabGroup" signature="createTabGroup(parameters) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.UI.TabbedBar." ilk="function" name="createTabbedBar" returns="Titanium.UI.TabbedBar" signature="createTabbedBar(parameters) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.UI.TableView." ilk="function" name="createTableView" returns="Titanium.UI.TableView" signature="createTableView(parameters) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.UI.TableViewRow." ilk="function" name="createTableViewRow" returns="Titanium.UI.TableViewRow" signature="createTableViewRow(parameters) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.UI.TableViewSection." ilk="function" name="createTableViewSection" returns="Titanium.UI.TableViewSection" signature="createTableViewSection(parameters) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.UI.TextArea." ilk="function" name="createTextArea" returns="Titanium.UI.TextArea" signature="createTextArea(parameters) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.UI.TextField." ilk="function" name="createTextField" returns="Titanium.UI.TextField" signature="createTextField(parameters) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.UI.Toolbar." ilk="function" name="createToolbar" returns="Titanium.UI.Toolbar" signature="createToolbar(parameters) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.UI.View." ilk="function" name="createView" returns="Titanium.UI.View" signature="createView(parameters) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.UI.WebView." ilk="function" name="createWebView" returns="Titanium.UI.WebView" signature="createWebView(parameters) -&gt; titanium" />
                    <scope doc="Create and return an instance of Titanium.UI.Window." ilk="function" name="createWindow" returns="Titanium.UI.Window" signature="createWindow(parameters) -&gt; titanium" />
                    <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                    <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                    <variable citdl="Number" name="ANIMATION_CURVE_EASE_IN" />
                    <variable citdl="Number" name="ANIMATION_CURVE_EASE_IN_OUT" />
                    <variable citdl="Number" name="ANIMATION_CURVE_EASE_OUT" />
                    <variable citdl="Number" name="ANIMATION_CURVE_LINEAR" />
                    <variable citdl="Number" name="BLEND_MODE_CLEAR" />
                    <variable citdl="Number" name="BLEND_MODE_COLOR" />
                    <variable citdl="Number" name="BLEND_MODE_COLOR_BURN" />
                    <variable citdl="Number" name="BLEND_MODE_COLOR_DODGE" />
                    <variable citdl="Number" name="BLEND_MODE_COPY" />
                    <variable citdl="Number" name="BLEND_MODE_DARKEN" />
                    <variable citdl="Number" name="BLEND_MODE_DESTINATION_ATOP" />
                    <variable citdl="Number" name="BLEND_MODE_DESTINATION_IN" />
                    <variable citdl="Number" name="BLEND_MODE_DESTINATION_OUT" />
                    <variable citdl="Number" name="BLEND_MODE_DESTINATION_OVER" />
                    <variable citdl="Number" name="BLEND_MODE_DIFFERENCE" />
                    <variable citdl="Number" name="BLEND_MODE_EXCLUSION" />
                    <variable citdl="Number" name="BLEND_MODE_HARD_LIGHT" />
                    <variable citdl="Number" name="BLEND_MODE_HUE" />
                    <variable citdl="Number" name="BLEND_MODE_LIGHTEN" />
                    <variable citdl="Number" name="BLEND_MODE_LUMINOSITY" />
                    <variable citdl="Number" name="BLEND_MODE_MULTIPLY" />
                    <variable citdl="Number" name="BLEND_MODE_NORMAL" />
                    <variable citdl="Number" name="BLEND_MODE_OVERLAY" />
                    <variable citdl="Number" name="BLEND_MODE_PLUS_DARKER" />
                    <variable citdl="Number" name="BLEND_MODE_PLUS_LIGHTER" />
                    <variable citdl="Number" name="BLEND_MODE_SATURATION" />
                    <variable citdl="Number" name="BLEND_MODE_SCREEN" />
                    <variable citdl="Number" name="BLEND_MODE_SOFT_LIGHT" />
                    <variable citdl="Number" name="BLEND_MODE_SOURCE_ATOP" />
                    <variable citdl="Number" name="BLEND_MODE_SOURCE_IN" />
                    <variable citdl="Number" name="BLEND_MODE_SOURCE_OUT" />
                    <variable citdl="Number" name="BLEND_MODE_XOR" />
                    <variable citdl="Number" name="FACE_DOWN" />
                    <variable citdl="Number" name="FACE_UP" />
                    <variable citdl="Number" name="INPUT_BORDERSTYLE_BEZEL" />
                    <variable citdl="Number" name="INPUT_BORDERSTYLE_LINE" />
                    <variable citdl="Number" name="INPUT_BORDERSTYLE_NONE" />
                    <variable citdl="Number" name="INPUT_BORDERSTYLE_ROUNDED" />
                    <variable citdl="Number" name="INPUT_BUTTONMODE_ALWAYS" />
                    <variable citdl="Number" name="INPUT_BUTTONMODE_NEVER" />
                    <variable citdl="Number" name="INPUT_BUTTONMODE_ONBLUR" />
                    <variable citdl="Number" name="INPUT_BUTTONMODE_ONFOCUS" />
                    <variable citdl="Number" name="KEYBOARD_APPEARANCE_ALERT" />
                    <variable citdl="Number" name="KEYBOARD_APPEARANCE_DEFAULT" />
                    <variable citdl="Number" name="KEYBOARD_ASCII" />
                    <variable citdl="Number" name="KEYBOARD_DEFAULT" />
                    <variable citdl="Number" name="KEYBOARD_EMAIL" />
                    <variable citdl="Number" name="KEYBOARD_NAMEPHONE_PAD" />
                    <variable citdl="Number" name="KEYBOARD_NUMBERS_PUNCTUATION" />
                    <variable citdl="Number" name="KEYBOARD_NUMBER_PAD" />
                    <variable citdl="Number" name="KEYBOARD_PHONE_PAD" />
                    <variable citdl="Number" name="KEYBOARD_URL" />
                    <variable citdl="Number" name="LANDSCAPE_LEFT" />
                    <variable citdl="Number" name="LANDSCAPE_RIGHT" />
                    <variable citdl="Number" name="NOTIFICATION_DURATION_LONG" />
                    <variable citdl="Number" name="NOTIFICATION_DURATION_SHORT" />
                    <variable citdl="Number" name="PICKER_TYPE_COUNT_DOWN_TIMER" />
                    <variable citdl="Number" name="PICKER_TYPE_DATE" />
                    <variable citdl="Number" name="PICKER_TYPE_DATE_AND_TIME" />
                    <variable citdl="Number" name="PICKER_TYPE_PLAIN" />
                    <variable citdl="Number" name="PICKER_TYPE_TIME" />
                    <variable citdl="Number" name="PORTRAIT" />
                    <variable citdl="Number" name="RETURNKEY_DEFAULT" />
                    <variable citdl="Number" name="RETURNKEY_DONE" />
                    <variable citdl="Number" name="RETURNKEY_EMERGENCY_CALL" />
                    <variable citdl="Number" name="RETURNKEY_GO" />
                    <variable citdl="Number" name="RETURNKEY_GOOGLE" />
                    <variable citdl="Number" name="RETURNKEY_JOIN" />
                    <variable citdl="Number" name="RETURNKEY_NEXT" />
                    <variable citdl="Number" name="RETURNKEY_ROUTE" />
                    <variable citdl="Number" name="RETURNKEY_SEARCH" />
                    <variable citdl="Number" name="RETURNKEY_SEND" />
                    <variable citdl="Number" name="RETURNKEY_YAHOO" />
                    <variable citdl="Number" name="TEXT_ALIGNMENT_CENTER" />
                    <variable citdl="Number" name="TEXT_ALIGNMENT_LEFT" />
                    <variable citdl="Number" name="TEXT_ALIGNMENT_RIGHT" />
                    <variable citdl="Number" name="TEXT_AUTOCAPITALIZATION_ALL" />
                    <variable citdl="Number" name="TEXT_AUTOCAPITALIZATION_NONE" />
                    <variable citdl="Number" name="TEXT_AUTOCAPITALIZATION_SENTENCES" />
                    <variable citdl="Number" name="TEXT_AUTOCAPITALIZATION_WORDS" />
                    <variable citdl="Number" name="TEXT_VERTICAL_ALIGNMENT_BOTTOM" />
                    <variable citdl="Number" name="TEXT_VERTICAL_ALIGNMENT_CENTER" />
                    <variable citdl="Number" name="TEXT_VERTICAL_ALIGNMENT_TOP" />
                    <variable citdl="Number" name="UNKNOWN" />
                    <variable citdl="Number" name="UPSIDE_PORTRAIT" />
                    <!-- Titanium.UI.2DMatrix object -->
                    <scope ilk="class" name="2DMatrix" doc="The 2DMatrix is created by Titanium.UI.create2DMatrix.  The 2D Matrix is an object for holding values for an affine transformation matrix. A 2D matrix is used to rotate, scale, translate, or skew the objects in a two-dimensional space. A 2D matrix is represented by a 3 by 3 matrix. Because the third column is always (0,0,1), the data structure contains values for only the first two columns. Platforms = [android, iphone, ipad]" returns="Object">
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Returns a matrix constructed by inverting an existing matrix." ilk="function" name="invert" returns="itanium.UI.2DMatrix " signature="invert() -&gt; titanium" />
                        <scope doc="Returns a matrix constructed by combining two existing matrix." ilk="function" name="multiply" returns="Titanium.UI.2DMatrix" signature="multiply(t2) -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Returns a matrix constructed by rotating an existing matrix." ilk="function" name="rotate" returns="Titanium.UI.2DMatrix" signature="rotate(angle) -&gt; titanium" />
                        <scope doc="Returns a matrix constructed by scaling an existing matrix." ilk="function" name="scale" returns="Titanium.UI.2DMatrix" signature="scale(sx, sy) -&gt; titanium" />
                        <scope doc="Returns a matrix constructed by translating an existing matrix." ilk="function" name="translate" returns="Titanium.UI.2DMatrix" signature="translate(tx, ty) -&gt; titanium" />
                    </scope>
                    <!-- Titanium.UI.3DMatrix object -->
                    <scope ilk="class" name="3DMatrix" doc="The 3DMatrix is created by Titanium.UI.create3DMatrix.  The 3D Matrix is an object for holding values for an affine transformation matrix. A 3D matrix is used to rotate, scale, translate, or skew the objects in a three-dimensional space. A 3D matrix is represented by a 4 by 4 matrix. Because the forth column is always (0,0,1), the data structure contains values for only the first three columns. Platforms = [android, iphone, ipad]" returns="Object">
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Returns a matrix constructed by inverting an existing matrix." ilk="function" name="invert" returns="Titanium.UI.3DMatrix" signature="invert() -&gt; titanium" />
                        <scope doc="Returns a matrix constructed by combining two existing matrix." ilk="function" name="multiply" returns="Titanium.UI.3DMatrix" signature="multiply(t2) -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Returns a matrix constructed by rotating an existing matrix." ilk="function" name="rotate" returns="Titanium.UI.3DMatrix object" signature="rotate(angle, x, y, z) -&gt; titanium" />
                        <scope doc="Returns a matrix constructed by scaling an existing matrix." ilk="function" name="scale" returns="Titanium.UI.3DMatrix" signature="scale(sx, sy, sz) -&gt; titanium" />
                        <scope doc="Returns a matrix constructed by translating an existing matrix." ilk="function" name="translate" returns="Titanium.UI.3DMatrix" signature="translate(tx, ty, tz) -&gt; titanium" />
                    </scope>
                    <!-- Titanium.UI.ActivityIndicator object -->
                    <scope ilk="class" name="ActivityIndicator" doc="An Activity Indicator is created by the method Titanium.UI.createActivityIndicator.  An activity indicator can be used to show the progress of an operation in the UI to let the user know some action is taking place. Platforms = [android, iphone, ipad]">
                        <scope doc="Call hide to make the activity indicator hidden and stop spinning." ilk="function" name="hide" returns="void" signature="hide() -&gt; titanium" />
                        <scope doc="Call show to make the activity indicator visible and start spinning." ilk="function" name="show" returns="void" signature="show() -&gt; titanium" />
                        <variable citdl="String" name="color" />
                        <variable citdl="Object" name="font" />
                        <variable citdl="String" name="message" />
                        <variable citdl="String" name="messageid" />
                        <variable citdl="Number" name="style" />
                    </scope>
                    <!-- Titanium.UI.AlertDialog object -->
                    <scope ilk="class" name="AlertDialog" doc="The Alert Dialog is created by Titanium.UI.createAlertDialog and allows you to show a modal application dialog. Platforms = [android, iphone, ipad]" returns="Object">
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Cause the dialog to become hidden." ilk="function" name="hide" returns="void" signature="hide() -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Cause the dialog to become visible." ilk="function" name="show" returns="void" signature="show() -&gt; titanium" />
                        <variable citdl="Array" name="buttonNames" />
                        <variable citdl="Number" name="cancel" />
                        <variable citdl="String" name="message" />
                        <variable citdl="String" name="messageid" />
                        <variable citdl="String" name="title" />
                    </scope>
                    <!-- Titanium.UI.Android module -->
                    <scope ilk="class" name="Android" doc="The Android specific UI capabilities. All properties, methods and events in this namespace will only work on Android related devices. Platforms = [android]" returns="Object">
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Request that the soft keyboard hide. Note: It is not currently possible in the native Android API to detect that the keyboard is already visible. Note: It is not possible to globally show the keyboard at this point." ilk="function" name="hideSoftKeyboard" returns="void" signature="hideSoftKeyboard() -&gt; titanium" />
                        <scope doc="Open Android native preferences UI activity. You need to place your preferences.xml file in the platform/android/res/xml/ folder of your project. Documentation on the file format may be found in the Android documentation http://developer.android.com/resources/samples/ApiDemos/res/xml/preferences.html." ilk="function" name="openPreferences" returns="void" signature="openPreferences() -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <variable citdl="Number" name="LINKIFY_ALL" />
                        <variable citdl="Number" name="LINKIFY_EMAIL_ADDRESSES" />
                        <variable citdl="Number" name="LINKIFY_MAP_ADDRESSES" />
                        <variable citdl="Number" name="LINKIFY_MAP_LINKS" />
                        <variable citdl="Number" name="LINKIFY_PHONE_NUMBERS" />
                        <variable citdl="Number" name="LINKIFY_WEB_URLS" />
                        <variable citdl="Number" name="SOFT_INPUT_ADJUST_PAN" />
                        <variable citdl="Number" name="SOFT_INPUT_ADJUST_RESIZE" />
                        <variable citdl="Number" name="SOFT_INPUT_ADJUST_UNSPECIFIED" />
                        <variable citdl="Number" name="SOFT_INPUT_STATE_HIDDEN" />
                        <variable citdl="Number" name="SOFT_INPUT_STATE_UNSPECIFIED" />
                        <variable citdl="Number" name="SOFT_INPUT_STATE_VISIBLE" />
                        <variable citdl="Number" name="SOFT_KEYBOARD_DEFAULT_ON_FOCUS" />
                        <variable citdl="Number" name="SOFT_KEYBOARD_HIDE_ON_FOCUS" />
                        <variable citdl="Number" name="SOFT_KEYBOARD_SHOW_ON_FOCUS" />
                        <variable citdl="Number" name="SWITCH_STYLE_CHECKBOX" />
                        <variable citdl="Number" name="SWITCH_STYLE_TOGGLEBUTTON" />
                    </scope>
                    <!-- Titanium.UI.Animation object -->
                    <scope ilk="class" name="Animation" doc="The Animation object is used for specifying lower-level animation properties and more low-level control of events during an animation. The Animation is created by the method Titanium.UI.createAnimation. Platforms = [android, iphone, ipad]" returns="Object">
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <variable citdl="Boolean" name="autoreverse" />
                        <variable citdl="String" name="backgroundColor" />
                        <variable citdl="Number" name="bottom" />
                        <variable citdl="Object" name="center" />
                        <variable citdl="String" name="color" />
                        <variable citdl="Number" name="curve" />
                        <variable citdl="Number" name="delay" />
                        <variable citdl="Number" name="duration" />
                        <variable citdl="Number" name="height" />
                        <variable citdl="Number" name="left" />
                        <variable citdl="Number" name="opacity" />
                        <variable citdl="Boolean" name="opaque" />
                        <variable citdl="Number" name="repeat" />
                        <variable citdl="Number" name="right" />
                        <variable citdl="Number" name="top" />
                        <variable citdl="Object" name="transform" />
                        <variable citdl="Number" name="transition" />
                        <variable citdl="Boolean" name="visible" />
                        <variable citdl="Number" name="width" />
                        <variable citdl="Number" name="zIndex" />
                    </scope>
                    <!-- Titanium.UI.Button object -->
                    <scope ilk="class" name="Button" doc="A Button is created by the method Titanium.UI.createButton. Platforms = [android, iphone, ipad]" returns="Object">
                        <scope doc="Add a child to the view hierarchy." ilk="function" name="add" returns="void" signature="add(view) -&gt; titanium" />
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Animate the view." ilk="function" name="animate" returns="void" signature="animate(properties, callback) -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Hide the view." ilk="function" name="hide" returns="void" signature="hide() -&gt; titanium" />
                        <scope doc="Remove a previously add view from the view hierarchy." ilk="function" name="remove" returns="void" signature="remove(view) -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Make the view visible." ilk="function" name="show" returns="void" signature="show() -&gt; titanium" />
                        <scope doc="Return a Blob image of the rendered view." ilk="function" name="toImage" returns="Object" signature="toImage(callback) -&gt; titanium" />
                        <variable citdl="Object" name="anchorPoint" />
                        <variable citdl="Object" name="animatedCenterPoint" />
                        <variable citdl="String" name="backgroundColor" />
                        <variable citdl="String" name="backgroundDisabledColor" />
                        <variable citdl="String" name="backgroundDisabledImage" />
                        <variable citdl="String" name="backgroundFocusedColor" />
                        <variable citdl="String" name="backgroundFocusedImage" />
                        <variable citdl="Object" name="backgroundGradient" />
                        <variable citdl="String" name="backgroundImage" />
                        <variable citdl="Number" name="backgroundLeftCap" />
                        <variable citdl="String" name="backgroundSelectedColor" />
                        <variable citdl="String" name="backgroundSelectedImage" />
                        <variable citdl="Number" name="backgroundTopCap" />
                        <variable citdl="String" name="borderColor" />
                        <variable citdl="Number" name="borderRadius" />
                        <variable citdl="Number" name="borderWidth" />
                        <variable citdl="Number or String" name="bottom" />
                        <variable citdl="Object" name="center" />
                        <variable citdl="String" name="color" />
                        <variable citdl="Boolean" name="enabled" />
                        <variable citdl="Boolean" name="focusable" />
                        <variable citdl="Object" name="font" />
                        <variable citdl="String" name="font-family" />
                        <variable citdl="String" name="font-size" />
                        <variable citdl="String" name="font-style" />
                        <variable citdl="String" name="font-weight" />
                        <variable citdl="Number or String" name="height" />
                        <variable citdl="String" name="image" />
                        <variable citdl="Number or String" name="left" />
                        <variable citdl="Number" name="opacity" />
                        <variable citdl="Number or String" name="right" />
                        <variable citdl="String" name="selectedColor" />
                        <variable citdl="Object" name="size" />
                        <variable citdl="Number" name="softKeyboardOnFocus" />
                        <variable citdl="Number" name="style" />
                        <variable citdl="String" name="title" />
                        <variable citdl="String" name="titleid" />
                        <variable citdl="Number or String" name="top" />
                        <variable citdl="Boolean" name="touchEnabled" />
                        <variable citdl="Object" name="transform" />
                        <variable citdl="Boolean" name="visible" />
                        <variable citdl="Number or String" name="width" />
                        <variable citdl="Number" name="zIndex" />
                    </scope>
                    <!-- Titanium.UI.ButtonBar object -->
                    <scope ilk="class" name="ButtonBar" doc="A Button Bar is created by the method Titanium.UI.createButtonBar. Platforms = [iphone, ipad]" returns="Object">
                        <scope doc="Add a child to the view hierarchy." ilk="function" name="add" returns="void" signature="add(view) -&gt; titanium" />
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Animate the view." ilk="function" name="animate" returns="void" signature="animate(properties, callback) -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Hide the view." ilk="function" name="hide" returns="void" signature="hide() -&gt; titanium" />
                        <scope doc="Remove a previously add view from the view hierarchy." ilk="function" name="remove" returns="void" signature="remove(view) -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Make the view visible." ilk="function" name="show" returns="void" signature="show() -&gt; titanium" />
                        <scope doc="Return a Blob image of the rendered view." ilk="function" name="toImage" returns="Object" signature="toImage(callback) -&gt; titanium" />
                        <variable citdl="Object" name="anchorPoint" />
                        <variable citdl="Object" name="animatedCenterPoint" />
                        <variable citdl="String" name="backgroundColor" />
                        <variable citdl="String" name="backgroundDisabledColor" />
                        <variable citdl="String" name="backgroundDisabledImage" />
                        <variable citdl="String" name="backgroundFocusedColor" />
                        <variable citdl="String" name="backgroundFocusedImage" />
                        <variable citdl="Object" name="backgroundGradient" />
                        <variable citdl="String" name="backgroundImage" />
                        <variable citdl="Number" name="backgroundLeftCap" />
                        <variable citdl="String" name="backgroundSelectedColor" />
                        <variable citdl="String" name="backgroundSelectedImage" />
                        <variable citdl="Number" name="backgroundTopCap" />
                        <variable citdl="String" name="borderColor" />
                        <variable citdl="Number" name="borderRadius" />
                        <variable citdl="Number" name="borderWidth" />
                        <variable citdl="Number or String" name="bottom" />
                        <variable citdl="Object" name="center" />
                        <variable citdl="Boolean" name="focusable" />
                        <variable citdl="String" name="font-family" />
                        <variable citdl="String" name="font-size" />
                        <variable citdl="String" name="font-style" />
                        <variable citdl="String" name="font-weight" />
                        <variable citdl="Number or String" name="height" />
                        <variable citdl="Number" name="index" />
                        <variable citdl="Array" name="labels" />
                        <variable citdl="Number or String" name="left" />
                        <variable citdl="Number" name="opacity" />
                        <variable citdl="Number or String" name="right" />
                        <variable citdl="Object" name="size" />
                        <variable citdl="Number" name="softKeyboardOnFocus" />
                        <variable citdl="Number" name="style" />
                        <variable citdl="Number or String" name="top" />
                        <variable citdl="Boolean" name="touchEnabled" />
                        <variable citdl="Object" name="transform" />
                        <variable citdl="Boolean" name="visible" />
                        <variable citdl="Number or String" name="width" />
                        <variable citdl="Number" name="zIndex" />
                    </scope>
                    <!-- Titanium.UI.Clipboard module -->
                    <scope ilk="class" name="Clipboard" doc="A module used for accessing clipboard data. Platforms = [android, iphone, ipad]" returns="Object">
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Clear data of the given mime-type from the clipboard. If no mime-type is given, clear all data from the clipboard." ilk="function" name="clearData" returns="void" signature="clearData(type) -&gt; titanium" />
                        <scope doc="Clear the text portion of the clipboard." ilk="function" name="clearText" returns="void" signature="clearText() -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Get the data on the clipboard from the portion which contains data of the given mime-type." ilk="function" name="getData" returns="String" signature="getData(type) -&gt; titanium" />
                        <scope doc="Get the current text on the clipboard." ilk="function" name="getText" returns="String" signature="getText() -&gt; titanium" />
                        <scope doc="Return true if there is any content of the given mime-type on the clipboard." ilk="function" name="hasData" returns="Boolean" signature="hasData(type) -&gt; titanium" />
                        <scope doc="Return true if there is any content in the text portion of the clipboard." ilk="function" name="hasText" returns="Boolean" signature="hasText() -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Set the data on the clipboard given a mime-type and the new data. This method will set data on the appropriate portion of the clipboard for the given mime-type." ilk="function" name="setData" returns="void" signature="setData(type, data) -&gt; titanium" />
                        <scope doc="Set the text on the clipboard. This will overwrite the current contents of the clipboard." ilk="function" name="setText" returns="void" signature="setText(text) -&gt; titanium" />
                    </scope>
                    <!-- Titanium.UI.CoverFlowView object -->
                    <scope ilk="class" name="CoverFlowView" doc="The Cover Flow view is container for showing  animated, three dimensional images in a nice UI. The Cover Flow view is created by the method Titanium.UI.createCoverFlowView. Platforms = [iphone, ipad]" returns="Object">
                        <scope doc="Add a child to the view hierarchy." ilk="function" name="add" returns="void" signature="add(view) -&gt; titanium" />
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Animate the view." ilk="function" name="animate" returns="void" signature="animate(properties, callback) -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Hide the view." ilk="function" name="hide" returns="void" signature="hide() -&gt; titanium" />
                        <scope doc="Remove a previously add view from the view hierarchy." ilk="function" name="remove" returns="void" signature="remove(view) -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Change an image for a index." ilk="function" name="setImage" returns="void" signature="setImage(index, image) -&gt; titanium" />
                        <scope doc="Make the view visible." ilk="function" name="show" returns="void" signature="show() -&gt; titanium" />
                        <scope doc="Return a Blob image of the rendered view." ilk="function" name="toImage" returns="Object" signature="toImage(callback) -&gt; titanium" />
                        <variable citdl="Object" name="anchorPoint" />
                        <variable citdl="Object" name="animatedCenterPoint" />
                        <variable citdl="String" name="backgroundColor" />
                        <variable citdl="String" name="backgroundDisabledColor" />
                        <variable citdl="String" name="backgroundDisabledImage" />
                        <variable citdl="String" name="backgroundFocusedColor" />
                        <variable citdl="String" name="backgroundFocusedImage" />
                        <variable citdl="Object" name="backgroundGradient" />
                        <variable citdl="String" name="backgroundImage" />
                        <variable citdl="Number" name="backgroundLeftCap" />
                        <variable citdl="String" name="backgroundSelectedColor" />
                        <variable citdl="String" name="backgroundSelectedImage" />
                        <variable citdl="Number" name="backgroundTopCap" />
                        <variable citdl="String" name="borderColor" />
                        <variable citdl="Number" name="borderRadius" />
                        <variable citdl="Number" name="borderWidth" />
                        <variable citdl="Number or String" name="bottom" />
                        <variable citdl="Object" name="center" />
                        <variable citdl="Boolean" name="focusable" />
                        <variable citdl="String" name="font-family" />
                        <variable citdl="String" name="font-size" />
                        <variable citdl="String" name="font-style" />
                        <variable citdl="String" name="font-weight" />
                        <variable citdl="Number or String" name="height" />
                        <variable citdl="Array" name="images" />
                        <variable citdl="Number or String" name="left" />
                        <variable citdl="Number" name="opacity" />
                        <variable citdl="Number or String" name="right" />
                        <variable citdl="Number" name="selected" />
                        <variable citdl="Object" name="size" />
                        <variable citdl="Number" name="softKeyboardOnFocus" />
                        <variable citdl="Number" name="style" />
                        <variable citdl="Number or String" name="top" />
                        <variable citdl="Boolean" name="touchEnabled" />
                        <variable citdl="Object" name="transform" />
                        <variable citdl="Boolean" name="visible" />
                        <variable citdl="Number or String" name="width" />
                        <variable citdl="Number" name="zIndex" />
                    </scope>
                    <!-- Titanium.UI.DashboardItem object -->
                    <scope ilk="class" name="DashboardItem" doc="An item that represents a visual icon in the Titanium.UI.DashboardView. The Dashboard Item is created by the method Titanium.UI.createDashboardItem. Platforms = [iphone, ipad]" returns="Object">
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <variable citdl="Number" name="badge" />
                        <variable citdl="Boolean" name="canDelete" />
                        <variable citdl="String" name="image" />
                        <variable citdl="String" name="selectedImage" />
                    </scope>
                    <!-- Titanium.UI.DashboardView object -->
                    <scope ilk="class" name="DashboardView" doc="The Dashboard View provides a view that supports the ability to have Springboard-like view of icons which can be reordered by dragging and can contain multiple pages of icons in a scrollable view. The Dashboard View is created by the method Titanium.UI.createDashboardView. Platforms = [iphone, ipad]" returns="Object">
                        <scope doc="Add a child to the view hierarchy." ilk="function" name="add" returns="void" signature="add(view) -&gt; titanium" />
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Animate the view." ilk="function" name="animate" returns="void" signature="animate(properties, callback) -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Hide the view." ilk="function" name="hide" returns="void" signature="hide() -&gt; titanium" />
                        <scope doc="Remove a previously add view from the view hierarchy." ilk="function" name="remove" returns="void" signature="remove(view) -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Make the view visible." ilk="function" name="show" returns="void" signature="show() -&gt; titanium" />
                        <scope doc="Put the dashboard in edit mode." ilk="function" name="startEditing" returns="void" signature="startEditing() -&gt; titanium" />
                        <scope doc="Cancel editing." ilk="function" name="stopEditing" returns="void" signature="stopEditing() -&gt; titanium" />
                        <scope doc="Return a Blob image of the rendered view." ilk="function" name="toImage" returns="Object" signature="toImage(callback) -&gt; titanium" />
                        <variable citdl="Object" name="anchorPoint" />
                        <variable citdl="Object" name="animatedCenterPoint" />
                        <variable citdl="String" name="backgroundColor" />
                        <variable citdl="String" name="backgroundDisabledColor" />
                        <variable citdl="String" name="backgroundDisabledImage" />
                        <variable citdl="String" name="backgroundFocusedColor" />
                        <variable citdl="String" name="backgroundFocusedImage" />
                        <variable citdl="Object" name="backgroundGradient" />
                        <variable citdl="String" name="backgroundImage" />
                        <variable citdl="Number" name="backgroundLeftCap" />
                        <variable citdl="String" name="backgroundSelectedColor" />
                        <variable citdl="String" name="backgroundSelectedImage" />
                        <variable citdl="Number" name="backgroundTopCap" />
                        <variable citdl="String" name="borderColor" />
                        <variable citdl="Number" name="borderRadius" />
                        <variable citdl="Number" name="borderWidth" />
                        <variable citdl="Number or String" name="bottom" />
                        <variable citdl="Object" name="center" />
                        <variable citdl="Array" name="data" />
                        <variable citdl="Boolean" name="focusable" />
                        <variable citdl="String" name="font-family" />
                        <variable citdl="String" name="font-size" />
                        <variable citdl="String" name="font-style" />
                        <variable citdl="String" name="font-weight" />
                        <variable citdl="Number or String" name="height" />
                        <variable citdl="Number or String" name="left" />
                        <variable citdl="Number" name="opacity" />
                        <variable citdl="Number or String" name="right" />
                        <variable citdl="Object" name="size" />
                        <variable citdl="Number" name="softKeyboardOnFocus" />
                        <variable citdl="Number or String" name="top" />
                        <variable citdl="Boolean" name="touchEnabled" />
                        <variable citdl="Object" name="transform" />
                        <variable citdl="Boolean" name="visible" />
                        <variable citdl="Number or String" name="width" />
                        <variable citdl="Boolean" name="wobble" />
                        <variable citdl="Number" name="zIndex" />
                    </scope>
                    <!-- Titanium.UI.EmailDialog object -->
                    <scope ilk="class" name="EmailDialog" doc="The Email Dialog is created by Titanium.UI.createEmailDialog and allows you to send in application emails on behalf of the application user. Platforms = [android, iphone, ipad]" returns="Object">
                        <scope doc="Add an attachment to the email. the attachment can either be a Blob or File object. (Note: Android will only accept one attachment at this time.)." ilk="function" name="addAttachment" returns="void" signature="addAttachment(attachment) -&gt; titanium" />
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Return whether or not sending email is supported." ilk="function" name="isSupported" returns="Boolean" signature="isSupported() -&gt; titanium" />
                        <scope doc="Open the email dialog. the email dialog itself is a modal window." ilk="function" name="open" returns="void" signature="open(properties) -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <variable citdl="Number" name="CANCELLED" />
                        <variable citdl="Number" name="FAILED" />
                        <variable citdl="Number" name="SAVED" />
                        <variable citdl="Number" name="SENT" />
                        <variable citdl="String" name="barColor" />
                        <variable citdl="Array" name="bccRecipients" />
                        <variable citdl="Array" name="ccRecipients" />
                        <variable citdl="Boolean" name="html" />
                        <variable citdl="String" name="messageBody" />
                        <variable citdl="String" name="subject" />
                        <variable citdl="Array" name="toRecipients" />
                    </scope>
                    <!-- Titanium.UI.ImageView object -->
                    <scope ilk="class" name="ImageView" doc="An Image View is used to display an image or a series of images in an animation. The Image View is created by the method Titanium.UI.createImageView. Platforms = [android, iphone, ipad]" returns="Object">
                        <scope doc="Add a child to the view hierarchy." ilk="function" name="add" returns="void" signature="add(view) -&gt; titanium" />
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Animate the view." ilk="function" name="animate" returns="void" signature="animate(properties, callback) -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Hide the view." ilk="function" name="hide" returns="void" signature="hide() -&gt; titanium" />
                        <scope doc="Pause a started animation." ilk="function" name="pause" returns="void" signature="pause() -&gt; titanium" />
                        <scope doc="Remove a previously add view from the view hierarchy." ilk="function" name="remove" returns="void" signature="remove(view) -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Make the view visible." ilk="function" name="show" returns="void" signature="show() -&gt; titanium" />
                        <scope doc="Start the image animation. this method only works if you set multiple images." ilk="function" name="start" returns="void" signature="start() -&gt; titanium" />
                        <scope doc="Stop a started animation and reset the index to the first image." ilk="function" name="stop" returns="void" signature="stop() -&gt; titanium" />
                        <scope doc="Return the image as a Blob object." ilk="function" name="toBlob" returns="Object" signature="toBlob() -&gt; titanium" />
                        <scope doc="Return a Blob image of the rendered view." ilk="function" name="toImage" returns="Object" signature="toImage(callback) -&gt; titanium" />
                        <variable citdl="Object" name="anchorPoint" />
                        <variable citdl="Object" name="animatedCenterPoint" />
                        <variable citdl="Boolean" name="animating" />
                        <variable citdl="String" name="backgroundColor" />
                        <variable citdl="String" name="backgroundDisabledColor" />
                        <variable citdl="String" name="backgroundDisabledImage" />
                        <variable citdl="String" name="backgroundFocusedColor" />
                        <variable citdl="String" name="backgroundFocusedImage" />
                        <variable citdl="Object" name="backgroundGradient" />
                        <variable citdl="String" name="backgroundImage" />
                        <variable citdl="Number" name="backgroundLeftCap" />
                        <variable citdl="String" name="backgroundSelectedColor" />
                        <variable citdl="String" name="backgroundSelectedImage" />
                        <variable citdl="Number" name="backgroundTopCap" />
                        <variable citdl="String" name="borderColor" />
                        <variable citdl="Number" name="borderRadius" />
                        <variable citdl="Number" name="borderWidth" />
                        <variable citdl="Number or String" name="bottom" />
                        <variable citdl="Boolean" name="canScale" />
                        <variable citdl="Object" name="center" />
                        <variable citdl="String" name="defaultImage" />
                        <variable citdl="Number" name="duration" />
                        <variable citdl="Boolean" name="enableZoomControls" />
                        <variable citdl="Boolean" name="focusable" />
                        <variable citdl="String" name="font-family" />
                        <variable citdl="String" name="font-size" />
                        <variable citdl="String" name="font-style" />
                        <variable citdl="String" name="font-weight" />
                        <variable citdl="Number or String" name="height" />
                        <variable citdl="Object" name="image" />
                        <variable citdl="Array" name="images" />
                        <variable citdl="Number or String" name="left" />
                        <variable citdl="Number" name="opacity" />
                        <variable citdl="Boolean" name="paused" />
                        <variable citdl="Boolean" name="preventDefaultImage" />
                        <variable citdl="Number" name="repeatCount" />
                        <variable citdl="Boolean" name="reverse" />
                        <variable citdl="Number or String" name="right" />
                        <variable citdl="Object" name="size" />
                        <variable citdl="Number" name="softKeyboardOnFocus" />
                        <variable citdl="Number or String" name="top" />
                        <variable citdl="Boolean" name="touchEnabled" />
                        <variable citdl="Object" name="transform" />
                        <variable citdl="String" name="url" />
                        <variable citdl="Boolean" name="visible" />
                        <variable citdl="Number or String" name="width" />
                        <variable citdl="Number" name="zIndex" />
                    </scope>
                    <!-- Titanium.UI.Label object -->
                    <scope ilk="class" name="Label" doc="A Label is created by the method Titanium.UI.createLabel. Platforms = [android, iphone, ipad]" returns="Object">
                        <scope doc="Add a child to the view hierarchy." ilk="function" name="add" returns="void" signature="add(view) -&gt; titanium" />
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Animate the view." ilk="function" name="animate" returns="void" signature="animate(properties, callback) -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Hide the view." ilk="function" name="hide" returns="void" signature="hide() -&gt; titanium" />
                        <scope doc="Remove a previously add view from the view hierarchy." ilk="function" name="remove" returns="void" signature="remove(view) -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Make the view visible." ilk="function" name="show" returns="void" signature="show() -&gt; titanium" />
                        <scope doc="Return a Blob image of the rendered view." ilk="function" name="toImage" returns="Object" signature="toImage(callback) -&gt; titanium" />
                        <variable citdl="Object" name="anchorPoint" />
                        <variable citdl="Object" name="animatedCenterPoint" />
                        <variable citdl="Number" name="autoLink" />
                        <variable citdl="String" name="backgroundColor" />
                        <variable citdl="String" name="backgroundDisabledColor" />
                        <variable citdl="String" name="backgroundDisabledImage" />
                        <variable citdl="String" name="backgroundFocusedColor" />
                        <variable citdl="String" name="backgroundFocusedImage" />
                        <variable citdl="Object" name="backgroundGradient" />
                        <variable citdl="String" name="backgroundImage" />
                        <variable citdl="Number" name="backgroundLeftCap" />
                        <variable citdl="Number" name="backgroundPaddingBottom" />
                        <variable citdl="Number" name="backgroundPaddingLeft" />
                        <variable citdl="Number" name="backgroundPaddingRight" />
                        <variable citdl="Number" name="backgroundPaddingTop" />
                        <variable citdl="String" name="backgroundSelectedColor" />
                        <variable citdl="String" name="backgroundSelectedImage" />
                        <variable citdl="Number" name="backgroundTopCap" />
                        <variable citdl="String" name="borderColor" />
                        <variable citdl="Number" name="borderRadius" />
                        <variable citdl="Number" name="borderWidth" />
                        <variable citdl="Number or String" name="bottom" />
                        <variable citdl="Object" name="center" />
                        <variable citdl="String" name="color" />
                        <variable citdl="Boolean" name="ellipsize" />
                        <variable citdl="Boolean" name="focusable" />
                        <variable citdl="Object" name="font" />
                        <variable citdl="String" name="font-family" />
                        <variable citdl="String" name="font-size" />
                        <variable citdl="String" name="font-style" />
                        <variable citdl="String" name="font-weight" />
                        <variable citdl="Number or String" name="height" />
                        <variable citdl="String" name="highlightedColor" />
                        <variable citdl="String" name="html" />
                        <variable citdl="Number or String" name="left" />
                        <variable citdl="Number" name="minimumFontSize" />
                        <variable citdl="Number" name="opacity" />
                        <variable citdl="Number or String" name="right" />
                        <variable citdl="String" name="shadowColor" />
                        <variable citdl="Object" name="shadowOffset" />
                        <variable citdl="Object" name="size" />
                        <variable citdl="Number" name="softKeyboardOnFocus" />
                        <variable citdl="String" name="text" />
                        <variable citdl="String or Number" name="textAlign" />
                        <variable citdl="String" name="textid" />
                        <variable citdl="Number or String" name="top" />
                        <variable citdl="Boolean" name="touchEnabled" />
                        <variable citdl="Object" name="transform" />
                        <variable citdl="Boolean" name="visible" />
                        <variable citdl="Number or String" name="width" />
                        <variable citdl="Boolean" name="wordWrap" />
                        <variable citdl="Number" name="zIndex" />
                    </scope>
                    <!-- Titanium.UI.OptionDialog object -->
                    <scope ilk="class" name="OptionDialog" doc="The Option Dialog is created by Titanium.UI.createOptionDialog and allows you to show a modal dialog of one or more options to the user. Platforms = [android, iphone, ipad]">
                        <scope doc="Cause the dialog to become visible." ilk="function" name="show" returns="void" signature="show() -&gt; titanium" />
                        <variable citdl="Titanium.UI.View" name="androidView" />
                        <variable citdl="Number" name="cancel" />
                        <variable citdl="Number" name="destructive" />
                        <variable citdl="Array" name="options" />
                        <variable citdl="String" name="title" />
                        <variable citdl="String" name="titleid" />
                    </scope>
                    <!-- Titanium.UI.Picker object -->
                    <scope ilk="class" name="Picker" doc="A Picker is created by the method Titanium.UI.createPicker.  A Picker can be used to select one or more fixed values. Platforms = [android, iphone, ipad]" returns="Object">
                        <scope doc="Add an array of rows, a single row or a column to the picker." ilk="function" name="add" returns="void" signature="add(data) -&gt; titanium" />
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Get the selected row object for column." ilk="function" name="getSelectedRow" returns="Titanium.UI.PickerRow" signature="getSelectedRow(index) -&gt; titanium" />
                        <scope doc="Causes the picker to reload the values from the new column." ilk="function" name="reloadColumn" returns="void" signature="reloadColumn(column) -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Set the column's row to the selected state." ilk="function" name="setSelectedRow" returns="void" signature="setSelectedRow(column, row, animated) -&gt; titanium" />
                        <variable citdl="Array" name="columns" />
                        <variable citdl="Number" name="countDownDuration" />
                        <variable citdl="String" name="locale" />
                        <variable citdl="Date" name="minDate" />
                        <variable citdl="Number" name="minuteInterval" />
                        <variable citdl="Boolean" name="selectionIndicator" />
                        <variable citdl="Number" name="type" />
                        <variable citdl="Boolean" name="useSpinner" />
                        <variable citdl="Date" name="value" />
                        <variable citdl="Number" name="visibleItems" />
                    </scope>
                    <!-- Titanium.UI.PickerColumn object -->
                    <scope ilk="class" name="PickerColumn" doc="The picker column object created by Titanium.UI.createPickerColumn. Platforms = [android, iphone, ipad]" returns="Object">
                        <scope doc="Add a child to the view hierarchy." ilk="function" name="add" returns="void" signature="add(view) -&gt; titanium" />
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="A Titanium.UI.PickerRow object to add to the column." ilk="function" name="addRow" returns="void" signature="addRow(object) -&gt; titanium" />
                        <scope doc="Animate the view." ilk="function" name="animate" returns="void" signature="animate(properties, callback) -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Hide the view." ilk="function" name="hide" returns="void" signature="hide() -&gt; titanium" />
                        <scope doc="Remove a previously add view from the view hierarchy." ilk="function" name="remove" returns="void" signature="remove(view) -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <scope doc="A Titanium.UI.PickerRow object to remove." ilk="function" name="removeRow" returns="void" signature="removeRow(object) -&gt; titanium" />
                        <scope doc="Make the view visible." ilk="function" name="show" returns="void" signature="show() -&gt; titanium" />
                        <scope doc="Return a Blob image of the rendered view." ilk="function" name="toImage" returns="Object" signature="toImage(callback) -&gt; titanium" />
                        <variable citdl="Object" name="anchorPoint" />
                        <variable citdl="Object" name="animatedCenterPoint" />
                        <variable citdl="String" name="backgroundColor" />
                        <variable citdl="String" name="backgroundDisabledColor" />
                        <variable citdl="String" name="backgroundDisabledImage" />
                        <variable citdl="String" name="backgroundFocusedColor" />
                        <variable citdl="String" name="backgroundFocusedImage" />
                        <variable citdl="Object" name="backgroundGradient" />
                        <variable citdl="String" name="backgroundImage" />
                        <variable citdl="Number" name="backgroundLeftCap" />
                        <variable citdl="String" name="backgroundSelectedColor" />
                        <variable citdl="String" name="backgroundSelectedImage" />
                        <variable citdl="Number" name="backgroundTopCap" />
                        <variable citdl="String" name="borderColor" />
                        <variable citdl="Number" name="borderRadius" />
                        <variable citdl="Number" name="borderWidth" />
                        <variable citdl="Number or String" name="bottom" />
                        <variable citdl="Object" name="center" />
                        <variable citdl="Boolean" name="focusable" />
                        <variable citdl="String" name="font-family" />
                        <variable citdl="String" name="font-size" />
                        <variable citdl="String" name="font-style" />
                        <variable citdl="String" name="font-weight" />
                        <variable citdl="Number or String" name="height" />
                        <variable citdl="Number or String" name="left" />
                        <variable citdl="Number" name="opacity" />
                        <variable citdl="Number or String" name="right" />
                        <variable citdl="Number" name="rowCount" />
                        <variable citdl="Array" name="rows" />
                        <variable citdl="Object" name="size" />
                        <variable citdl="Number" name="softKeyboardOnFocus" />
                        <variable citdl="Number or String" name="top" />
                        <variable citdl="Boolean" name="touchEnabled" />
                        <variable citdl="Object" name="transform" />
                        <variable citdl="Boolean" name="visible" />
                        <variable citdl="Number or String" name="width" />
                        <variable citdl="Number" name="zIndex" />
                    </scope>
                    <!-- Titanium.UI.PickerRow object -->
                    <scope ilk="class" name="PickerRow" doc="The picker row object created by Titanium.UI.createPickerRow. Platforms = [android, iphone, ipad]" returns="Object">
                        <scope doc="Add a child to the view hierarchy." ilk="function" name="add" returns="void" signature="add(view) -&gt; titanium" />
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Animate the view." ilk="function" name="animate" returns="void" signature="animate(properties, callback) -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Hide the view." ilk="function" name="hide" returns="void" signature="hide() -&gt; titanium" />
                        <scope doc="Remove a previously add view from the view hierarchy." ilk="function" name="remove" returns="void" signature="remove(view) -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Make the view visible." ilk="function" name="show" returns="void" signature="show() -&gt; titanium" />
                        <scope doc="Return a Blob image of the rendered view." ilk="function" name="toImage" returns="Object" signature="toImage(callback) -&gt; titanium" />
                        <variable citdl="Object" name="anchorPoint" />
                        <variable citdl="Object" name="animatedCenterPoint" />
                        <variable citdl="String" name="backgroundColor" />
                        <variable citdl="String" name="backgroundDisabledColor" />
                        <variable citdl="String" name="backgroundDisabledImage" />
                        <variable citdl="String" name="backgroundFocusedColor" />
                        <variable citdl="String" name="backgroundFocusedImage" />
                        <variable citdl="Object" name="backgroundGradient" />
                        <variable citdl="String" name="backgroundImage" />
                        <variable citdl="Number" name="backgroundLeftCap" />
                        <variable citdl="String" name="backgroundSelectedColor" />
                        <variable citdl="String" name="backgroundSelectedImage" />
                        <variable citdl="Number" name="backgroundTopCap" />
                        <variable citdl="String" name="borderColor" />
                        <variable citdl="Number" name="borderRadius" />
                        <variable citdl="Number" name="borderWidth" />
                        <variable citdl="Number or String" name="bottom" />
                        <variable citdl="Object" name="center" />
                        <variable citdl="Boolean" name="focusable" />
                        <variable citdl="String" name="font-family" />
                        <variable citdl="String" name="font-size" />
                        <variable citdl="String" name="font-style" />
                        <variable citdl="String" name="font-weight" />
                        <variable citdl="Number" name="fontSize" />
                        <variable citdl="Number or String" name="height" />
                        <variable citdl="Number or String" name="left" />
                        <variable citdl="Number" name="opacity" />
                        <variable citdl="Number or String" name="right" />
                        <variable citdl="Boolean" name="selected" />
                        <variable citdl="Object" name="size" />
                        <variable citdl="Number" name="softKeyboardOnFocus" />
                        <variable citdl="String" name="title" />
                        <variable citdl="Number or String" name="top" />
                        <variable citdl="Boolean" name="touchEnabled" />
                        <variable citdl="Object" name="transform" />
                        <variable citdl="Boolean" name="visible" />
                        <variable citdl="Number or String" name="width" />
                        <variable citdl="Number" name="zIndex" />
                    </scope>
                    <!-- Titanium.UI.ProgressBar object -->
                    <scope ilk="class" name="ProgressBar" doc="A Progress Bar is created by the method Titanium.UI.createProgressBar. Platforms = [android, iphone, ipad]">
                        <variable citdl="String" name="color" />
                        <variable citdl="Object" name="font" />
                        <variable citdl="Number" name="max" />
                        <variable citdl="String" name="message" />
                        <variable citdl="Number" name="min" />
                        <variable citdl="String" name="style" />
                        <variable citdl="Number" name="value" />
                    </scope>
                    <!-- Titanium.UI.ScrollView object -->
                    <scope ilk="class" name="ScrollView" doc="A Scroll View is used to create a scrollable region of content.  Views added to the Scroll View will be scrolled based on the content size of the Scroll View. The Scroll View is created by the method Titanium.UI.createScrollView. Note: In Android, Scroll Views can only scroll in one direction, either vertical or horizontal, but not both at the same time. See the Titanium.UI.ScrollView.scrollType property. Platforms = [android, iphone, ipad]" returns="Object">
                        <scope doc="Add a child to the view hierarchy." ilk="function" name="add" returns="void" signature="add(view) -&gt; titanium" />
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Animate the view." ilk="function" name="animate" returns="void" signature="animate(properties, callback) -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Hide the view." ilk="function" name="hide" returns="void" signature="hide() -&gt; titanium" />
                        <scope doc="Remove a previously add view from the view hierarchy." ilk="function" name="remove" returns="void" signature="remove(view) -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <scope doc="ScrollTo a particular point." ilk="function" name="scrollTo" returns="void" signature="scrollTo(x, y) -&gt; titanium" />
                        <scope doc="Make the view visible." ilk="function" name="show" returns="void" signature="show() -&gt; titanium" />
                        <scope doc="Return a Blob image of the rendered view." ilk="function" name="toImage" returns="Object" signature="toImage(callback) -&gt; titanium" />
                        <variable citdl="Object" name="anchorPoint" />
                        <variable citdl="Object" name="animatedCenterPoint" />
                        <variable citdl="String" name="backgroundColor" />
                        <variable citdl="String" name="backgroundDisabledColor" />
                        <variable citdl="String" name="backgroundDisabledImage" />
                        <variable citdl="String" name="backgroundFocusedColor" />
                        <variable citdl="String" name="backgroundFocusedImage" />
                        <variable citdl="Object" name="backgroundGradient" />
                        <variable citdl="String" name="backgroundImage" />
                        <variable citdl="Number" name="backgroundLeftCap" />
                        <variable citdl="String" name="backgroundSelectedColor" />
                        <variable citdl="String" name="backgroundSelectedImage" />
                        <variable citdl="Number" name="backgroundTopCap" />
                        <variable citdl="String" name="borderColor" />
                        <variable citdl="Number" name="borderRadius" />
                        <variable citdl="Number" name="borderWidth" />
                        <variable citdl="Number or String" name="bottom" />
                        <variable citdl="Boolean" name="canCancelEvents" />
                        <variable citdl="Object" name="center" />
                        <variable citdl="Number" name="contentHeight" />
                        <variable citdl="Object" name="contentOffset" />
                        <variable citdl="Object" name="contentWidth" />
                        <variable citdl="Boolean" name="disableBounce" />
                        <variable citdl="Boolean" name="focusable" />
                        <variable citdl="String" name="font-family" />
                        <variable citdl="String" name="font-size" />
                        <variable citdl="String" name="font-style" />
                        <variable citdl="String" name="font-weight" />
                        <variable citdl="Number or String" name="height" />
                        <variable citdl="Boolean" name="horizontalBounce" />
                        <variable citdl="Number or String" name="left" />
                        <variable citdl="Number" name="maxZoomScale" />
                        <variable citdl="Number" name="minZoomScale" />
                        <variable citdl="Number" name="opacity" />
                        <variable citdl="Number or String" name="right" />
                        <variable citdl="String" name="scrollType" />
                        <variable citdl="Boolean" name="showHorizontalScrollIndicator" />
                        <variable citdl="Boolean" name="showVerticalScrollIndicator" />
                        <variable citdl="Object" name="size" />
                        <variable citdl="Number" name="softKeyboardOnFocus" />
                        <variable citdl="Number or String" name="top" />
                        <variable citdl="Boolean" name="touchEnabled" />
                        <variable citdl="Object" name="transform" />
                        <variable citdl="Boolean" name="verticalBounce" />
                        <variable citdl="Boolean" name="visible" />
                        <variable citdl="Number or String" name="width" />
                        <variable citdl="Number" name="zIndex" />
                        <variable citdl="Number" name="zoomScale" />
                    </scope>
                    <!-- Titanium.UI.ScrollableView object -->
                    <scope ilk="class" name="ScrollableView" doc="The Scrollable View provides a view that supports horizontal scrolling on one or more views in a gesture motion.  The Scrollable View also optionally supports a visual paging control to indicate the page that the view is visible. The Scrollable View is created by the method Titanium.UI.createScrollableView. Platforms = [android, iphone, ipad]" returns="Object">
                        <scope doc="Add a child to the view hierarchy." ilk="function" name="add" returns="void" signature="add(view) -&gt; titanium" />
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Add a new view to the Scrollable View." ilk="function" name="addView" returns="void" signature="addView(view) -&gt; titanium" />
                        <scope doc="Animate the view." ilk="function" name="animate" returns="void" signature="animate(properties, callback) -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Hide the view." ilk="function" name="hide" returns="void" signature="hide() -&gt; titanium" />
                        <scope doc="Remove a previously add view from the view hierarchy." ilk="function" name="remove" returns="void" signature="remove(view) -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Remove an existing view from the Scrollable View." ilk="function" name="removeView" returns="void" signature="removeView(view) -&gt; titanium" />
                        <scope doc="Scroll to a specific view." ilk="function" name="scrollToView" returns="void" signature="scrollToView(view) -&gt; titanium" />
                        <scope doc="Make the view visible." ilk="function" name="show" returns="void" signature="show() -&gt; titanium" />
                        <scope doc="Return a Blob image of the rendered view." ilk="function" name="toImage" returns="Object" signature="toImage(callback) -&gt; titanium" />
                        <variable citdl="Object" name="anchorPoint" />
                        <variable citdl="Object" name="animatedCenterPoint" />
                        <variable citdl="String" name="backgroundColor" />
                        <variable citdl="String" name="backgroundDisabledColor" />
                        <variable citdl="String" name="backgroundDisabledImage" />
                        <variable citdl="String" name="backgroundFocusedColor" />
                        <variable citdl="String" name="backgroundFocusedImage" />
                        <variable citdl="Object" name="backgroundGradient" />
                        <variable citdl="String" name="backgroundImage" />
                        <variable citdl="Number" name="backgroundLeftCap" />
                        <variable citdl="String" name="backgroundSelectedColor" />
                        <variable citdl="String" name="backgroundSelectedImage" />
                        <variable citdl="Number" name="backgroundTopCap" />
                        <variable citdl="String" name="borderColor" />
                        <variable citdl="Number" name="borderRadius" />
                        <variable citdl="Number" name="borderWidth" />
                        <variable citdl="Number or String" name="bottom" />
                        <variable citdl="Object" name="center" />
                        <variable citdl="Number" name="currentPage" />
                        <variable citdl="Boolean" name="focusable" />
                        <variable citdl="String" name="font-family" />
                        <variable citdl="String" name="font-size" />
                        <variable citdl="String" name="font-style" />
                        <variable citdl="String" name="font-weight" />
                        <variable citdl="Number or String" name="height" />
                        <variable citdl="Number or String" name="left" />
                        <variable citdl="Number" name="maxZoomScale" />
                        <variable citdl="Number" name="minZoomScale" />
                        <variable citdl="Number" name="opacity" />
                        <variable citdl="String" name="pagingControlColor" />
                        <variable citdl="Number" name="pagingControlHeight" />
                        <variable citdl="Number or String" name="right" />
                        <variable citdl="Boolean" name="showPagingControl" />
                        <variable citdl="Object" name="size" />
                        <variable citdl="Number" name="softKeyboardOnFocus" />
                        <variable citdl="Number or String" name="top" />
                        <variable citdl="Boolean" name="touchEnabled" />
                        <variable citdl="Object" name="transform" />
                        <variable citdl="Array" name="views" />
                        <variable citdl="Boolean" name="visible" />
                        <variable citdl="Number or String" name="width" />
                        <variable citdl="Number" name="zIndex" />
                    </scope>
                    <!-- Titanium.UI.SearchBar object -->
                    <scope ilk="class" name="SearchBar" doc="A Search Bar is created by the method Titanium.UI.createSearchBar. Platforms = [android, iphone, ipad]" returns="Object">
                        <scope doc="Add a child to the view hierarchy." ilk="function" name="add" returns="void" signature="add(view) -&gt; titanium" />
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Animate the view." ilk="function" name="animate" returns="void" signature="animate(properties, callback) -&gt; titanium" />
                        <scope doc="Called to force the search bar to lose focus." ilk="function" name="blur" returns="void" signature="blur() -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Called to force the search bar to focus." ilk="function" name="focus" returns="void" signature="focus() -&gt; titanium" />
                        <scope doc="Hide the view." ilk="function" name="hide" returns="void" signature="hide() -&gt; titanium" />
                        <scope doc="Remove a previously add view from the view hierarchy." ilk="function" name="remove" returns="void" signature="remove(view) -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Make the view visible." ilk="function" name="show" returns="void" signature="show() -&gt; titanium" />
                        <scope doc="Return a Blob image of the rendered view." ilk="function" name="toImage" returns="Object" signature="toImage(callback) -&gt; titanium" />
                        <variable citdl="Object" name="anchorPoint" />
                        <variable citdl="Object" name="animatedCenterPoint" />
                        <variable citdl="Boolean" name="autocapitalization" />
                        <variable citdl="Boolean" name="autocorrect" />
                        <variable citdl="String" name="backgroundColor" />
                        <variable citdl="String" name="backgroundDisabledColor" />
                        <variable citdl="String" name="backgroundDisabledImage" />
                        <variable citdl="String" name="backgroundFocusedColor" />
                        <variable citdl="String" name="backgroundFocusedImage" />
                        <variable citdl="Object" name="backgroundGradient" />
                        <variable citdl="String" name="backgroundImage" />
                        <variable citdl="Number" name="backgroundLeftCap" />
                        <variable citdl="String" name="backgroundSelectedColor" />
                        <variable citdl="String" name="backgroundSelectedImage" />
                        <variable citdl="Number" name="backgroundTopCap" />
                        <variable citdl="String" name="barColor" />
                        <variable citdl="String" name="borderColor" />
                        <variable citdl="Number" name="borderRadius" />
                        <variable citdl="Number" name="borderWidth" />
                        <variable citdl="Number or String" name="bottom" />
                        <variable citdl="Object" name="center" />
                        <variable citdl="Boolean" name="focusable" />
                        <variable citdl="String" name="font-family" />
                        <variable citdl="String" name="font-size" />
                        <variable citdl="String" name="font-style" />
                        <variable citdl="String" name="font-weight" />
                        <variable citdl="Number or String" name="height" />
                        <variable citdl="String" name="hintText" />
                        <variable citdl="String" name="hinttextid" />
                        <variable citdl="Number" name="keyboardType" />
                        <variable citdl="Number or String" name="left" />
                        <variable citdl="Number" name="opacity" />
                        <variable citdl="String" name="prompt" />
                        <variable citdl="String" name="promptid" />
                        <variable citdl="Number or String" name="right" />
                        <variable citdl="Boolean" name="showCancel" />
                        <variable citdl="Object" name="size" />
                        <variable citdl="Number" name="softKeyboardOnFocus" />
                        <variable citdl="Number or String" name="top" />
                        <variable citdl="Boolean" name="touchEnabled" />
                        <variable citdl="Object" name="transform" />
                        <variable citdl="String" name="value" />
                        <variable citdl="Boolean" name="visible" />
                        <variable citdl="Number or String" name="width" />
                        <variable citdl="Number" name="zIndex" />
                    </scope>
                    <!-- Titanium.UI.Slider object -->
                    <scope ilk="class" name="Slider" doc="A Slider is created by the method Titanium.UI.createSlider. Platforms = [android, iphone, ipad]" returns="Object">
                        <scope doc="Add a child to the view hierarchy." ilk="function" name="add" returns="void" signature="add(view) -&gt; titanium" />
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Animate the view." ilk="function" name="animate" returns="void" signature="animate(properties, callback) -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Hide the view." ilk="function" name="hide" returns="void" signature="hide() -&gt; titanium" />
                        <scope doc="Remove a previously add view from the view hierarchy." ilk="function" name="remove" returns="void" signature="remove(view) -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Make the view visible." ilk="function" name="show" returns="void" signature="show() -&gt; titanium" />
                        <scope doc="Return a Blob image of the rendered view." ilk="function" name="toImage" returns="Object" signature="toImage(callback) -&gt; titanium" />
                        <variable citdl="Object" name="anchorPoint" />
                        <variable citdl="Object" name="animatedCenterPoint" />
                        <variable citdl="String" name="backgroundColor" />
                        <variable citdl="String" name="backgroundDisabledColor" />
                        <variable citdl="String" name="backgroundDisabledImage" />
                        <variable citdl="String" name="backgroundFocusedColor" />
                        <variable citdl="String" name="backgroundFocusedImage" />
                        <variable citdl="Object" name="backgroundGradient" />
                        <variable citdl="String" name="backgroundImage" />
                        <variable citdl="Number" name="backgroundLeftCap" />
                        <variable citdl="String" name="backgroundSelectedColor" />
                        <variable citdl="String" name="backgroundSelectedImage" />
                        <variable citdl="Number" name="backgroundTopCap" />
                        <variable citdl="String" name="borderColor" />
                        <variable citdl="Number" name="borderRadius" />
                        <variable citdl="Number" name="borderWidth" />
                        <variable citdl="Number or String" name="bottom" />
                        <variable citdl="Object" name="center" />
                        <variable citdl="String" name="disabledLeftTrackImage" />
                        <variable citdl="String" name="disabledRightTrackImage" />
                        <variable citdl="String" name="disabledThumbImage" />
                        <variable citdl="Boolean" name="enabled" />
                        <variable citdl="Boolean" name="focusable" />
                        <variable citdl="String" name="font-family" />
                        <variable citdl="String" name="font-size" />
                        <variable citdl="String" name="font-style" />
                        <variable citdl="String" name="font-weight" />
                        <variable citdl="Number or String" name="height" />
                        <variable citdl="String" name="highlightedLeftTrackImage" />
                        <variable citdl="String" name="highlightedRightTrackImage" />
                        <variable citdl="String" name="highlightedThumbImage" />
                        <variable citdl="Number or String" name="left" />
                        <variable citdl="String" name="leftTrackImage" />
                        <variable citdl="Number" name="max" />
                        <variable citdl="Number" name="maxRange" />
                        <variable citdl="Number" name="min" />
                        <variable citdl="Number" name="minRange" />
                        <variable citdl="Number" name="opacity" />
                        <variable citdl="Number or String" name="right" />
                        <variable citdl="String" name="rightTrackImage" />
                        <variable citdl="String" name="selectedLeftTrackImage" />
                        <variable citdl="String" name="selectedRightTrackImage" />
                        <variable citdl="String" name="selectedThumbImage" />
                        <variable citdl="Object" name="size" />
                        <variable citdl="Number" name="softKeyboardOnFocus" />
                        <variable citdl="String" name="thumbImage" />
                        <variable citdl="Number or String" name="top" />
                        <variable citdl="Boolean" name="touchEnabled" />
                        <variable citdl="Object" name="transform" />
                        <variable citdl="String" name="value" />
                        <variable citdl="Boolean" name="visible" />
                        <variable citdl="Number or String" name="width" />
                        <variable citdl="Number" name="zIndex" />
                    </scope>
                    <!-- Titanium.UI.Switch object -->
                    <scope ilk="class" name="Switch" doc="A Switch is created by the method Titanium.UI.createSwitch. Platforms = [android, iphone, ipad]" returns="Object">
                        <scope doc="Add a child to the view hierarchy." ilk="function" name="add" returns="void" signature="add(view) -&gt; titanium" />
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Animate the view." ilk="function" name="animate" returns="void" signature="animate(properties, callback) -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Hide the view." ilk="function" name="hide" returns="void" signature="hide() -&gt; titanium" />
                        <scope doc="Remove a previously add view from the view hierarchy." ilk="function" name="remove" returns="void" signature="remove(view) -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Make the view visible." ilk="function" name="show" returns="void" signature="show() -&gt; titanium" />
                        <scope doc="Return a Blob image of the rendered view." ilk="function" name="toImage" returns="Object" signature="toImage(callback) -&gt; titanium" />
                        <variable citdl="Object" name="anchorPoint" />
                        <variable citdl="Object" name="animatedCenterPoint" />
                        <variable citdl="String" name="backgroundColor" />
                        <variable citdl="String" name="backgroundDisabledColor" />
                        <variable citdl="String" name="backgroundDisabledImage" />
                        <variable citdl="String" name="backgroundFocusedColor" />
                        <variable citdl="String" name="backgroundFocusedImage" />
                        <variable citdl="Object" name="backgroundGradient" />
                        <variable citdl="String" name="backgroundImage" />
                        <variable citdl="Number" name="backgroundLeftCap" />
                        <variable citdl="String" name="backgroundSelectedColor" />
                        <variable citdl="String" name="backgroundSelectedImage" />
                        <variable citdl="Number" name="backgroundTopCap" />
                        <variable citdl="String" name="borderColor" />
                        <variable citdl="Number" name="borderRadius" />
                        <variable citdl="Number" name="borderWidth" />
                        <variable citdl="Number or String" name="bottom" />
                        <variable citdl="Object" name="center" />
                        <variable citdl="Boolean" name="enabled" />
                        <variable citdl="Boolean" name="focusable" />
                        <variable citdl="String" name="font-family" />
                        <variable citdl="String" name="font-size" />
                        <variable citdl="String" name="font-style" />
                        <variable citdl="String" name="font-weight" />
                        <variable citdl="Number or String" name="height" />
                        <variable citdl="Number or String" name="left" />
                        <variable citdl="Number" name="opacity" />
                        <variable citdl="Number or String" name="right" />
                        <variable citdl="Object" name="size" />
                        <variable citdl="Number" name="softKeyboardOnFocus" />
                        <variable citdl="Number" name="style" />
                        <variable citdl="String" name="title" />
                        <variable citdl="String" name="titleOff" />
                        <variable citdl="String" name="titleOn" />
                        <variable citdl="Number or String" name="top" />
                        <variable citdl="Boolean" name="touchEnabled" />
                        <variable citdl="Object" name="transform" />
                        <variable citdl="String" name="value" />
                        <variable citdl="Boolean" name="visible" />
                        <variable citdl="Number or String" name="width" />
                        <variable citdl="Number" name="zIndex" />
                    </scope>
                    <!-- Titanium.UI.Tab object -->
                    <scope ilk="class" name="Tab" doc="A TabGroup Tab instance.  Each Tab instance maintains a stack of tab windows. Only one window within in the Tab can be visible at a time.  When a window is closed, either by the user or by code, the window is removed from the stack, make the previous window visible. The root tab window cannot be removed. The Tab Group is created by the method Titanium.UI.createTab. Platforms = [android, iphone, ipad]" returns="Object">
                        <scope doc="Add a child to the view hierarchy." ilk="function" name="add" returns="void" signature="add(view) -&gt; titanium" />
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Animate the view." ilk="function" name="animate" returns="void" signature="animate(properties, callback) -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Hide the view." ilk="function" name="hide" returns="void" signature="hide() -&gt; titanium" />
                        <scope doc="Remove a previously add view from the view hierarchy." ilk="function" name="remove" returns="void" signature="remove(view) -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Make the view visible." ilk="function" name="show" returns="void" signature="show() -&gt; titanium" />
                        <scope doc="Return a Blob image of the rendered view." ilk="function" name="toImage" returns="Object" signature="toImage(callback) -&gt; titanium" />
                        <variable citdl="Object" name="anchorPoint" />
                        <variable citdl="Object" name="animatedCenterPoint" />
                        <variable citdl="String" name="backgroundColor" />
                        <variable citdl="String" name="backgroundDisabledColor" />
                        <variable citdl="String" name="backgroundDisabledImage" />
                        <variable citdl="String" name="backgroundFocusedColor" />
                        <variable citdl="String" name="backgroundFocusedImage" />
                        <variable citdl="Object" name="backgroundGradient" />
                        <variable citdl="String" name="backgroundImage" />
                        <variable citdl="Number" name="backgroundLeftCap" />
                        <variable citdl="String" name="backgroundSelectedColor" />
                        <variable citdl="String" name="backgroundSelectedImage" />
                        <variable citdl="Number" name="backgroundTopCap" />
                        <variable citdl="String" name="badge" />
                        <variable citdl="String" name="borderColor" />
                        <variable citdl="Number" name="borderRadius" />
                        <variable citdl="Number" name="borderWidth" />
                        <variable citdl="Number or String" name="bottom" />
                        <variable citdl="Object" name="center" />
                        <variable citdl="Boolean" name="focusable" />
                        <variable citdl="String" name="font-family" />
                        <variable citdl="String" name="font-size" />
                        <variable citdl="String" name="font-style" />
                        <variable citdl="String" name="font-weight" />
                        <variable citdl="Number or String" name="height" />
                        <variable citdl="String" name="icon" />
                        <variable citdl="Number or String" name="left" />
                        <variable citdl="Number" name="opacity" />
                        <variable citdl="Number or String" name="right" />
                        <variable citdl="Object" name="size" />
                        <variable citdl="Number" name="softKeyboardOnFocus" />
                        <variable citdl="String" name="title" />
                        <variable citdl="Number or String" name="top" />
                        <variable citdl="Boolean" name="touchEnabled" />
                        <variable citdl="Object" name="transform" />
                        <variable citdl="Boolean" name="visible" />
                        <variable citdl="Number or String" name="width" />
                        <variable citdl="Titanium.UI.Window" name="window" />
                        <variable citdl="Number" name="zIndex" />
                    </scope>
                    <!-- Titanium.UI.TabGroup object -->
                    <scope ilk="class" name="TabGroup" doc="The Tab Group allows you to manage a tabbed UI of one or more windows. The Tab Group is created by the method Titanium.UI.createTabGroup. Platforms = [android, iphone, ipad]" returns="Object">
                        <scope doc="Add a child to the view hierarchy." ilk="function" name="add" returns="void" signature="add(view) -&gt; titanium" />
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Add a tab to the tab group." ilk="function" name="addTab" returns="void" signature="addTab() -&gt; titanium" />
                        <scope doc="Animate the view." ilk="function" name="animate" returns="void" signature="animate(properties, callback) -&gt; titanium" />
                        <scope doc="Close the tab group and remove it from the UI." ilk="function" name="close" returns="void" signature="close() -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Hide the view." ilk="function" name="hide" returns="void" signature="hide() -&gt; titanium" />
                        <scope doc="Open the tab group and make it visible." ilk="function" name="open" returns="void" signature="open() -&gt; titanium" />
                        <scope doc="Remove a previously add view from the view hierarchy." ilk="function" name="remove" returns="void" signature="remove(view) -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Remove a tab from the tab group." ilk="function" name="removeTab" returns="void" signature="removeTab() -&gt; titanium" />
                        <scope doc="Select the currently active tab in a tab group." ilk="function" name="setActiveTab" returns="void" signature="setActiveTab(indexOrObject) -&gt; titanium" />
                        <scope doc="Make the view visible." ilk="function" name="show" returns="void" signature="show() -&gt; titanium" />
                        <scope doc="Return a Blob image of the rendered view." ilk="function" name="toImage" returns="Object" signature="toImage(callback) -&gt; titanium" />
                        <variable citdl="Titanium.UI.Tab" name="activeTab" />
                        <variable citdl="Boolean" name="allowUserCustomization" />
                        <variable citdl="Object" name="anchorPoint" />
                        <variable citdl="Object" name="animatedCenterPoint" />
                        <variable citdl="String" name="backgroundColor" />
                        <variable citdl="String" name="backgroundDisabledColor" />
                        <variable citdl="String" name="backgroundDisabledImage" />
                        <variable citdl="String" name="backgroundFocusedColor" />
                        <variable citdl="String" name="backgroundFocusedImage" />
                        <variable citdl="Object" name="backgroundGradient" />
                        <variable citdl="String" name="backgroundImage" />
                        <variable citdl="Number" name="backgroundLeftCap" />
                        <variable citdl="String" name="backgroundSelectedColor" />
                        <variable citdl="String" name="backgroundSelectedImage" />
                        <variable citdl="Number" name="backgroundTopCap" />
                        <variable citdl="String" name="barColor" />
                        <variable citdl="String" name="borderColor" />
                        <variable citdl="Number" name="borderRadius" />
                        <variable citdl="Number" name="borderWidth" />
                        <variable citdl="Number or String" name="bottom" />
                        <variable citdl="Object" name="center" />
                        <variable citdl="String" name="editButtonTitle" />
                        <variable citdl="Boolean" name="focusable" />
                        <variable citdl="String" name="font-family" />
                        <variable citdl="String" name="font-size" />
                        <variable citdl="String" name="font-style" />
                        <variable citdl="String" name="font-weight" />
                        <variable citdl="Number or String" name="height" />
                        <variable citdl="Number or String" name="left" />
                        <variable citdl="Number" name="opacity" />
                        <variable citdl="Number or String" name="right" />
                        <variable citdl="Object" name="size" />
                        <variable citdl="Number" name="softKeyboardOnFocus" />
                        <variable citdl="Array" name="tabs" />
                        <variable citdl="Number or String" name="top" />
                        <variable citdl="Boolean" name="touchEnabled" />
                        <variable citdl="Object" name="transform" />
                        <variable citdl="Boolean" name="visible" />
                        <variable citdl="Number or String" name="width" />
                        <variable citdl="Number" name="zIndex" />
                    </scope>
                    <!-- Titanium.UI.TabbedBar object -->
                    <scope ilk="class" name="TabbedBar" doc="A Tabbed Bar is created by the method Titanium.UI.createTabbedBar. The difference between the Tabbed Bar and the Button Bar is that the tabbed bar visually maintains a state (visually distinguished as a pressed or selected look). Platforms = [iphone, ipad]" returns="Object">
                        <scope doc="Add a child to the view hierarchy." ilk="function" name="add" returns="void" signature="add(view) -&gt; titanium" />
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Animate the view." ilk="function" name="animate" returns="void" signature="animate(properties, callback) -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Hide the view." ilk="function" name="hide" returns="void" signature="hide() -&gt; titanium" />
                        <scope doc="Remove a previously add view from the view hierarchy." ilk="function" name="remove" returns="void" signature="remove(view) -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Make the view visible." ilk="function" name="show" returns="void" signature="show() -&gt; titanium" />
                        <scope doc="Return a Blob image of the rendered view." ilk="function" name="toImage" returns="Object" signature="toImage(callback) -&gt; titanium" />
                        <variable citdl="Object" name="anchorPoint" />
                        <variable citdl="Object" name="animatedCenterPoint" />
                        <variable citdl="String" name="backgroundColor" />
                        <variable citdl="String" name="backgroundDisabledColor" />
                        <variable citdl="String" name="backgroundDisabledImage" />
                        <variable citdl="String" name="backgroundFocusedColor" />
                        <variable citdl="String" name="backgroundFocusedImage" />
                        <variable citdl="Object" name="backgroundGradient" />
                        <variable citdl="String" name="backgroundImage" />
                        <variable citdl="Number" name="backgroundLeftCap" />
                        <variable citdl="String" name="backgroundSelectedColor" />
                        <variable citdl="String" name="backgroundSelectedImage" />
                        <variable citdl="Number" name="backgroundTopCap" />
                        <variable citdl="String" name="borderColor" />
                        <variable citdl="Number" name="borderRadius" />
                        <variable citdl="Number" name="borderWidth" />
                        <variable citdl="Number or String" name="bottom" />
                        <variable citdl="Object" name="center" />
                        <variable citdl="Boolean" name="focusable" />
                        <variable citdl="String" name="font-family" />
                        <variable citdl="String" name="font-size" />
                        <variable citdl="String" name="font-style" />
                        <variable citdl="String" name="font-weight" />
                        <variable citdl="Number or String" name="height" />
                        <variable citdl="Number" name="index" />
                        <variable citdl="Array" name="labels" />
                        <variable citdl="Number or String" name="left" />
                        <variable citdl="Number" name="opacity" />
                        <variable citdl="Number or String" name="right" />
                        <variable citdl="Object" name="size" />
                        <variable citdl="Number" name="softKeyboardOnFocus" />
                        <variable citdl="Number" name="style" />
                        <variable citdl="Number or String" name="top" />
                        <variable citdl="Boolean" name="touchEnabled" />
                        <variable citdl="Object" name="transform" />
                        <variable citdl="Boolean" name="visible" />
                        <variable citdl="Number or String" name="width" />
                        <variable citdl="Number" name="zIndex" />
                    </scope>
                    <!-- Titanium.UI.TableView object -->
                    <scope ilk="class" name="TableView" doc="A Table View allows you to create a scrollable table of content in a list-based fashion. The Table View is created by the method Titanium.UI.createTableView. Platforms = [android, iphone, ipad]" returns="Object">
                        <scope doc="Add a child to the view hierarchy." ilk="function" name="add" returns="void" signature="add(view) -&gt; titanium" />
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Animate the view." ilk="function" name="animate" returns="void" signature="animate(properties, callback) -&gt; titanium" />
                        <scope doc="Append a row to the table, optionally with animation." ilk="function" name="appendRow" returns="void" signature="appendRow(row, properties) -&gt; titanium" />
                        <scope doc="Delete an existing row, optionally with animation." ilk="function" name="deleteRow" returns="void" signature="deleteRow(row, properties) -&gt; titanium" />
                        <scope doc="Programmatically deselect a row." ilk="function" name="deselectRow" returns="void" signature="deselectRow(row) -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Hide the view." ilk="function" name="hide" returns="void" signature="hide() -&gt; titanium" />
                        <scope doc="Insert a row before another row, optionally with animation." ilk="function" name="insertRowAfter" returns="void" signature="insertRowAfter(index, row, properties) -&gt; titanium" />
                        <scope doc="Insert a row after another row, optionally with animation." ilk="function" name="insertRowBefore" returns="void" signature="insertRowBefore(index, row, properties) -&gt; titanium" />
                        <scope doc="Remove a previously add view from the view hierarchy." ilk="function" name="remove" returns="void" signature="remove(view) -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Scroll to a specific row index and ensure that that row is on screen." ilk="function" name="scrollToIndex" returns="void" signature="scrollToIndex(index, properties) -&gt; titanium" />
                        <scope doc="Scroll the table to a specific top position where 0 is the topmost y position in the table view." ilk="function" name="scrollToTop" returns="void" signature="scrollToTop(top, properties) -&gt; titanium" />
                        <scope doc="Programmatically select a row." ilk="function" name="selectRow" returns="void" signature="selectRow(row) -&gt; titanium" />
                        <scope doc="Set the data in the table, optionally with animation." ilk="function" name="setData" returns="void" signature="setData(data, properties) -&gt; titanium" />
                        <scope doc="Make the view visible." ilk="function" name="show" returns="void" signature="show() -&gt; titanium" />
                        <scope doc="Return a Blob image of the rendered view." ilk="function" name="toImage" returns="Object" signature="toImage(callback) -&gt; titanium" />
                        <scope doc="Update an existing row, optionally with animation." ilk="function" name="updateRow" returns="void" signature="updateRow(row, properties) -&gt; titanium" />
                        <variable citdl="Boolean" name="allowsSelection" />
                        <variable citdl="Object" name="anchorPoint" />
                        <variable citdl="Object" name="animatedCenterPoint" />
                        <variable citdl="String" name="backgroundColor" />
                        <variable citdl="String" name="backgroundDisabledColor" />
                        <variable citdl="String" name="backgroundDisabledImage" />
                        <variable citdl="String" name="backgroundFocusedColor" />
                        <variable citdl="String" name="backgroundFocusedImage" />
                        <variable citdl="Object" name="backgroundGradient" />
                        <variable citdl="String" name="backgroundImage" />
                        <variable citdl="Number" name="backgroundLeftCap" />
                        <variable citdl="String" name="backgroundSelectedColor" />
                        <variable citdl="String" name="backgroundSelectedImage" />
                        <variable citdl="Number" name="backgroundTopCap" />
                        <variable citdl="String" name="borderColor" />
                        <variable citdl="Number" name="borderRadius" />
                        <variable citdl="Number" name="borderWidth" />
                        <variable citdl="Number or String" name="bottom" />
                        <variable citdl="Object" name="center" />
                        <variable citdl="Array" name="data" />
                        <variable citdl="Boolean" name="editable" />
                        <variable citdl="Boolean" name="editing" />
                        <variable citdl="String" name="filterAttribute" />
                        <variable citdl="Boolean" name="filterCaseInsensitive" />
                        <variable citdl="Boolean" name="focusable" />
                        <variable citdl="String" name="font-family" />
                        <variable citdl="String" name="font-size" />
                        <variable citdl="String" name="font-style" />
                        <variable citdl="String" name="font-weight" />
                        <variable citdl="String" name="footerTitle" />
                        <variable citdl="Titanium.UI.View" name="footerView" />
                        <variable citdl="String" name="headerTitle" />
                        <variable citdl="Titanium.UI.View" name="headerView" />
                        <variable citdl="Number or String" name="height" />
                        <variable citdl="Array" name="index" />
                        <variable citdl="Number or String" name="left" />
                        <variable citdl="Number" name="maxRowHeight" />
                        <variable citdl="Number" name="minRowHeight" />
                        <variable citdl="Boolean" name="moving" />
                        <variable citdl="Number" name="opacity" />
                        <variable citdl="Number or String" name="right" />
                        <variable citdl="Number" name="rowHeight" />
                        <variable citdl="Boolean" name="scrollable" />
                        <!-- SearchBar? or TextArea? -->
                        <variable citdl="Object" name="search" />
                        <variable citdl="Boolean" name="searchHidden" />
                        <variable citdl="String" name="separatorColor" />
                        <variable citdl="Number" name="separatorStyle" />
                        <variable citdl="Object" name="size" />
                        <variable citdl="Number" name="softKeyboardOnFocus" />
                        <variable citdl="Number" name="style" />
                        <variable citdl="Number or String" name="top" />
                        <variable citdl="Boolean" name="touchEnabled" />
                        <variable citdl="Object" name="transform" />
                        <variable citdl="Boolean" name="visible" />
                        <variable citdl="Number or String" name="width" />
                        <variable citdl="Number" name="zIndex" />
                    </scope>
                    <!-- Titanium.UI.TableViewRow object -->
                    <scope ilk="class" name="TableViewRow" doc="A TableView row object created by the method Titanium.UI.createTableViewRow. Platforms = [android, iphone, ipad]" returns="Object">
                        <scope doc="Add a child to the view hierarchy." ilk="function" name="add" returns="void" signature="add(view) -&gt; titanium" />
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Animate the view." ilk="function" name="animate" returns="void" signature="animate(properties, callback) -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Hide the view." ilk="function" name="hide" returns="void" signature="hide() -&gt; titanium" />
                        <scope doc="Remove a previously add view from the view hierarchy." ilk="function" name="remove" returns="void" signature="remove(view) -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Make the view visible." ilk="function" name="show" returns="void" signature="show() -&gt; titanium" />
                        <scope doc="Return a Blob image of the rendered view." ilk="function" name="toImage" returns="Object" signature="toImage(callback) -&gt; titanium" />
                        <variable citdl="Object" name="anchorPoint" />
                        <variable citdl="Object" name="animatedCenterPoint" />
                        <variable citdl="String" name="backgroundColor" />
                        <variable citdl="String" name="backgroundDisabledColor" />
                        <variable citdl="String" name="backgroundDisabledImage" />
                        <variable citdl="String" name="backgroundFocusedColor" />
                        <variable citdl="String" name="backgroundFocusedImage" />
                        <variable citdl="Object" name="backgroundGradient" />
                        <variable citdl="String" name="backgroundImage" />
                        <variable citdl="Number" name="backgroundLeftCap" />
                        <variable citdl="String" name="backgroundSelectedColor" />
                        <variable citdl="String" name="backgroundSelectedImage" />
                        <variable citdl="Number" name="backgroundTopCap" />
                        <variable citdl="String" name="borderColor" />
                        <variable citdl="Number" name="borderRadius" />
                        <variable citdl="Number" name="borderWidth" />
                        <variable citdl="Number or String" name="bottom" />
                        <variable citdl="Object" name="center" />
                        <variable citdl="String" name="className" />
                        <variable citdl="String" name="color" />
                        <variable citdl="Boolean" name="focusable" />
                        <variable citdl="String" name="font-family" />
                        <variable citdl="String" name="font-size" />
                        <variable citdl="String" name="font-style" />
                        <variable citdl="String" name="font-weight" />
                        <variable citdl="Boolean" name="hasCheck" />
                        <variable citdl="Boolean" name="hasChild" />
                        <variable citdl="Boolean" name="hasDetail" />
                        <variable citdl="Number or String" name="height" />
                        <variable citdl="Number" name="indentionLevel" />
                        <variable citdl="String" name="layout" />
                        <variable citdl="Number or String" name="left" />
                        <variable citdl="String" name="leftImage" />
                        <variable citdl="Number" name="opacity" />
                        <variable citdl="Number or String" name="right" />
                        <variable citdl="String" name="rightImage" />
                        <variable citdl="String" name="selectedBackgroundColor" />
                        <variable citdl="String" name="selectedBackgroundImage" />
                        <variable citdl="String" name="selectedColor" />
                        <variable citdl="Number" name="selectionStyle" />
                        <variable citdl="Object" name="size" />
                        <variable citdl="Number" name="softKeyboardOnFocus" />
                        <variable citdl="String" name="title" />
                        <variable citdl="Number or String" name="top" />
                        <variable citdl="Boolean" name="touchEnabled" />
                        <variable citdl="Object" name="transform" />
                        <variable citdl="Boolean" name="visible" />
                        <variable citdl="Number or String" name="width" />
                        <variable citdl="Number" name="zIndex" />
                    </scope>
                    <!-- Titanium.UI.TableViewSection object -->
                    <scope ilk="class" name="TableViewSection" doc="A TableView section object created by the method Titanium.UI.createTableViewSection. Platforms = [android, iphone, ipad]" returns="Object">
                        <scope doc="Add a child to the view hierarchy." ilk="function" name="add" returns="void" signature="add(view) -&gt; titanium" />
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Animate the view." ilk="function" name="animate" returns="void" signature="animate(properties, callback) -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Hide the view." ilk="function" name="hide" returns="void" signature="hide() -&gt; titanium" />
                        <scope doc="Remove a previously add view from the view hierarchy." ilk="function" name="remove" returns="void" signature="remove(view) -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Make the view visible." ilk="function" name="show" returns="void" signature="show() -&gt; titanium" />
                        <scope doc="Return a Blob image of the rendered view." ilk="function" name="toImage" returns="Object" signature="toImage(callback) -&gt; titanium" />
                        <variable citdl="Object" name="anchorPoint" />
                        <variable citdl="Object" name="animatedCenterPoint" />
                        <variable citdl="String" name="backgroundColor" />
                        <variable citdl="String" name="backgroundDisabledColor" />
                        <variable citdl="String" name="backgroundDisabledImage" />
                        <variable citdl="String" name="backgroundFocusedColor" />
                        <variable citdl="String" name="backgroundFocusedImage" />
                        <variable citdl="Object" name="backgroundGradient" />
                        <variable citdl="String" name="backgroundImage" />
                        <variable citdl="Number" name="backgroundLeftCap" />
                        <variable citdl="String" name="backgroundSelectedColor" />
                        <variable citdl="String" name="backgroundSelectedImage" />
                        <variable citdl="Number" name="backgroundTopCap" />
                        <variable citdl="String" name="borderColor" />
                        <variable citdl="Number" name="borderRadius" />
                        <variable citdl="Number" name="borderWidth" />
                        <variable citdl="Number or String" name="bottom" />
                        <variable citdl="Object" name="center" />
                        <variable citdl="Boolean" name="focusable" />
                        <variable citdl="String" name="font-family" />
                        <variable citdl="String" name="font-size" />
                        <variable citdl="String" name="font-style" />
                        <variable citdl="String" name="font-weight" />
                        <variable citdl="String" name="footerTitle" />
                        <variable citdl="Titanium.UI.View" name="footerView" />
                        <variable citdl="String" name="headerTitle" />
                        <variable citdl="Titanium.UI.View" name="headerView" />
                        <variable citdl="Number or String" name="height" />
                        <variable citdl="Number or String" name="left" />
                        <variable citdl="Number" name="opacity" />
                        <variable citdl="Number or String" name="right" />
                        <variable citdl="Number" name="rowCount" />
                        <variable citdl="Object" name="size" />
                        <variable citdl="Number" name="softKeyboardOnFocus" />
                        <variable citdl="Number or String" name="top" />
                        <variable citdl="Boolean" name="touchEnabled" />
                        <variable citdl="Object" name="transform" />
                        <variable citdl="Boolean" name="visible" />
                        <variable citdl="Number or String" name="width" />
                        <variable citdl="Number" name="zIndex" />
                    </scope>
                    <!-- Titanium.UI.TextArea object -->
                    <scope ilk="class" name="TextArea" doc="A Text Area is created by the method Titanium.UI.createTextArea. The Text Area is a multiline field. Platforms = [android, iphone, ipad]" returns="Object">
                        <scope doc="Add a child to the view hierarchy." ilk="function" name="add" returns="void" signature="add(view) -&gt; titanium" />
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Animate the view." ilk="function" name="animate" returns="void" signature="animate(properties, callback) -&gt; titanium" />
                        <scope doc="Force the field to lose focus." ilk="function" name="blur" returns="void" signature="blur() -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Force the field to gain focus." ilk="function" name="focus" returns="void" signature="focus() -&gt; titanium" />
                        <scope doc="Return boolean (true) if the field has text." ilk="function" name="hasText" returns="Boolean" signature="hasText() -&gt; titanium" />
                        <scope doc="Hide the view." ilk="function" name="hide" returns="void" signature="hide() -&gt; titanium" />
                        <scope doc="Remove a previously add view from the view hierarchy." ilk="function" name="remove" returns="void" signature="remove(view) -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Make the view visible." ilk="function" name="show" returns="void" signature="show() -&gt; titanium" />
                        <scope doc="Return a Blob image of the rendered view." ilk="function" name="toImage" returns="Object" signature="toImage(callback) -&gt; titanium" />
                        <variable citdl="Object" name="anchorPoint" />
                        <variable citdl="Object" name="animatedCenterPoint" />
                        <variable citdl="String" name="backgroundColor" />
                        <variable citdl="String" name="backgroundDisabledColor" />
                        <variable citdl="String" name="backgroundDisabledImage" />
                        <variable citdl="String" name="backgroundFocusedColor" />
                        <variable citdl="String" name="backgroundFocusedImage" />
                        <variable citdl="Object" name="backgroundGradient" />
                        <variable citdl="String" name="backgroundImage" />
                        <variable citdl="Number" name="backgroundLeftCap" />
                        <variable citdl="String" name="backgroundSelectedColor" />
                        <variable citdl="String" name="backgroundSelectedImage" />
                        <variable citdl="Number" name="backgroundTopCap" />
                        <variable citdl="String" name="borderColor" />
                        <variable citdl="Number" name="borderRadius" />
                        <variable citdl="Number" name="borderWidth" />
                        <variable citdl="Number or String" name="bottom" />
                        <variable citdl="Object" name="center" />
                        <variable citdl="Boolean" name="editable" />
                        <variable citdl="Boolean" name="enabled" />
                        <variable citdl="Boolean" name="focusable" />
                        <variable citdl="String" name="font-family" />
                        <variable citdl="String" name="font-size" />
                        <variable citdl="String" name="font-style" />
                        <variable citdl="String" name="font-weight" />
                        <variable citdl="Number or String" name="height" />
                        <variable citdl="Array" name="keyboardToolbar" />
                        <variable citdl="String" name="keyboardToolbarColor" />
                        <variable citdl="Number" name="keyboardToolbarHeight" />
                        <variable citdl="Number or String" name="left" />
                        <variable citdl="Number" name="opacity" />
                        <variable citdl="Number or String" name="right" />
                        <variable citdl="Object" name="size" />
                        <variable citdl="Number" name="softKeyboardOnFocus" />
                        <variable citdl="Boolean" name="suppressReturn" />
                        <variable citdl="Number or String" name="top" />
                        <variable citdl="Boolean" name="touchEnabled" />
                        <variable citdl="Object" name="transform" />
                        <variable citdl="String" name="value" />
                        <variable citdl="Boolean" name="visible" />
                        <variable citdl="Number or String" name="width" />
                        <variable citdl="Number" name="zIndex" />
                    </scope>
                    <!-- Titanium.UI.TextField object -->
                    <scope ilk="class" name="TextField" doc="A Text Area is created by the method Titanium.UI.createTextField. The Text Field is a single line field. Platforms = [android, iphone, ipad]" returns="Object">
                        <scope doc="Add a child to the view hierarchy." ilk="function" name="add" returns="void" signature="add(view) -&gt; titanium" />
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Animate the view." ilk="function" name="animate" returns="void" signature="animate(properties, callback) -&gt; titanium" />
                        <scope doc="Force the field to lose focus." ilk="function" name="blur" returns="void" signature="blur() -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Force the field to gain focus." ilk="function" name="focus" returns="void" signature="focus() -&gt; titanium" />
                        <scope doc="Return boolean (true) if the field has text." ilk="function" name="hasText" returns="Boolean" signature="hasText() -&gt; titanium" />
                        <scope doc="Hide the view." ilk="function" name="hide" returns="void" signature="hide() -&gt; titanium" />
                        <scope doc="Remove a previously add view from the view hierarchy." ilk="function" name="remove" returns="void" signature="remove(view) -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Make the view visible." ilk="function" name="show" returns="void" signature="show() -&gt; titanium" />
                        <scope doc="Return a Blob image of the rendered view." ilk="function" name="toImage" returns="Object" signature="toImage(callback) -&gt; titanium" />
                        <variable citdl="Object" name="anchorPoint" />
                        <variable citdl="Object" name="animatedCenterPoint" />
                        <variable citdl="String" name="backgroundColor" />
                        <variable citdl="String" name="backgroundDisabledColor" />
                        <variable citdl="String" name="backgroundDisabledImage" />
                        <variable citdl="String" name="backgroundFocusedColor" />
                        <variable citdl="String" name="backgroundFocusedImage" />
                        <variable citdl="Object" name="backgroundGradient" />
                        <variable citdl="String" name="backgroundImage" />
                        <variable citdl="Number" name="backgroundLeftCap" />
                        <variable citdl="String" name="backgroundSelectedColor" />
                        <variable citdl="String" name="backgroundSelectedImage" />
                        <variable citdl="Number" name="backgroundTopCap" />
                        <variable citdl="String" name="borderColor" />
                        <variable citdl="Number" name="borderRadius" />
                        <variable citdl="Number" name="borderWidth" />
                        <variable citdl="Number or String" name="bottom" />
                        <variable citdl="Object" name="center" />
                        <variable citdl="Number" name="clearButtonMode" />
                        <variable citdl="Boolean" name="clearOnEdit" />
                        <variable citdl="Boolean" name="editable" />
                        <variable citdl="Boolean" name="enabled" />
                        <variable citdl="Boolean" name="focusable" />
                        <variable citdl="String" name="font-family" />
                        <variable citdl="String" name="font-size" />
                        <variable citdl="String" name="font-style" />
                        <variable citdl="String" name="font-weight" />
                        <variable citdl="Number or String" name="height" />
                        <variable citdl="String" name="hintText" />
                        <variable citdl="Array" name="keyboardToolbar" />
                        <variable citdl="String" name="keyboardToolbarColor" />
                        <variable citdl="Number" name="keyboardToolbarHeight" />
                        <variable citdl="Number or String" name="left" />
                        <variable citdl="Object" name="leftButton" />
                        <variable citdl="Number" name="leftButtonMode" />
                        <variable citdl="Number" name="leftButtonPadding" />
                        <variable citdl="Number" name="minimumFontSize" />
                        <variable citdl="Number" name="opacity" />
                        <variable citdl="Number" name="paddingLeft" />
                        <variable citdl="Number" name="paddingRight" />
                        <variable citdl="Number or String" name="right" />
                        <variable citdl="Object" name="rightButton" />
                        <variable citdl="Number" name="rightButtonMode" />
                        <variable citdl="Number" name="rightButtonPadding" />
                        <variable citdl="Object" name="size" />
                        <variable citdl="Number" name="softKeyboardOnFocus" />
                        <variable citdl="Boolean" name="suppressReturn" />
                        <variable citdl="Number or String" name="top" />
                        <variable citdl="Boolean" name="touchEnabled" />
                        <variable citdl="Object" name="transform" />
                        <variable citdl="String" name="value" />
                        <variable citdl="Number or String" name="verticalAlign" />
                        <variable citdl="Boolean" name="visible" />
                        <variable citdl="Number or String" name="width" />
                        <variable citdl="Number" name="zIndex" />
                    </scope>
                    <!-- Titanium.UI.Toolbar object -->
                    <scope ilk="class" name="Toolbar" doc="A Toolbar is created by the method Titanium.UI.createToolbar.  A Toolbar can be placed at the bottom of a window and contain buttons. Platforms = [iphone, ipad]" returns="Object">
                        <scope doc="Add a child to the view hierarchy." ilk="function" name="add" returns="void" signature="add(view) -&gt; titanium" />
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Animate the view." ilk="function" name="animate" returns="void" signature="animate(properties, callback) -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Hide the view." ilk="function" name="hide" returns="void" signature="hide() -&gt; titanium" />
                        <scope doc="Remove a previously add view from the view hierarchy." ilk="function" name="remove" returns="void" signature="remove(view) -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Make the view visible." ilk="function" name="show" returns="void" signature="show() -&gt; titanium" />
                        <scope doc="Return a Blob image of the rendered view." ilk="function" name="toImage" returns="Object" signature="toImage(callback) -&gt; titanium" />
                        <variable citdl="Object" name="anchorPoint" />
                        <variable citdl="Object" name="animatedCenterPoint" />
                        <variable citdl="String" name="backgroundColor" />
                        <variable citdl="String" name="backgroundDisabledColor" />
                        <variable citdl="String" name="backgroundDisabledImage" />
                        <variable citdl="String" name="backgroundFocusedColor" />
                        <variable citdl="String" name="backgroundFocusedImage" />
                        <variable citdl="Object" name="backgroundGradient" />
                        <variable citdl="String" name="backgroundImage" />
                        <variable citdl="Number" name="backgroundLeftCap" />
                        <variable citdl="String" name="backgroundSelectedColor" />
                        <variable citdl="String" name="backgroundSelectedImage" />
                        <variable citdl="Number" name="backgroundTopCap" />
                        <variable citdl="String" name="borderColor" />
                        <variable citdl="Number" name="borderRadius" />
                        <variable citdl="Number" name="borderWidth" />
                        <variable citdl="Number or String" name="bottom" />
                        <variable citdl="Object" name="center" />
                        <variable citdl="Boolean" name="focusable" />
                        <variable citdl="String" name="font-family" />
                        <variable citdl="String" name="font-size" />
                        <variable citdl="String" name="font-style" />
                        <variable citdl="String" name="font-weight" />
                        <variable citdl="Number or String" name="height" />
                        <variable citdl="Number or String" name="left" />
                        <variable citdl="Number" name="opacity" />
                        <variable citdl="Number or String" name="right" />
                        <variable citdl="Object" name="size" />
                        <variable citdl="Number" name="softKeyboardOnFocus" />
                        <variable citdl="Number or String" name="top" />
                        <variable citdl="Boolean" name="touchEnabled" />
                        <variable citdl="Object" name="transform" />
                        <variable citdl="Boolean" name="visible" />
                        <variable citdl="Number or String" name="width" />
                        <variable citdl="Number" name="zIndex" />
                    </scope>
                    <!-- Titanium.UI.View object -->
                    <scope ilk="class" name="View" doc="The View is an empty drawing surface or container. The View is created by the method Titanium.UI.createView. Platforms = [android, iphone, ipad]" returns="Object">
                        <scope doc="Add a child to the view hierarchy." ilk="function" name="add" returns="void" signature="add(view) -&gt; titanium" />
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Animate the view." ilk="function" name="animate" returns="void" signature="animate(properties, callback) -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Hide the view." ilk="function" name="hide" returns="void" signature="hide() -&gt; titanium" />
                        <scope doc="Remove a previously add view from the view hierarchy." ilk="function" name="remove" returns="void" signature="remove(view) -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Make the view visible." ilk="function" name="show" returns="void" signature="show() -&gt; titanium" />
                        <scope doc="Return a Blob image of the rendered view." ilk="function" name="toImage" returns="Object" signature="toImage(callback) -&gt; titanium" />
                        <variable citdl="Object" name="anchorPoint" />
                        <variable citdl="Object" name="animatedCenterPoint" />
                        <variable citdl="String" name="backgroundColor" />
                        <variable citdl="String" name="backgroundDisabledColor" />
                        <variable citdl="String" name="backgroundDisabledImage" />
                        <variable citdl="String" name="backgroundFocusedColor" />
                        <variable citdl="String" name="backgroundFocusedImage" />
                        <variable citdl="Object" name="backgroundGradient" />
                        <variable citdl="String" name="backgroundImage" />
                        <variable citdl="Number" name="backgroundLeftCap" />
                        <variable citdl="String" name="backgroundSelectedColor" />
                        <variable citdl="String" name="backgroundSelectedImage" />
                        <variable citdl="Number" name="backgroundTopCap" />
                        <variable citdl="String" name="borderColor" />
                        <variable citdl="Number" name="borderRadius" />
                        <variable citdl="Number" name="borderWidth" />
                        <variable citdl="Number or String" name="bottom" />
                        <variable citdl="Object" name="center" />
                        <variable citdl="Boolean" name="focusable" />
                        <variable citdl="String" name="font-family" />
                        <variable citdl="String" name="font-size" />
                        <variable citdl="String" name="font-style" />
                        <variable citdl="String" name="font-weight" />
                        <variable citdl="Number or String" name="height" />
                        <variable citdl="Number or String" name="left" />
                        <variable citdl="Number" name="opacity" />
                        <variable citdl="Number or String" name="right" />
                        <variable citdl="Object" name="size" />
                        <variable citdl="Number" name="softKeyboardOnFocus" />
                        <variable citdl="Number or String" name="top" />
                        <variable citdl="Boolean" name="touchEnabled" />
                        <variable citdl="Object" name="transform" />
                        <variable citdl="Boolean" name="visible" />
                        <variable citdl="Number or String" name="width" />
                        <variable citdl="Number" name="zIndex" />
                    </scope>
                    <!-- Titanium.UI.WebView object -->
                    <scope ilk="class" name="WebView" doc="The Web View allows you to open an HTML5 based view which can load either local or remote content. The content can be any valid web content such as HTML, PDF, SVG or other WebKit supported content types. The Web View is created by the method Titanium.UI.createWebView. Platforms = [android, iphone, ipad]" returns="Object">
                        <scope doc="Add a child to the view hierarchy." ilk="function" name="add" returns="void" signature="add(view) -&gt; titanium" />
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Animate the view." ilk="function" name="animate" returns="void" signature="animate(properties, callback) -&gt; titanium" />
                        <scope doc="Returns true if the webview can go back in history." ilk="function" name="canGoBack" returns="Boolean" signature="canGoBack() -&gt; titanium" />
                        <scope doc="Returns true if the webview can go forward in history." ilk="function" name="canGoForward" returns="Boolean" signature="canGoForward() -&gt; titanium" />
                        <scope doc="Invoke JavaScript inside the context of the webview and optionally, return a result." ilk="function" name="evalJS" returns="String" signature="evalJS(content) -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Go back one entry in history to the previous page." ilk="function" name="goBack" returns="void" signature="goBack() -&gt; titanium" />
                        <scope doc="Go forward one entry in history to the page before the current page." ilk="function" name="goForward" returns="void" signature="goForward() -&gt; titanium" />
                        <scope doc="Hide the view." ilk="function" name="hide" returns="void" signature="hide() -&gt; titanium" />
                        <scope doc="Reload the current webpage." ilk="function" name="reload" returns="void" signature="reload() -&gt; titanium" />
                        <scope doc="Remove a previously add view from the view hierarchy." ilk="function" name="remove" returns="void" signature="remove(view) -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Force the webview to repaint its contents." ilk="function" name="repaint" returns="void" signature="repaint() -&gt; titanium" />
                        <scope doc="Set the basic authentication for the webview instance to be used on subsequent url requests." ilk="function" name="setBasicAuthentication" returns="void" signature="setBasicAuthentication(username, password) -&gt; titanium" />
                        <scope doc="Make the view visible." ilk="function" name="show" returns="void" signature="show() -&gt; titanium" />
                        <scope doc="Stop loading a currently loading page." ilk="function" name="stopLoading" returns="void" signature="stopLoading() -&gt; titanium" />
                        <scope doc="Return a Blob image of the rendered view." ilk="function" name="toImage" returns="Object" signature="toImage(callback) -&gt; titanium" />
                        <variable citdl="Object" name="anchorPoint" />
                        <variable citdl="Object" name="animatedCenterPoint" />
                        <variable citdl="String" name="backgroundColor" />
                        <variable citdl="String" name="backgroundDisabledColor" />
                        <variable citdl="String" name="backgroundDisabledImage" />
                        <variable citdl="String" name="backgroundFocusedColor" />
                        <variable citdl="String" name="backgroundFocusedImage" />
                        <variable citdl="Object" name="backgroundGradient" />
                        <variable citdl="String" name="backgroundImage" />
                        <variable citdl="Number" name="backgroundLeftCap" />
                        <variable citdl="String" name="backgroundSelectedColor" />
                        <variable citdl="String" name="backgroundSelectedImage" />
                        <variable citdl="Number" name="backgroundTopCap" />
                        <variable citdl="String" name="borderColor" />
                        <variable citdl="Number" name="borderRadius" />
                        <variable citdl="Number" name="borderWidth" />
                        <variable citdl="Number or String" name="bottom" />
                        <variable citdl="Object" name="center" />
                        <variable citdl="Object" name="data" />
                        <variable citdl="Boolean" name="focusable" />
                        <variable citdl="String" name="font-family" />
                        <variable citdl="String" name="font-size" />
                        <variable citdl="String" name="font-style" />
                        <variable citdl="String" name="font-weight" />
                        <variable citdl="Number or String" name="height" />
                        <variable citdl="String" name="html" />
                        <variable citdl="Number or String" name="left" />
                        <variable citdl="Boolean" name="loading" />
                        <variable citdl="Number" name="opacity" />
                        <variable citdl="Number or String" name="right" />
                        <variable citdl="Boolean" name="scalesPageToFit" />
                        <variable citdl="Object" name="size" />
                        <variable citdl="Number" name="softKeyboardOnFocus" />
                        <variable citdl="Number or String" name="top" />
                        <variable citdl="Boolean" name="touchEnabled" />
                        <variable citdl="Object" name="transform" />
                        <variable citdl="String" name="url" />
                        <variable citdl="Boolean" name="visible" />
                        <variable citdl="Number or String" name="width" />
                        <variable citdl="Number" name="zIndex" />
                    </scope>
                    <!-- Titanium.UI.Window object -->
                    <scope ilk="class" name="Window" doc="The Window is an empty drawing surface or container. The Window is created by the method Titanium.UI.createWindow. Unlike Views, Windows can be opened and closed and can have special display properties such as fullscreen or modal. Platforms = [android, iphone, ipad]" returns="Object">
                        <scope doc="Add a child to the view hierarchy." ilk="function" name="add" returns="void" signature="add(view) -&gt; titanium" />
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Animate the view." ilk="function" name="animate" returns="void" signature="animate(properties, callback) -&gt; titanium" />
                        <scope doc="Close the window." ilk="function" name="close" returns="void" signature="close(options) -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Hide the view." ilk="function" name="hide" returns="void" signature="hide() -&gt; titanium" />
                        <scope doc="Open the window." ilk="function" name="open" returns="void" signature="open(options) -&gt; titanium" />
                        <scope doc="Remove a previously add view from the view hierarchy." ilk="function" name="remove" returns="void" signature="remove(view) -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Make the view visible." ilk="function" name="show" returns="void" signature="show() -&gt; titanium" />
                        <scope doc="Return a Blob image of the rendered view." ilk="function" name="toImage" returns="Object" signature="toImage(callback) -&gt; titanium" />
                        <variable citdl="Object" name="anchorPoint" />
                        <variable citdl="Object" name="animatedCenterPoint" />
                        <variable citdl="String" name="backButtonTitle" />
                        <variable citdl="String" name="backButtonTitleImage" />
                        <variable citdl="String" name="backgroundColor" />
                        <variable citdl="String" name="backgroundDisabledColor" />
                        <variable citdl="String" name="backgroundDisabledImage" />
                        <variable citdl="String" name="backgroundFocusedColor" />
                        <variable citdl="String" name="backgroundFocusedImage" />
                        <variable citdl="Object" name="backgroundGradient" />
                        <variable citdl="String" name="backgroundImage" />
                        <variable citdl="Number" name="backgroundLeftCap" />
                        <variable citdl="String" name="backgroundSelectedColor" />
                        <variable citdl="String" name="backgroundSelectedImage" />
                        <variable citdl="Number" name="backgroundTopCap" />
                        <variable citdl="String" name="barColor" />
                        <variable citdl="String" name="barImage" />
                        <variable citdl="String" name="borderColor" />
                        <variable citdl="Number" name="borderRadius" />
                        <variable citdl="Number" name="borderWidth" />
                        <variable citdl="Number or String" name="bottom" />
                        <variable citdl="Object" name="center" />
                        <variable citdl="Boolean" name="exitOnClose" />
                        <variable citdl="Boolean" name="focusable" />
                        <variable citdl="String" name="font-family" />
                        <variable citdl="String" name="font-size" />
                        <variable citdl="String" name="font-style" />
                        <variable citdl="String" name="font-weight" />
                        <variable citdl="Boolean" name="fullscreen" />
                        <variable citdl="Number or String" name="height" />
                        <variable citdl="Number or String" name="left" />
                        <variable citdl="Titanium.UI.View" name="leftNavButton" />
                        <variable citdl="Boolean" name="modal" />
                        <variable citdl="Boolean" name="navBarHidden" />
                        <variable citdl="Number" name="opacity" />
                        <variable citdl="Array" name="orientationModes" />
                        <variable citdl="Number or String" name="right" />
                        <variable citdl="Titanium.UI.View" name="rightNavButton" />
                        <variable citdl="Object" name="size" />
                        <variable citdl="Number" name="softInputMode" />
                        <variable citdl="Number" name="softKeyboardOnFocus" />
                        <variable citdl="Boolean" name="tabBarHidden" />
                        <variable citdl="String" name="title" />
                        <variable citdl="Titanium.UI.View" name="titleControl" />
                        <variable citdl="String" name="titleImage" />
                        <variable citdl="String" name="titlePrompt" />
                        <variable citdl="String" name="titleid" />
                        <variable citdl="String" name="titlepromptid" />
                        <variable citdl="Array" name="toolbar" />
                        <variable citdl="Number or String" name="top" />
                        <variable citdl="Boolean" name="touchEnabled" />
                        <variable citdl="Object" name="transform" />
                        <variable citdl="Boolean" name="translucent" />
                        <variable citdl="String" name="url" />
                        <variable citdl="Boolean" name="visible" />
                        <variable citdl="Number or String" name="width" />
                        <variable citdl="Number" name="zIndex" />
                    </scope>
                    <!-- Titanium.UI.iOS module -->
                    <scope ilk="class" name="iOS" doc="The Apple iOS specific UI capabilities.  All properties, methods and events in this namespace will only work on the Apple iOS related devices. Platforms = [iphone, ipad]" returns="Object">
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Create and return an instance of Titanium.UI.iOS.AdView." ilk="function" name="createAdView" returns="Titanium.UI.iOS.AdView" signature="createAdView(parameters) -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <!-- Titanium.UI.iOS.AdView object -->
                        <scope ilk="class" name="AdView" doc="The AdView is a view for display Apple iAds. The View is created by the method Titanium.UI.iOS.createAdView. Platforms = [iphone, ipad]" returns="Object">
                            <scope doc="Add a child to the view hierarchy." ilk="function" name="add" returns="void" signature="add(view) -&gt; titanium" />
                            <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                            <scope doc="Animate the view." ilk="function" name="animate" returns="void" signature="animate(properties, callback) -&gt; titanium" />
                            <scope doc="A banner view action can cover your application's user interface. However, your application continues to run, and receives events normally. If your application receives an event that requires the user's attention, it can programmatically cancel the action and uncover its interface by calling cancelAction. Canceling actions frequently can cause a loss of revenue for your application." ilk="function" name="cancelAction" returns="void" signature="cancelAction() -&gt; titanium" />
                            <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                            <scope doc="Hide the view." ilk="function" name="hide" returns="void" signature="hide() -&gt; titanium" />
                            <scope doc="Remove a previously add view from the view hierarchy." ilk="function" name="remove" returns="void" signature="remove(view) -&gt; titanium" />
                            <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                            <scope doc="Make the view visible." ilk="function" name="show" returns="void" signature="show() -&gt; titanium" />
                            <scope doc="Return a Blob image of the rendered view." ilk="function" name="toImage" returns="Object" signature="toImage(callback) -&gt; titanium" />
                            <variable citdl="String" name="SIZE_320x50" />
                            <variable citdl="String" name="SIZE_480x32" />
                            <variable citdl="Object" name="anchorPoint" />
                            <variable citdl="Object" name="animatedCenterPoint" />
                            <variable citdl="String" name="backgroundColor" />
                            <variable citdl="String" name="backgroundDisabledColor" />
                            <variable citdl="String" name="backgroundDisabledImage" />
                            <variable citdl="String" name="backgroundFocusedColor" />
                            <variable citdl="String" name="backgroundFocusedImage" />
                            <variable citdl="Object" name="backgroundGradient" />
                            <variable citdl="String" name="backgroundImage" />
                            <variable citdl="Number" name="backgroundLeftCap" />
                            <variable citdl="String" name="backgroundSelectedColor" />
                            <variable citdl="String" name="backgroundSelectedImage" />
                            <variable citdl="Number" name="backgroundTopCap" />
                            <variable citdl="String" name="borderColor" />
                            <variable citdl="Number" name="borderRadius" />
                            <variable citdl="Number" name="borderWidth" />
                            <variable citdl="Number or String" name="bottom" />
                            <variable citdl="Object" name="center" />
                            <variable citdl="Boolean" name="focusable" />
                            <variable citdl="String" name="font-family" />
                            <variable citdl="String" name="font-size" />
                            <variable citdl="String" name="font-style" />
                            <variable citdl="String" name="font-weight" />
                            <variable citdl="Number or String" name="height" />
                            <variable citdl="Number or String" name="left" />
                            <variable citdl="Number" name="opacity" />
                            <variable citdl="Number or String" name="right" />
                            <variable citdl="Object" name="size" />
                            <variable citdl="Number" name="softKeyboardOnFocus" />
                            <variable citdl="Number or String" name="top" />
                            <variable citdl="Boolean" name="touchEnabled" />
                            <variable citdl="Object" name="transform" />
                            <variable citdl="Boolean" name="visible" />
                            <variable citdl="Number or String" name="width" />
                            <variable citdl="Number" name="zIndex" />
                        </scope>
                    </scope>
                    <!-- Titanium.UI.iPad module -->
                    <scope ilk="class" name="iPad" doc="The iPad specific UI capabilities.  All properties, methods and events in this namespace will only work on the Apple iPad related devices.  To develop for iPad, you will need the Apple iPhone SDK 3.2 or later and Titanium Mobile SDK 1.2 or later. For iPad UI programming guidelines, please review the iPad Human Interface Guidelines. Platforms = [ipad]" returns="Object">
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Create and return an instance of Titanium.UI.iPad.Popover." ilk="function" name="createPopover" returns="Titanium.UI.iPad.Popover" signature="createPopover(parameters) -&gt; titanium" />
                        <scope doc="Create and return an instance of Titanium.UI.iPad.SplitWindow." ilk="function" name="createSplitWindow" returns="Titanium.UI.iPad.SplitWindow" signature="createSplitWindow(parameters) -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <variable citdl="Number" name="POPOVER_ARROW_DIRECTION_ANY" />
                        <variable citdl="Number" name="POPOVER_ARROW_DIRECTION_DOWN" />
                        <variable citdl="Number" name="POPOVER_ARROW_DIRECTION_LEFT" />
                        <variable citdl="Number" name="POPOVER_ARROW_DIRECTION_RIGHT" />
                        <variable citdl="Number" name="POPOVER_ARROW_DIRECTION_UNKNOWN" />
                        <variable citdl="Number" name="POPOVER_ARROW_DIRECTION_UP" />
                        <!-- Titanium.UI.iPad.Popover object -->
                        <scope ilk="class" name="Popover" doc="A Popover is used to manage the presentation of content in a popover. You use popovers to present information temporarily but in a way that does not take over the entire screen like a modal view does. The popover content is layered on top of your existing content in a special type of window. The popover remains visible until the user taps outside of the popover window or you explicitly dismiss it. The Popover is created by the method Titanium.UI.iPad.createPopover. Platforms = [ipad]" returns="Object">
                            <scope doc="Add a child to the view hierarchy." ilk="function" name="add" returns="void" signature="add(view) -&gt; titanium" />
                            <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                            <scope doc="Animate the view." ilk="function" name="animate" returns="void" signature="animate(properties, callback) -&gt; titanium" />
                            <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                            <scope doc="Hide the view." ilk="function" name="hide" returns="void" signature="hide() -&gt; titanium" />
                            <scope doc="Remove a previously add view from the view hierarchy." ilk="function" name="remove" returns="void" signature="remove(view) -&gt; titanium" />
                            <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                            <scope doc="Change the height of the popover." ilk="function" name="setHeight" returns="void" signature="setHeight(height) -&gt; titanium" />
                            <scope doc="Change the width of the popover." ilk="function" name="setWidth" returns="void" signature="setWidth(width) -&gt; titanium" />
                            <scope doc="Make the view visible." ilk="function" name="show" returns="void" signature="show() -&gt; titanium" />
                            <scope doc="Return a Blob image of the rendered view." ilk="function" name="toImage" returns="Object" signature="toImage(callback) -&gt; titanium" />
                            <variable citdl="Object" name="anchorPoint" />
                            <variable citdl="Object" name="animatedCenterPoint" />
                            <variable citdl="Number" name="arrowDirection" />
                            <variable citdl="String" name="backgroundColor" />
                            <variable citdl="String" name="backgroundDisabledColor" />
                            <variable citdl="String" name="backgroundDisabledImage" />
                            <variable citdl="String" name="backgroundFocusedColor" />
                            <variable citdl="String" name="backgroundFocusedImage" />
                            <variable citdl="Object" name="backgroundGradient" />
                            <variable citdl="String" name="backgroundImage" />
                            <variable citdl="Number" name="backgroundLeftCap" />
                            <variable citdl="String" name="backgroundSelectedColor" />
                            <variable citdl="String" name="backgroundSelectedImage" />
                            <variable citdl="Number" name="backgroundTopCap" />
                            <variable citdl="String" name="borderColor" />
                            <variable citdl="Number" name="borderRadius" />
                            <variable citdl="Number" name="borderWidth" />
                            <variable citdl="Number or String" name="bottom" />
                            <variable citdl="Object" name="center" />
                            <variable citdl="Boolean" name="focusable" />
                            <variable citdl="String" name="font-family" />
                            <variable citdl="String" name="font-size" />
                            <variable citdl="String" name="font-style" />
                            <variable citdl="String" name="font-weight" />
                            <variable citdl="Number or String" name="height" />
                            <variable citdl="Number or String" name="left" />
                            <variable citdl="Titanium.UI.Button" name="leftNavButton" />
                            <variable citdl="Number" name="opacity" />
                            <variable citdl="Number or String" name="right" />
                            <variable citdl="Object" name="size" />
                            <variable citdl="Number" name="softKeyboardOnFocus" />
                            <variable citdl="String" name="title" />
                            <variable citdl="Number or String" name="top" />
                            <variable citdl="Boolean" name="touchEnabled" />
                            <variable citdl="Object" name="transform" />
                            <variable citdl="Boolean" name="visible" />
                            <variable citdl="Number or String" name="width" />
                            <variable citdl="Number" name="zIndex" />
                        </scope>
                        <!-- Titanium.UI.iPad.SplitWindow object -->
                        <scope ilk="class" name="SplitWindow" doc="A SplitWindow is a window that manages the presentation of two side-by-side view controllers. You use this class to implement a master-detail interface, in which the left-side view presents a list of items and the right-side presents details of the selected item. The SplitView is for use exclusively on iPad devices. The SplitWindow is created by the method Titanium.UI.iPad.createSplitWindow. Platforms = [ipad]" returns="Object">
                            <scope doc="Add a child to the view hierarchy." ilk="function" name="add" returns="void" signature="add(view) -&gt; titanium" />
                            <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                            <scope doc="Animate the view." ilk="function" name="animate" returns="void" signature="animate(properties, callback) -&gt; titanium" />
                            <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                            <scope doc="Hide the view." ilk="function" name="hide" returns="void" signature="hide() -&gt; titanium" />
                            <scope doc="Remove a previously add view from the view hierarchy." ilk="function" name="remove" returns="void" signature="remove(view) -&gt; titanium" />
                            <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                            <scope doc="Make the view visible." ilk="function" name="show" returns="void" signature="show() -&gt; titanium" />
                            <scope doc="Return a Blob image of the rendered view." ilk="function" name="toImage" returns="Object" signature="toImage(callback) -&gt; titanium" />
                            <variable citdl="Object" name="anchorPoint" />
                            <variable citdl="Object" name="animatedCenterPoint" />
                            <variable citdl="String" name="backgroundColor" />
                            <variable citdl="String" name="backgroundDisabledColor" />
                            <variable citdl="String" name="backgroundDisabledImage" />
                            <variable citdl="String" name="backgroundFocusedColor" />
                            <variable citdl="String" name="backgroundFocusedImage" />
                            <variable citdl="Object" name="backgroundGradient" />
                            <variable citdl="String" name="backgroundImage" />
                            <variable citdl="Number" name="backgroundLeftCap" />
                            <variable citdl="String" name="backgroundSelectedColor" />
                            <variable citdl="String" name="backgroundSelectedImage" />
                            <variable citdl="Number" name="backgroundTopCap" />
                            <variable citdl="String" name="borderColor" />
                            <variable citdl="Number" name="borderRadius" />
                            <variable citdl="Number" name="borderWidth" />
                            <variable citdl="Number or String" name="bottom" />
                            <variable citdl="Object" name="center" />
                            <variable citdl="Titanium.UI.View" name="detailView" />
                            <variable citdl="Boolean" name="focusable" />
                            <variable citdl="String" name="font-family" />
                            <variable citdl="String" name="font-size" />
                            <variable citdl="String" name="font-style" />
                            <variable citdl="String" name="font-weight" />
                            <variable citdl="Number or String" name="height" />
                            <variable citdl="Number or String" name="left" />
                            <variable citdl="Titanium.UI.View" name="masterView" />
                            <variable citdl="Number" name="opacity" />
                            <variable citdl="Number or String" name="right" />
                            <variable citdl="Object" name="size" />
                            <variable citdl="Number" name="softKeyboardOnFocus" />
                            <variable citdl="Number or String" name="top" />
                            <variable citdl="Boolean" name="touchEnabled" />
                            <variable citdl="Object" name="transform" />
                            <variable citdl="Boolean" name="visible" />
                            <variable citdl="Number or String" name="width" />
                            <variable citdl="Number" name="zIndex" />
                        </scope>
                    </scope>
                    <!-- Titanium.UI.iPhone module -->
                    <scope ilk="class" name="iPhone" doc="The iPhone/iPad specific UI capabilities.  All properties, methods and events in this namespace will only work on the Apple iPhone or iPad related devices. Platforms = [iphone, ipad]" returns="Object">
                        <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Create and return an instance of Titanium.UI.iPhone.NavigationGroup." ilk="function" name="createNavigationGroup" returns="Titanium.UI.iPhone.NavigationGroup" signature="createNavigationGroup(parameters) -&gt; titanium" />
                        <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                        <scope doc="Convenience method to hide the status bar." ilk="function" name="hideStatusBar" returns="void" signature="hideStatusBar(animated, animationStyle) -&gt; titanium" />
                        <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                        <scope doc="Convenience method to show the status bar." ilk="function" name="showStatusBar" returns="void" signature="showStatusBar(animated, animationStyle) -&gt; titanium" />
                        <variable citdl="Number" name="MODAL_PRESENTATION_CURRENT_CONTEXT" />
                        <variable citdl="Number" name="MODAL_PRESENTATION_FORMSHEET" />
                        <variable citdl="Number" name="MODAL_PRESENTATION_FULLSCREEN" />
                        <variable citdl="Number" name="MODAL_PRESENTATION_PAGESHEET" />
                        <variable citdl="Number" name="MODAL_TRANSITION_STYLE_COVER_VERTICAL" />
                        <variable citdl="Number" name="MODAL_TRANSITION_STYLE_CROSS_DISSOLVE" />
                        <variable citdl="Number" name="MODAL_TRANSITION_STYLE_FLIP_HORIZONTAL" />
                        <variable citdl="Number" name="MODAL_TRANSITION_STYLE_PARTIAL_CURL" />
                        <variable citdl="String" name="appBadge" />
                        <variable citdl="Boolean" name="appSupportsShakeToEdit" />
                        <variable citdl="Boolean" name="statusBarHidden" />
                        <variable citdl="Number" name="statusBarStyle" />
                        <!-- Titanium.UI.iPhone.ActivityIndicatorStyle object -->
                        <scope ilk="class" name="ActivityIndicatorStyle" doc="A set of constants for the styles available for Titanium.UI.ActivityIndicator objects. Platforms = [iphone, ipad]">
                            <variable citdl="Number" name="BIG" />
                            <variable citdl="Number" name="DARK" />
                            <variable citdl="Number" name="PLAIN" />
                        </scope>
                        <!-- Titanium.UI.iPhone.AnimationStyle object -->
                        <scope ilk="class" name="AnimationStyle" doc="A set of constants for the Animation Styles used for transitions. Platforms = [iphone, ipad]">
                            <variable citdl="Number" name="CURL_DOWN" />
                            <variable citdl="Number" name="CURL_UP" />
                            <variable citdl="Number" name="FLIP_FROM_LEFT" />
                            <variable citdl="Number" name="FLIP_FROM_RIGHT" />
                            <variable citdl="Number" name="NONE" />
                        </scope>
                        <!-- Titanium.UI.iPhone.NavigationGroup object -->
                        <scope ilk="class" name="NavigationGroup" doc="A Navigation Group implements a specialized view that manages the navigation of hierarchical content. The Navigation Group is created by the method Titanium.UI.iPhone.NavigationGroup.  A Navigation Group is very similar to Tab Bars with the exception that they do not maintain a group of windows with a interface bar at the bottom. Platforms = [iphone, ipad]" returns="Object">
                            <scope doc="Add a child to the view hierarchy." ilk="function" name="add" returns="void" signature="add(view) -&gt; titanium" />
                            <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                            <scope doc="Animate the view." ilk="function" name="animate" returns="void" signature="animate(properties, callback) -&gt; titanium" />
                            <scope doc="Close a window and remove it from the navigation group." ilk="function" name="close" returns="void" signature="close(window, properties) -&gt; titanium" />
                            <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                            <scope doc="Hide the view." ilk="function" name="hide" returns="void" signature="hide() -&gt; titanium" />
                            <scope doc="Open a window within the navigation group." ilk="function" name="open" returns="void" signature="open(window, properties) -&gt; titanium" />
                            <scope doc="Remove a previously add view from the view hierarchy." ilk="function" name="remove" returns="void" signature="remove(view) -&gt; titanium" />
                            <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                            <scope doc="Make the view visible." ilk="function" name="show" returns="void" signature="show() -&gt; titanium" />
                            <scope doc="Return a Blob image of the rendered view." ilk="function" name="toImage" returns="Object" signature="toImage(callback) -&gt; titanium" />
                            <variable citdl="Object" name="anchorPoint" />
                            <variable citdl="Object" name="animatedCenterPoint" />
                            <variable citdl="String" name="backgroundColor" />
                            <variable citdl="String" name="backgroundDisabledColor" />
                            <variable citdl="String" name="backgroundDisabledImage" />
                            <variable citdl="String" name="backgroundFocusedColor" />
                            <variable citdl="String" name="backgroundFocusedImage" />
                            <variable citdl="Object" name="backgroundGradient" />
                            <variable citdl="String" name="backgroundImage" />
                            <variable citdl="Number" name="backgroundLeftCap" />
                            <variable citdl="String" name="backgroundSelectedColor" />
                            <variable citdl="String" name="backgroundSelectedImage" />
                            <variable citdl="Number" name="backgroundTopCap" />
                            <variable citdl="String" name="borderColor" />
                            <variable citdl="Number" name="borderRadius" />
                            <variable citdl="Number" name="borderWidth" />
                            <variable citdl="Number or String" name="bottom" />
                            <variable citdl="Object" name="center" />
                            <variable citdl="Boolean" name="focusable" />
                            <variable citdl="String" name="font-family" />
                            <variable citdl="String" name="font-size" />
                            <variable citdl="String" name="font-style" />
                            <variable citdl="String" name="font-weight" />
                            <variable citdl="Number or String" name="height" />
                            <variable citdl="Number or String" name="left" />
                            <variable citdl="Number" name="opacity" />
                            <variable citdl="Number or String" name="right" />
                            <variable citdl="Object" name="size" />
                            <variable citdl="Number" name="softKeyboardOnFocus" />
                            <variable citdl="Number or String" name="top" />
                            <variable citdl="Boolean" name="touchEnabled" />
                            <variable citdl="Object" name="transform" />
                            <variable citdl="Boolean" name="visible" />
                            <variable citdl="Number or String" name="width" />
                            <variable citdl="Number" name="zIndex" />
                        </scope>
                        <!-- Titanium.UI.iPhone.ProgressBarStyle object -->
                        <scope ilk="class" name="ProgressBarStyle" doc="A set of constants for the bar styles used on the style property of Titanium.UI.ProgressBar. Platforms = [iphone, ipad]">
                            <variable citdl="Number" name="BAR" />
                            <variable citdl="Number" name="DEFAULT" />
                            <variable citdl="Number" name="PLAIN" />
                        </scope>
                        <!-- Titanium.UI.iPhone.RowAnimationStyle object -->
                        <scope ilk="class" name="RowAnimationStyle" doc="A set of constants for the Animation Styles used for transition on table view rows. Platforms = [iphone, ipad]">
                            <variable citdl="Number" name="BOTTOM" />
                            <variable citdl="Number" name="FADE" />
                            <variable citdl="Number" name="LEFT" />
                            <variable citdl="Number" name="NONE" />
                            <variable citdl="Number" name="RIGHT" />
                            <variable citdl="Number" name="TOP" />
                        </scope>
                        <!-- Titanium.UI.iPhone.ScrollIndicatorStyle object -->
                        <scope ilk="class" name="ScrollIndicatorStyle" doc="A set of constants for the styles available for Titanium.UI.ActivityIndicator objects. Platforms = [iphone, ipad]">
                            <variable citdl="Number" name="BLACK" />
                            <variable citdl="Number" name="DEFAULT" />
                            <variable citdl="Number" name="WHITE" />
                        </scope>
                        <!-- Titanium.UI.iPhone.StatusBar object -->
                        <scope ilk="class" name="StatusBar" doc="A set of constants for the status bar style. Platforms = [iphone, ipad]">
                            <variable citdl="Number" name="DEFAULT" />
                            <variable citdl="Number" name="GRAY" />
                            <variable citdl="Number" name="OPAQUE_BLACK" />
                            <variable citdl="Number" name="TRANSLUCENT_BLACK" />
                        </scope>
                        <!-- Titanium.UI.iPhone.SystemButton object -->
                        <scope ilk="class" name="SystemButton" doc="A set of constants for the system button style for buttons. Platforms = [iphone, ipad]">
                            <variable citdl="Number" name="ACTION" />
                            <variable citdl="Number" name="ACTIVITY" />
                            <variable citdl="Number" name="ADD" />
                            <variable citdl="Number" name="BOOKMARKS" />
                            <variable citdl="Number" name="CAMERA" />
                            <variable citdl="Number" name="CANCEL" />
                            <variable citdl="Number" name="COMPOSE" />
                            <variable citdl="Number" name="CONTACT_ADD" />
                            <variable citdl="Number" name="DISCLOSURE" />
                            <variable citdl="Number" name="DONE" />
                            <variable citdl="Number" name="EDIT" />
                            <variable citdl="Number" name="FAST_FORWARD" />
                            <variable citdl="Number" name="FIXED_SPACE" />
                            <variable citdl="Number" name="FLEXIBLE_SPACE" />
                            <variable citdl="Number" name="INFO_DARK" />
                            <variable citdl="Number" name="INFO_LIGHT" />
                            <variable citdl="Number" name="ORGANIZE" />
                            <variable citdl="Number" name="PAUSE" />
                            <variable citdl="Number" name="PLAY" />
                            <variable citdl="Number" name="REFRESH" />
                            <variable citdl="Number" name="REPLY" />
                            <variable citdl="Number" name="REWIND" />
                            <variable citdl="Number" name="SAVE" />
                            <variable citdl="Number" name="STOP" />
                            <variable citdl="Number" name="TRASH" />
                        </scope>
                        <!-- Titanium.UI.iPhone.SystemButtonStyle object -->
                        <scope ilk="class" name="SystemButtonStyle" doc="A set of constants for the system button styles that can be used for the button style property. Platforms = [iphone, ipad]">
                            <variable citdl="Number" name="BORDERED" />
                            <variable citdl="Number" name="DONE" />
                            <variable citdl="Number" name="PLAIN" />
                        </scope>
                        <!-- Titanium.UI.iPhone.SystemIcon object -->
                        <scope ilk="class" name="SystemIcon" doc="A set of constants for the system icon styles that can be used on a tab group tab. Platforms = [iphone, ipad]">
                            <variable citdl="Number" name="BOOKMARKS" />
                            <variable citdl="Number" name="CONTACTS" />
                            <variable citdl="Number" name="DOWNLOADS" />
                            <variable citdl="Number" name="FAVORITES" />
                            <variable citdl="Number" name="FEATURED" />
                            <variable citdl="Number" name="HISTORY" />
                            <variable citdl="Number" name="MORE" />
                            <variable citdl="Number" name="MOST_RECENT" />
                            <variable citdl="Number" name="MOST_VIEWED" />
                            <variable citdl="Number" name="RECENTS" />
                            <variable citdl="Number" name="SEARCH" />
                            <variable citdl="Number" name="TOP_RATED" />
                        </scope>
                        <!-- Titanium.UI.iPhone.TableViewCellSelectionStyle object -->
                        <scope ilk="class" name="TableViewCellSelectionStyle" doc="A set of constants for the style that can be used for the selectionStyle property of Titanium.UI.TableViewRow. Platforms = [iphone, ipad]">
                            <variable citdl="Number" name="BLUE" />
                            <variable citdl="Number" name="GRAY" />
                            <variable citdl="Number" name="NONE" />
                        </scope>
                        <!-- Titanium.UI.iPhone.TableViewScrollPosition object -->
                        <scope ilk="class" name="TableViewScrollPosition" doc="A set of constants for the position value that can be used for the position property of Titanium.UI.TableView when invoking scrollToIndex. Platforms = [iphone, ipad]">
                            <variable citdl="Number" name="BOTTOM" />
                            <variable citdl="Number" name="MIDDLE" />
                            <variable citdl="Number" name="NONE" />
                            <variable citdl="Number" name="TOP" />
                        </scope>
                        <!-- Titanium.UI.iPhone.TableViewSeparatorStyle object -->
                        <scope ilk="class" name="TableViewSeparatorStyle" doc="A set of constants for the style that can be used for the separatorStyle property of Titanium.UI.TableView. Platforms = [iphone, ipad]">
                            <variable citdl="Number" name="NONE" />
                            <variable citdl="Number" name="SINGLE_LINE" />
                        </scope>
                        <!-- Titanium.UI.iPhone.TableViewStyle object -->
                        <scope ilk="class" name="TableViewStyle" doc="A set of constants for the style that can be used for the button style property of Titanium.UI.TableView. Platforms = [iphone, ipad]">
                            <variable citdl="Number" name="GROUPED" />
                            <variable citdl="Number" name="PLAIN" />
                        </scope>
                    </scope>
                </scope>

                <!-- Titanium.Utils module -->
                <scope ilk="class" name="Utils" doc="The top level Utils module.  The Utils module is a set of common JavaScript functions that are useful for applications. Platforms = [android, iphone, ipad]" returns="Object">
                    <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                    <scope doc="Decode a Base64 string." ilk="function" name="base64decode" returns="String" signature="base64decode(str) -&gt; titanium" />
                    <scope doc="Encode a string into Base64." ilk="function" name="base64encode" returns="String" signature="base64encode(str) -&gt; titanium" />
                    <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                    <scope doc="Compute a MD5 hash algorithm against the input and return a hex-based string." ilk="function" name="md5HexDigest" returns="String" signature="md5HexDigest(str) -&gt; titanium" />
                    <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                </scope>
                <!-- Titanium.XML module -->
                <scope ilk="class" name="XML" doc="The top level XML module.  The XML module is used parsing and processing XML-based content. Platforms = [android, iphone, ipad]" returns="Object">
                    <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                    <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                    <scope doc="Parse an XML string into a DOMDocument." ilk="function" name="parseString" returns="Titanium.XML.DOMDocument" signature="parseString(xml) -&gt; titanium" />
                    <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                    <scope doc="Serialize a DOMDocument or DOMNode and its descendants into an XML string." ilk="function" name="serializeToString" returns="String" signature="serializeToString(node) -&gt; titanium" />
                    <!-- Titanium.XML.DOMDocument object -->
                    <scope ilk="class" name="DOMDocument" doc="The DOMDocument returned from Titanium.XML.parseString. The result is an object that implements the DOM Level 2 API. Platforms = [android, iphone, ipad]">
                    </scope>
                </scope>
                <!-- Titanium.Yahoo module -->
                <scope ilk="class" name="Yahoo" doc="The top level Yahoo module.  The Yahoo module is used for accessing Yahoo related API services. Platforms = [android, iphone, ipad]" returns="Object">
                    <scope doc="Add an event listener for the instance to receive view triggered events." ilk="function" name="addEventListener" returns="void" signature="addEventListener(name, callback) -&gt; titanium" />
                    <scope doc="Fire a synthesized event to the views listener." ilk="function" name="fireEvent" returns="void" signature="fireEvent(name, event) -&gt; titanium" />
                    <scope doc="Remove a previously added event listener." ilk="function" name="removeEventListener" returns="void" signature="removeEventListener(name, callback) -&gt; titanium" />
                    <scope doc="Invoke a Yahoo YQL query." ilk="function" name="yql" returns="void" signature="yql(yql) -&gt; titanium" />
                </scope>
            </scope>
            <scope classrefs="Titanium" ilk="class" name="Ti">
            </scope>
        </scope>
    </file>
</codeintel>
